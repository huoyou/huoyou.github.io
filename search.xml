<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>webhooks中node npm pnpm不生效</title>
      <link href="/archives/settings/%E4%BA%91%E6%9C%8D%E5%8A%A1%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE.html"/>
      <url>/archives/settings/%E4%BA%91%E6%9C%8D%E5%8A%A1%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> NPM=<span class="string">&quot;/root/.nvm/versions/node/v16.15.0/bin/&quot;</span></span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$NPM</span></span><br><span class="line"><span class="built_in">export</span> <span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">pnpm -v</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">v16.15.0</span><br><span class="line">8.5.5</span><br><span class="line">7.1.9</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>使用git npm命令时加sudo有时会导致命令不生效</p></div>]]></content>
      
      
      <categories>
          
          <category> 配置类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云服务 </tag>
            
            <tag> Shell </tag>
            
            <tag> Webhooks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo,butterfly添加系列文章功能（二级目录）</title>
      <link href="/archives/hexo/series.html"/>
      <url>/archives/hexo/series.html</url>
      
        <content type="html"><![CDATA[<p>本篇文章基於 hexo + butterfly</p><p>当我们写一个系列文章的时候，想要在所属该系列的文章上方都展示一个类似于目录的结构，便于反复横跳整个系列。</p><p>废话不多说，直接开干！</p><p>新建两篇文章用来测试，由于是测试用的，通过hide属性隐藏不在首页展示。</p><p>新建test.md</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">// source\<span class="emphasis">_posts\other\test.md</span></span></span><br><span class="line"><span class="emphasis"><span class="section">---</span></span></span><br><span class="line"><span class="emphasis"><span class="section">title: test</span></span></span><br><span class="line"><span class="emphasis"><span class="section">date: 2022-01-18 21:57:56</span></span></span><br><span class="line"><span class="emphasis"><span class="section">series: 测试二级目录</span></span></span><br><span class="line"><span class="emphasis"><span class="section">hide: true</span></span></span><br><span class="line"><span class="emphasis"><span class="section">tags:</span></span></span><br><span class="line"><span class="emphasis"><span class="section">  - Tools</span></span></span><br><span class="line"><span class="emphasis"><span class="section">categories:</span></span></span><br><span class="line"><span class="emphasis"><span class="section">  - Tools</span></span></span><br><span class="line"><span class="emphasis"><span class="section">---</span></span></span><br><span class="line"><span class="emphasis"><span class="section">## test</span></span></span><br></pre></td></tr></table></figure><p>新建test1.md</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">// source\<span class="emphasis">_posts\other\test1.md</span></span></span><br><span class="line"><span class="emphasis"><span class="section">---</span></span></span><br><span class="line"><span class="emphasis"><span class="section">title: test1</span></span></span><br><span class="line"><span class="emphasis"><span class="section">date: 2022-01-18 21:59:33</span></span></span><br><span class="line"><span class="emphasis"><span class="section">series: 测试二级目录</span></span></span><br><span class="line"><span class="emphasis"><span class="section">hide: true</span></span></span><br><span class="line"><span class="emphasis"><span class="section">tags:</span></span></span><br><span class="line"><span class="emphasis"><span class="section">  - Tools</span></span></span><br><span class="line"><span class="emphasis"><span class="section">categories:</span></span></span><br><span class="line"><span class="emphasis"><span class="section">  - Tools</span></span></span><br><span class="line"><span class="emphasis"><span class="section">---</span></span></span><br><span class="line"><span class="emphasis"><span class="section">## test1</span></span></span><br></pre></td></tr></table></figure><div class="tip warning faa-horizontal animated-hover"><p>⚠️ 注意：关键点在于添加相同的series，以便于后期通过series遍历写入TOC </p></div><p>不想每次手动添加series的，可以修改scaffolds\post.md，这样添加series后每次新建就自带series了</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">// scaffolds\post.md</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">series: </span><br><span class="line">tags:</span><br><span class="line"><span class="section">categories:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p><strong>接下来，就是核心步骤，遍历展示目录结构</strong></p><p>pug语法注意缩进！</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">// themes\Butterfly\layout\post.pug</span><br><span class="line"></span><br><span class="line">extends includes/layout.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  #post</span><br><span class="line"><span class="code">    if top_img === false</span></span><br><span class="line"><span class="code">      include includes/header/post-info.pug</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">    //- 添加二級目錄 start</span></span><br><span class="line"><span class="code">    if page.series</span></span><br><span class="line"><span class="code">      div.post-series</span></span><br><span class="line"><span class="code">        h3 #&#123;page.series&#125;-系列：</span></span><br><span class="line"><span class="code">        - let list = site.posts.sort(&#x27;date&#x27;, -1)</span></span><br><span class="line"><span class="code">        - list.each(function(article)&#123;</span></span><br><span class="line"><span class="code">          if article.series == page.series</span></span><br><span class="line"><span class="code">            - let link = article.link || article.path</span></span><br><span class="line"><span class="code">            - let title = article.title || _p(&#x27;no_title&#x27;)</span></span><br><span class="line"><span class="code">            li</span></span><br><span class="line"><span class="code">              a.title(href=url_for(link) title=title)= title</span></span><br><span class="line"><span class="code">        - &#125;)</span></span><br><span class="line"><span class="code">    //- 添加二級目錄 end</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">    article#article-container.post-content!=page.content</span></span><br></pre></td></tr></table></figure><p>验证效果，如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn/imgs/series-test.png" alt="series-test"></p><p>初步完成，各位大佬可以自己改改样式…</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test1</title>
      <link href="/archives/tools/test1.html"/>
      <url>/archives/tools/test1.html</url>
      
        <content type="html"><![CDATA[<h2 id="test1"><a href="#test1" class="headerlink" title="test1"></a>test1</h2>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/archives/tools/test.html"/>
      <url>/archives/tools/test.html</url>
      
        <content type="html"><![CDATA[<h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>defineProperty与proxy的区别</title>
      <link href="/archives/code/proxy.html"/>
      <url>/archives/code/proxy.html</url>
      
        <content type="html"><![CDATA[<h2 id="definePropety"><a href="#definePropety" class="headerlink" title="definePropety"></a>definePropety</h2><p>ES5 提供了 Object.defineProperty 方法，该方法可以在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回这个对象。<br>​</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(obj, prop, descriptor);</span><br></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ol><li>obj: 要在其上定义属性的对象。</li><li>prop: 要定义或修改的属性的名称。</li><li>descriptor: 将被定义或修改的属性的描述符。</li></ol><p>第三个参数 descriptor 所表示的属性描述符有两种形式：<strong>数据描述符</strong>和<strong>存取描述符</strong>。<br><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn/imgs/descriptor.png" alt="属性描述符descriptor.png"></p><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;&#125;,</span><br><span class="line">  value = <span class="number">9</span>;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(obj, <span class="string">&quot;age&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">get</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;get&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">set</span>: <span class="keyword">function</span> (<span class="params">val</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;set&quot;</span>);</span><br><span class="line">    value = val;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">age</span>); <span class="comment">// get 9</span></span><br><span class="line">obj.<span class="property">age</span> = <span class="number">18</span>; <span class="comment">// set</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">age</span>); <span class="comment">// get 18</span></span><br></pre></td></tr></table></figure><h2 id="proxy"><a href="#proxy" class="headerlink" title="proxy"></a>proxy</h2><p>使用 defineProperty 只能重定义属性的读取（get）和设置（set）行为，到了 ES6，提供了 Proxy，可以重定义更多的行为，比如 in、delete、函数调用等更多行为。<br>​</p><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> proxy = <span class="keyword">new</span> <span class="title class_">Proxy</span>(target, handler);</span><br></pre></td></tr></table></figure><h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><p>proxy 对象的所有用法，都是上面这种形式，不同的只是 handler 参数的写法。其中，new Proxy()表示生成一个 Proxy 实例，target 参数表示所要拦截的目标对象，handler 参数也是一个对象，用来定制拦截行为。<br>​</p><h4 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> proxy = <span class="keyword">new</span> <span class="title class_">Proxy</span>(</span><br><span class="line">  &#123;&#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">get</span>: <span class="keyword">function</span> (<span class="params">obj, prop</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;设置 get 操作&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> obj[prop];</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">set</span>: <span class="keyword">function</span> (<span class="params">obj, prop, value</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;设置 set 操作&quot;</span>);</span><br><span class="line">      obj[prop] = value;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">proxy.<span class="property">time</span> = <span class="number">35</span>; <span class="comment">// 设置 set 操作</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(proxy.<span class="property">time</span>); <span class="comment">// 设置 get 操作 // 35</span></span><br></pre></td></tr></table></figure><p>除了 get 和 set 之外，proxy 可以拦截多达 13 种操作，比如 has(target, propKey)，可以拦截 propKey in proxy 的操作，返回一个布尔值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用 has 方法隐藏某些属性，不被 in 运算符发现</span></span><br><span class="line"><span class="keyword">var</span> handler = &#123;</span><br><span class="line">  <span class="title function_">has</span>(<span class="params">target, key</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (key[<span class="number">0</span>] === <span class="string">&quot;_&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> key <span class="keyword">in</span> target;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> target = &#123; <span class="attr">_prop</span>: <span class="string">&quot;foo&quot;</span>, <span class="attr">prop</span>: <span class="string">&quot;foo&quot;</span> &#125;;</span><br><span class="line"><span class="keyword">var</span> proxy = <span class="keyword">new</span> <span class="title class_">Proxy</span>(target, handler);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;_prop&quot;</span> <span class="keyword">in</span> proxy); <span class="comment">// false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝塔部署egg，并使用域名访问</title>
      <link href="/archives/other/egg.html"/>
      <url>/archives/other/egg.html</url>
      
        <content type="html"><![CDATA[<p>具体创建 egg 项目这里就不做过多叙述…请查看官网文档，本篇建立与已有 egg 仓库，宝塔的基础上。</p><h2 id="添加站点"><a href="#添加站点" class="headerlink" title="添加站点"></a>添加站点</h2><p>进入宝塔面板，点击添加站点</p><p>例如：我的 egg 项目目录就是 www/wwwroot/egg，域名是 api.xmeta.love</p><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn/imgs/image-20220115204007394.png" alt="image-20220115204007394"></p><h2 id="webhooks-自动部署"><a href="#webhooks-自动部署" class="headerlink" title="webhooks 自动部署"></a>webhooks 自动部署</h2><ol><li><p>宝塔面板的软件商店搜索安装宝塔 webhook</p></li><li><p>打开设置，点击添加，输入名称，先随便输入脚本，点击提交</p></li><li><p>点击查看密钥，记录下密钥</p></li><li><p>打开项目仓库，例如我的是 gitee，进入仓库页面，点击管理 =&gt; 部署公钥管理 =&gt; 添加公钥，添加完成后，后面别的仓库都可以共用这个公钥，无需再次创建，直接添加该公钥即可。</p><p>查看公钥命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>如果电脑上没有公钥，请创建公钥，具体参考<a href="https://www.xmeta.love/archives/other/git.html">git 常用命令篇</a></p></li><li><p>仓库页面，点击管理 =&gt; WebHooks =&gt; 添加 webhook，输入刚才查看密钥里的 post 地址</p><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn/imgs/image-20220115205333936.png" alt="image-20220115205333936"></p></li></ol><div class="tip warning faa-horizontal animated-hover"><p>⚠️ 注意：params 后的参数就是下面脚本里的<u>$1</u>，请按需修改成自己的</p></div><ol start="6"><li>编辑脚本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">#输出当前时间</span></span><br><span class="line"><span class="built_in">date</span> --<span class="built_in">date</span>=<span class="string">&#x27;0 days ago&#x27;</span> <span class="string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Start&quot;</span></span><br><span class="line"><span class="comment">#判断宝塔WebHook参数是否存在</span></span><br><span class="line"><span class="keyword">if</span> [ ! -n <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;param参数错误&quot;</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;End&quot;</span></span><br><span class="line">          <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#git项目路径</span></span><br><span class="line">gitPath=<span class="string">&quot;/www/wwwroot/<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="comment">#git 网址</span></span><br><span class="line">gitHttp=<span class="string">&quot;git@gitee.com:huoyou/<span class="variable">$1</span>.git&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Web站点路径：<span class="variable">$gitPath</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#判断项目路径是否存在</span></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$gitPath</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">cd</span> <span class="variable">$gitPath</span></span><br><span class="line">        <span class="comment">#判断是否存在git目录</span></span><br><span class="line">        <span class="keyword">if</span> [ ! -d <span class="string">&quot;.git&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;在该目录下克隆 git&quot;</span></span><br><span class="line">                git <span class="built_in">clone</span> <span class="variable">$gitHttp</span> gittemp</span><br><span class="line">                <span class="built_in">mv</span> gittemp/.git .</span><br><span class="line"><span class="built_in">rm</span> -rf gittemp</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="comment">#拉取最新的项目文件</span></span><br><span class="line">        git reset --hard origin/master</span><br><span class="line"></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;开始拉取代码&quot;</span></span><br><span class="line">        <span class="built_in">sudo</span> git pull</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;拉取完成&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#按需开启npm 部署命令</span></span><br><span class="line">        <span class="built_in">sudo</span> npm install --production</span><br><span class="line"></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;开始重启&quot;</span></span><br><span class="line">        <span class="built_in">sudo</span> npm run stop</span><br><span class="line">        <span class="built_in">sudo</span> npm run tsc</span><br><span class="line">        <span class="built_in">sudo</span> npm run start</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;重启完成&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#设置目录权限</span></span><br><span class="line">        <span class="built_in">chown</span> -R www:www <span class="variable">$gitPath</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;End&quot;</span></span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;该项目路径不存在&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;End&quot;</span></span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>做完这些，就可以实现提交代码，webhook 自动部署 egg 了。</p><h2 id="设置反向代理，通过域名访问"><a href="#设置反向代理，通过域名访问" class="headerlink" title="设置反向代理，通过域名访问"></a>设置反向代理，通过域名访问</h2><p>egg 部署完之后，只能通过你的服务器 IP 访问，例如：<a href="http://114.112.112.50:7001/">http://114.112.112.50:7001</a>, 但我们肯定不想调用这样的接口吧，这样太 low 了。。。</p><p>所以，我们需要设置反向代理，实现通过域名调用接口。</p><p>进入宝塔面板，点击 egg 站点的 设置=&gt;反向代理=&gt;添加反向代理</p><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn/imgs/image-20220115211707102.png" alt="image-20220115211707102"></p><p>来，瞅瞅效果，输入 api.xmeta.love</p><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn/imgs/image-20220115212113418.png" alt="image-20220115212113418"></p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Egg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue项目中使用iconify图标集</title>
      <link href="/archives/code/iconify.html"/>
      <url>/archives/code/iconify.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pnpm i @iconify/iconify -S</span><br><span class="line">pnpm i vite-plugin-purge-icons @iconify/json -D</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// vite.config.js</span><br><span class="line">import PurgeIcons from <span class="string">&#x27;vite-plugin-purge-icons&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default &#123;</span><br><span class="line">  plugins: [</span><br><span class="line">    PurgeIcons(&#123;</span><br><span class="line">      /* PurgeIcons Options */</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// main.js</span><br><span class="line">import &#123; createApp &#125; from <span class="string">&#x27;vue&#x27;</span></span><br><span class="line">import App from <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line">// 新增</span><br><span class="line">import <span class="string">&#x27;@purge-icons/generated&#x27;</span></span><br><span class="line"></span><br><span class="line">createApp(App).mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="封装全局组建"><a href="#封装全局组建" class="headerlink" title="封装全局组建"></a>封装全局组建</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// AppIcon.vue</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;span :style=<span class="string">&quot;&#123; fontSize: size &#125;&quot;</span>&gt;</span><br><span class="line">    &lt;span class=<span class="string">&quot;iconify m-iconify&quot;</span> :data-icon=<span class="string">&quot;icon&quot;</span>&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=<span class="string">&quot;ts&quot;</span>&gt;</span><br><span class="line">  const props = defineProps(&#123;</span><br><span class="line">    icon: &#123; <span class="built_in">type</span>: String, required: <span class="literal">true</span> &#125;,</span><br><span class="line">    size: &#123; <span class="built_in">type</span>: String, default: <span class="string">&#x27;18&#x27;</span> &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  const &#123; size, icon &#125; = toRefs(props);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=<span class="string">&quot;scss&quot;</span>&gt;</span><br><span class="line">  .m-iconify &#123;</span><br><span class="line">    vertical-align: middle;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="搜索图标"><a href="#搜索图标" class="headerlink" title="搜索图标"></a>搜索图标</h2><p>安装好图标库和插件后，可以在此搜索：<br><a href="https://icon-sets.iconify.design/">Icon Sets • Iconify</a></p><h2 id="使用组件"><a href="#使用组件" class="headerlink" title="使用组件"></a>使用组件</h2><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20220103214904943.png" alt="image-20220103214904943"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;app-icon icon=<span class="string">&quot;logos:discord-icon&quot;</span>&gt;&lt;/app-icon&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Icon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora + picgo + github + jsdelivr搭建图床</title>
      <link href="/archives/tools/image-bed.html"/>
      <url>/archives/tools/image-bed.html</url>
      
        <content type="html"><![CDATA[<h2 id="github"><a href="#github" class="headerlink" title="github"></a>github</h2><h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/huoyou/cdn</span><br></pre></td></tr></table></figure><h3 id="生成-token"><a href="#生成-token" class="headerlink" title="生成 token"></a>生成 token</h3><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217110747841.png" alt="image-20211217110747841"></p><h2 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h2><h3 id="gitub-设置"><a href="#gitub-设置" class="headerlink" title="gitub 设置"></a>gitub 设置</h3><p>由于我的路径是 <a href="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217110747841.png">https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217110747841.png</a></p><p>所以指定存储路径：hexo/imgs/</p><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217111021738.png" alt="image-20211217111021738"></p><h3 id="Server-设置"><a href="#Server-设置" class="headerlink" title="Server 设置"></a>Server 设置</h3><p>PicGo -&gt; 设置 Server -&gt; 点击设置：</p><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217111051162.png" alt="image-20211217111051162"></p><h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>主题选择 cobalt</p><h3 id="偏好设置"><a href="#偏好设置" class="headerlink" title="偏好设置"></a>偏好设置</h3><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217111208651.png" alt="image-20211217111208651"></p><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217111236554.png" alt="image-20211217111236554"></p><h2 id="Jsdelivr"><a href="#Jsdelivr" class="headerlink" title="Jsdelivr"></a>Jsdelivr</h2><p>获取图片链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217110747841.png</span><br></pre></td></tr></table></figure><h2 id="介绍一款不错的图片压缩工具"><a href="#介绍一款不错的图片压缩工具" class="headerlink" title="介绍一款不错的图片压缩工具"></a>介绍一款不错的图片压缩工具</h2><p>图压 <a href="https://tuya.xinxiao.tech/index.html#performance">下载链接</a></p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决eslint，stylelint，prettier冲突</title>
      <link href="/archives/code/dev-problems.html"/>
      <url>/archives/code/dev-problems.html</url>
      
        <content type="html"><![CDATA[<h2 id="Delete-；-eslint-prettier-prettier"><a href="#Delete-；-eslint-prettier-prettier" class="headerlink" title="Delete ； eslint(prettier/prettier)"></a>Delete <code>；</code> eslint(prettier/prettier)</h2><h3 id="冲突表现"><a href="#冲突表现" class="headerlink" title="冲突表现"></a>冲突表现</h3><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20220112211647200.png" alt="image-20220112211647200"></p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>在.stylelintrc.js 文件中配置”declaration-block-trailing-semicolon”: null, 将 stylelint 该条规则关闭。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@module</span> .stylelintrc</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: huoyou</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: css校验配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&#x27;declaration-block-trailing-semicolon&#x27;</span>: <span class="literal">null</span>,</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="vue3-中使用-deep-语法报错"><a href="#vue3-中使用-deep-语法报错" class="headerlink" title="vue3 中使用 deep 语法报错"></a>vue3 中使用 deep 语法报错</h2><h3 id="报错表现"><a href="#报错表现" class="headerlink" title="报错表现"></a>报错表现</h3><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20220112212939017.png" alt="image-20220112212939017"></p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>.stylelintrc.js 中新增如下配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@module</span> .stylelintrc</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: huoyou</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: css校验配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&#x27;selector-pseudo-class-no-unknown&#x27;</span>: [</span><br><span class="line">      <span class="literal">true</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">ignorePseudoClasses</span>: [<span class="string">&#x27;deep&#x27;</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Eslint </tag>
            
            <tag> Prettier </tag>
            
            <tag> Stylelint </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Surfingkeys常用命令</title>
      <link href="/archives/tools/surfingkeys.html"/>
      <url>/archives/tools/surfingkeys.html</url>
      
        <content type="html"><![CDATA[<h2 id="滚动"><a href="#滚动" class="headerlink" title="滚动"></a>滚动</h2><table><thead><tr><th align="center">按键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><kbd>e</kbd></td><td align="center">Scroll half page up</td></tr><tr><td align="center"><kbd>d</kbd></td><td align="center">Scroll half page down</td></tr><tr><td align="center"><kbd>gg</kbd></td><td align="center">滚到最上边</td></tr><tr><td align="center"><kbd>G</kbd></td><td align="center">滚到最下边</td></tr><tr><td align="center"><kbd>j</kbd></td><td align="center">向下滚动</td></tr><tr><td align="center"><kbd>k</kbd></td><td align="center">向上滚动</td></tr><tr><td align="center"><kbd>h</kbd></td><td align="center">向左滚动</td></tr><tr><td align="center"><kbd>l</kbd></td><td align="center">向右滚动</td></tr></tbody></table><h2 id="点击"><a href="#点击" class="headerlink" title="点击"></a>点击</h2><table><thead><tr><th align="center">按键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><kbd>f</kbd></td><td align="center">打开一个链接，按 SHIFT 键翻转重叠的提示，按住 SPACE 键隐藏提示</td></tr><tr><td align="center"><kbd>i</kbd></td><td align="center">选择输入框??</td></tr><tr><td align="center"><kbd>[[</kbd></td><td align="center">点击当前页上的上一页链接</td></tr><tr><td align="center"><kbd>]]</kbd></td><td align="center">点击当前页上的下一页链接</td></tr><tr><td align="center"><kbd>O</kbd></td><td align="center">打开文字中的超级链接</td></tr><tr><td align="center"><kbd>q</kbd></td><td align="center">点击图片或按钮</td></tr><tr><td align="center"><kbd>af</kbd></td><td align="center">在新标签页打开链接</td></tr></tbody></table><h2 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h2><h3 id="打开关闭"><a href="#打开关闭" class="headerlink" title="打开关闭"></a>打开关闭</h3><table><thead><tr><th align="center">按键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><kbd>on</kbd></td><td align="center">打开新标签</td></tr><tr><td align="center"><kbd>gxt</kbd></td><td align="center">关闭左侧标签页</td></tr><tr><td align="center"><kbd>gxT</kbd></td><td align="center">关闭右侧标签页</td></tr><tr><td align="center"><kbd>x</kbd></td><td align="center">关闭当前标签页</td></tr><tr><td align="center"><kbd>X</kbd></td><td align="center">恢复刚关闭的标签页</td></tr></tbody></table><h3 id="跳转"><a href="#跳转" class="headerlink" title="跳转"></a>跳转</h3><table><thead><tr><th align="center">按键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><kbd>g0</kbd></td><td align="center">跳到第一个标签页</td></tr><tr><td align="center"><kbd>g$</kbd></td><td align="center">跳到最后一个标签页</td></tr><tr><td align="center"><kbd>E</kbd></td><td align="center">跳到左侧标签页</td></tr><tr><td align="center"><kbd>R</kbd></td><td align="center">跳到右侧标签页</td></tr><tr><td align="center"><kbd>T</kbd></td><td align="center">选择标签页</td></tr></tbody></table><h3 id="放大缩小"><a href="#放大缩小" class="headerlink" title="放大缩小"></a>放大缩小</h3><table><thead><tr><th align="center">按键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><kbd>zi</kbd></td><td align="center">放大页面</td></tr><tr><td align="center"><kbd>zo</kbd></td><td align="center">缩小页面</td></tr><tr><td align="center"><kbd>zr</kbd></td><td align="center">重置缩放比例</td></tr></tbody></table><h2 id="网页浏览"><a href="#网页浏览" class="headerlink" title="网页浏览"></a>网页浏览</h2><table><thead><tr><th align="center">按键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><kbd>B</kbd></td><td align="center">后退</td></tr><tr><td align="center"><kbd>F</kbd></td><td align="center">前进</td></tr><tr><td align="center"><kbd>r</kbd></td><td align="center">刷新</td></tr></tbody></table><h2 id="搜索选中文本"><a href="#搜索选中文本" class="headerlink" title="搜索选中文本"></a>搜索选中文本</h2><table><thead><tr><th align="center">按键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><kbd>sg</kbd></td><td align="center">用谷歌搜索选中文本</td></tr><tr><td align="center"><kbd>sb</kbd></td><td align="center">用百度搜索选中文本</td></tr><tr><td align="center"><kbd>sw</kbd></td><td align="center">用必应搜索选中文本</td></tr><tr><td align="center"><kbd>sh</kbd></td><td align="center">用 github 搜索选中文本</td></tr></tbody></table><h2 id="剪贴板"><a href="#剪贴板" class="headerlink" title="剪贴板"></a>剪贴板</h2><table><thead><tr><th align="center">按键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><kbd>yv</kbd></td><td align="center">选择复制指定文本</td></tr><tr><td align="center"><kbd>yi</kbd></td><td align="center">复制输入框中内容</td></tr></tbody></table><h2 id="搜索栏"><a href="#搜索栏" class="headerlink" title="搜索栏"></a>搜索栏</h2><table><thead><tr><th align="center">按键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><kbd>ox</kbd></td><td align="center">打开搜索栏查找最近关闭的网址</td></tr><tr><td align="center"><kbd>oh</kbd></td><td align="center">打开搜索栏查找访问历史</td></tr><tr><td align="center"><kbd>ob</kbd></td><td align="center">打开百度搜索栏</td></tr><tr><td align="center"><kbd>og</kbd></td><td align="center">打开谷歌搜索栏</td></tr><tr><td align="center"><kbd>ow</kbd></td><td align="center">打开必应搜索栏</td></tr></tbody></table><h2 id="可视模式"><a href="#可视模式" class="headerlink" title="可视模式"></a>可视模式</h2><table><thead><tr><th align="center">按键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><kbd>v</kbd></td><td align="center">切换可视模式</td></tr><tr><td align="center"><kbd>/</kbd></td><td align="center">在当前页查找</td></tr><tr><td align="center"><kbd>n</kbd></td><td align="center">下一处</td></tr><tr><td align="center"><kbd>N</kbd></td><td align="center">上一处</td></tr><tr><td align="center"><kbd>zv</kbd></td><td align="center">进入可视模式，并全选指定文本</td></tr><tr><td align="center"><kbd>V</kbd></td><td align="center">恢复可视模式</td></tr><tr><td align="center"><kbd>)</kbd></td><td align="center">前进一个句子</td></tr><tr><td align="center"><kbd>(</kbd></td><td align="center">后退一个句子</td></tr><tr><td align="center"><kbd>}</kbd></td><td align="center">前进一个段落</td></tr><tr><td align="center"><kbd>{</kbd></td><td align="center">后退一个段落</td></tr><tr><td align="center"><kbd>0</kbd></td><td align="center">跳到行首</td></tr><tr><td align="center"><kbd>$</kbd></td><td align="center">跳到行尾</td></tr><tr><td align="center"><kbd>G</kbd></td><td align="center">跳到页面结尾</td></tr><tr><td align="center"><kbd>gg</kbd></td><td align="center">跳到页面开头</td></tr><tr><td align="center"><kbd>zz</kbd></td><td align="center">把光标所在的位置放在屏幕中间</td></tr></tbody></table><h2 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h2><table><thead><tr><th align="center">按键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><kbd>Ctrl</kbd> + <kbd>e</kbd></td><td align="center">把光标放到行尾</td></tr><tr><td align="center"><kbd>Ctrl</kbd> + <kbd>f</kbd></td><td align="center">把光标放到行首</td></tr><tr><td align="center"><kbd>Ctrl</kbd> + <kbd>u</kbd></td><td align="center">删除光标前的所有字符</td></tr><tr><td align="center"><kbd>Alt</kbd> + <kbd>b</kbd></td><td align="center">把光标往后移一个单词</td></tr><tr><td align="center"><kbd>Alt</kbd> + <kbd>f</kbd></td><td align="center">把光标往前移一个单词</td></tr><tr><td align="center"><kbd>Alt</kbd> + <kbd>w</kbd></td><td align="center">删除光标前一个单词</td></tr><tr><td align="center"><kbd>Alt</kbd> + <kbd>d</kbd></td><td align="center">删除光标后一个单词</td></tr><tr><td align="center"><kbd>Esc</kbd></td><td align="center">退出插入模式</td></tr><tr><td align="center"><kbd>:</kbd></td><td align="center">输入字符表情</td></tr><tr><td align="center"><kbd>Ctrl</kbd> + ‘</td><td align="center">给当前输入加双引号</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
            <tag> Surfingkeys </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>whistle调试线上代码</title>
      <link href="/archives/tools/whistle.html"/>
      <url>/archives/tools/whistle.html</url>
      
        <content type="html"><![CDATA[<p>先來说说whistle使用场景</p><p>本司远古代码采用的还是前后端未分离的那一套，修改文件想要看效果就必须部署一遍，所谓开发十分钟，部署十分钟，不过与此。我的使用场景主要是用来替换线上js、css为本地文件，便于开发调试。</p><h2 id="http-wproxy-org-whistle"><a href="#http-wproxy-org-whistle" class="headerlink" title="http://wproxy.org/whistle/"></a><a href="http://wproxy.org/whistle/">http://wproxy.org/whistle/</a></h2><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">pnpm install -g whistle</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">w2 start</span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">w2 restart</span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">w2 stop</span><br></pre></td></tr></table></figure><h2 id="访问主界面"><a href="#访问主界面" class="headerlink" title="访问主界面"></a>访问主界面</h2><p><a href="http://172.20.109.225:8899/#network">http://172.20.109.225:8899/#network</a></p><h2 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h2><h3 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h3><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn/imgs/whistle1.png" alt="image.png"><br>下载证书后安装<br><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn/imgs/whistle2.png" alt="image.png"></p><h3 id="浏览器代理"><a href="#浏览器代理" class="headerlink" title="浏览器代理"></a>浏览器代理</h3><p>安装SwitchyOmega插件<br><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn/imgs/whistle4.png" alt="image.png"></p><h3 id="android代理"><a href="#android代理" class="headerlink" title="android代理"></a>android代理</h3><ol><li>连接同一wifi下,  修改代理配置为本地ip+8899</li><li>安装证书<h2 id="替换接口和本地文件"><a href="#替换接口和本地文件" class="headerlink" title="替换接口和本地文件"></a>替换接口和本地文件</h2>Rules:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 替换本地文件</span><br><span class="line"><span class="attr">https</span>:<span class="comment">//xxx.xxx.com/assets/templates/wap/default/css/  file://E:code\css\</span></span><br><span class="line">#www.<span class="property">ifeng</span>.<span class="property">com</span> <span class="attr">file</span>:<span class="comment">//D:\xxx\test|D:\xxx\test\index.html</span></span><br><span class="line"></span><br><span class="line"># 代理接口</span><br><span class="line"><span class="attr">https</span>:<span class="comment">//xxx.xxx.cn  https://xxx.xxx.com</span></span><br></pre></td></tr></table></figure><h2 id="配置vconsole"><a href="#配置vconsole" class="headerlink" title="配置vconsole"></a>配置vconsole</h2><h3 id="第一种方式-推荐"><a href="#第一种方式-推荐" class="headerlink" title="第一种方式 (推荐)"></a>第一种方式 (推荐)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i -g whistle.inspect</span><br></pre></td></tr></table></figure>Rules:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//m.baidu.com/ whistle.inspect://</span></span><br></pre></td></tr></table></figure><h3 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式"></a>第二种方式</h3>Values新建vConsole.js, 写入vconsole源码<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*!</span></span><br><span class="line"><span class="comment"> * vConsole v3.3.4 (https://github.com/Tencent/vConsole)</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * Tencent is pleased to support the open source community by making vConsole available.</span></span><br><span class="line"><span class="comment"> * Copyright (C) 2017 THL A29 Limited, a Tencent company. All rights reserved.</span></span><br><span class="line"><span class="comment"> * Licensed under the MIT License (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> * http://opensource.org/licenses/MIT</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">!<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="string">&quot;object&quot;</span>==<span class="keyword">typeof</span> <span class="built_in">exports</span>&amp;&amp;<span class="string">&quot;object&quot;</span>==<span class="keyword">typeof</span> <span class="variable language_">module</span>?<span class="variable language_">module</span>.<span class="property">exports</span>=<span class="title function_">t</span>():<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> define&amp;&amp;define.<span class="property">amd</span>?<span class="title function_">define</span>(<span class="string">&quot;VConsole&quot;</span>,[],t):<span class="string">&quot;object&quot;</span>==<span class="keyword">typeof</span> <span class="built_in">exports</span>?<span class="built_in">exports</span>.<span class="property">VConsole</span>=<span class="title function_">t</span>():e.<span class="property">VConsole</span>=<span class="title function_">t</span>()&#125;(<span class="variable language_">window</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=&#123;&#125;;<span class="keyword">function</span> <span class="title function_">o</span>(<span class="params">n</span>)&#123;<span class="keyword">if</span>(t[n])<span class="keyword">return</span> t[n].<span class="property">exports</span>;<span class="keyword">var</span> r=t[n]=&#123;<span class="attr">i</span>:n,<span class="attr">l</span>:!<span class="number">1</span>,<span class="attr">exports</span>:&#123;&#125;&#125;;<span class="keyword">return</span> e[n].<span class="title function_">call</span>(r.<span class="property">exports</span>,r,r.<span class="property">exports</span>,o),r.<span class="property">l</span>=!<span class="number">0</span>,r.<span class="property">exports</span>&#125;<span class="keyword">return</span> o.<span class="property">m</span>=e,o.<span class="property">c</span>=t,o.<span class="property">d</span>=<span class="keyword">function</span>(<span class="params">e,t,n</span>)&#123;o.<span class="title function_">o</span>(e,t)||<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(e,t,&#123;<span class="attr">enumerable</span>:!<span class="number">0</span>,<span class="attr">get</span>:n&#125;)&#125;,o.<span class="property">r</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="string">&quot;undefined&quot;</span>!=<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;<span class="title class_">Symbol</span>.<span class="property">toStringTag</span>&amp;&amp;<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(e,<span class="title class_">Symbol</span>.<span class="property">toStringTag</span>,&#123;<span class="attr">value</span>:<span class="string">&quot;Module&quot;</span>&#125;),<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(e,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;)&#125;,o.<span class="property">t</span>=<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(<span class="number">1</span>&amp;t&amp;&amp;(e=<span class="title function_">o</span>(e)),<span class="number">8</span>&amp;t)<span class="keyword">return</span> e;<span class="keyword">if</span>(<span class="number">4</span>&amp;t&amp;&amp;<span class="string">&quot;object&quot;</span>==<span class="keyword">typeof</span> e&amp;&amp;e&amp;&amp;e.<span class="property">__esModule</span>)<span class="keyword">return</span> e;<span class="keyword">var</span> n=<span class="title class_">Object</span>.<span class="title function_">create</span>(<span class="literal">null</span>);<span class="keyword">if</span>(o.<span class="title function_">r</span>(n),<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(n,<span class="string">&quot;default&quot;</span>,&#123;<span class="attr">enumerable</span>:!<span class="number">0</span>,<span class="attr">value</span>:e&#125;),<span class="number">2</span>&amp;t&amp;&amp;<span class="string">&quot;string&quot;</span>!=<span class="keyword">typeof</span> e)<span class="keyword">for</span>(<span class="keyword">var</span> r <span class="keyword">in</span> e)o.<span class="title function_">d</span>(n,r,<span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">return</span> e[t]&#125;.<span class="title function_">bind</span>(<span class="literal">null</span>,r));<span class="keyword">return</span> n&#125;,o.<span class="property">n</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=e&amp;&amp;e.<span class="property">__esModule</span>?<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span> e.<span class="property">default</span>&#125;:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span> e&#125;;<span class="keyword">return</span> o.<span class="title function_">d</span>(t,<span class="string">&quot;a&quot;</span>,t),t&#125;,o.<span class="property">o</span>=<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(e,t)&#125;,o.<span class="property">p</span>=<span class="string">&quot;&quot;</span>,<span class="title function_">o</span>(o.<span class="property">s</span>=<span class="number">6</span>)&#125;([<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n,r,i;r=[t],<span class="keyword">void</span> <span class="number">0</span>===(i=<span class="string">&quot;function&quot;</span>==<span class="title function_">typeof</span>(n=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">t</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span>(t=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;<span class="string">&quot;symbol&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>.<span class="property">iterator</span>?<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> <span class="keyword">typeof</span> e&#125;:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;e.<span class="property">constructor</span>===<span class="title class_">Symbol</span>&amp;&amp;e!==<span class="title class_">Symbol</span>.<span class="property"><span class="keyword">prototype</span></span>?<span class="string">&quot;symbol&quot;</span>:<span class="keyword">typeof</span> e&#125;)(e)&#125;<span class="keyword">function</span> <span class="title function_">o</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span><span class="string">&quot;[object Number]&quot;</span>==<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(e)&#125;<span class="keyword">function</span> <span class="title function_">n</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span><span class="string">&quot;[object String]&quot;</span>==<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(e)&#125;<span class="keyword">function</span> <span class="title function_">r</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span><span class="string">&quot;[object Array]&quot;</span>==<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(e)&#125;<span class="keyword">function</span> <span class="title function_">i</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span><span class="string">&quot;[object Boolean]&quot;</span>==<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(e)&#125;<span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span>===e&#125;<span class="keyword">function</span> <span class="title function_">l</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> <span class="literal">null</span>===e&#125;<span class="keyword">function</span> <span class="title function_">c</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span><span class="string">&quot;[object Symbol]&quot;</span>==<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(e)&#125;<span class="keyword">function</span> <span class="title function_">s</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span>!(<span class="string">&quot;[object Object]&quot;</span>!=<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(e)&amp;&amp;(<span class="title function_">o</span>(e)||<span class="title function_">n</span>(e)||<span class="title function_">i</span>(e)||<span class="title function_">r</span>(e)||<span class="title function_">l</span>(e)||<span class="title function_">d</span>(e)||<span class="title function_">a</span>(e)||<span class="title function_">c</span>(e)))&#125;<span class="keyword">function</span> <span class="title function_">d</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span><span class="string">&quot;[object Function]&quot;</span>==<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(e)&#125;<span class="keyword">function</span> <span class="title function_">u</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(e);<span class="keyword">return</span><span class="string">&quot;[object global]&quot;</span>==t||<span class="string">&quot;[object Window]&quot;</span>==t||<span class="string">&quot;[object DOMWindow]&quot;</span>==t&#125;<span class="keyword">function</span> <span class="title function_">v</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(!<span class="title function_">s</span>(e)&amp;&amp;!<span class="title function_">r</span>(e))<span class="keyword">return</span>[];<span class="keyword">if</span>(<span class="title function_">r</span>(e))&#123;<span class="keyword">var</span> t=[];<span class="keyword">return</span> e.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">e,o</span>)&#123;t.<span class="title function_">push</span>(o)&#125;),t&#125;<span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">getOwnPropertyNames</span>(e).<span class="title function_">sort</span>()&#125;<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(e,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),e.<span class="property">getDate</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=e&gt;<span class="number">0</span>?<span class="keyword">new</span> <span class="title class_">Date</span>(e):<span class="keyword">new</span> <span class="title class_">Date</span>,o=t.<span class="title function_">getDate</span>()&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+t.<span class="title function_">getDate</span>():t.<span class="title function_">getDate</span>(),n=t.<span class="title function_">getMonth</span>()&lt;<span class="number">9</span>?<span class="string">&quot;0&quot;</span>+(t.<span class="title function_">getMonth</span>()+<span class="number">1</span>):t.<span class="title function_">getMonth</span>()+<span class="number">1</span>,r=t.<span class="title function_">getFullYear</span>(),i=t.<span class="title function_">getHours</span>()&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+t.<span class="title function_">getHours</span>():t.<span class="title function_">getHours</span>(),a=t.<span class="title function_">getMinutes</span>()&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+t.<span class="title function_">getMinutes</span>():t.<span class="title function_">getMinutes</span>(),l=t.<span class="title function_">getSeconds</span>()&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+t.<span class="title function_">getSeconds</span>():t.<span class="title function_">getSeconds</span>(),c=t.<span class="title function_">getMilliseconds</span>()&lt;<span class="number">10</span>?<span class="string">&quot;0&quot;</span>+t.<span class="title function_">getMilliseconds</span>():t.<span class="title function_">getMilliseconds</span>();<span class="keyword">return</span> c&lt;<span class="number">100</span>&amp;&amp;(c=<span class="string">&quot;0&quot;</span>+c),&#123;<span class="attr">time</span>:+t,<span class="attr">year</span>:r,<span class="attr">month</span>:n,<span class="attr">day</span>:o,<span class="attr">hour</span>:i,<span class="attr">minute</span>:a,<span class="attr">second</span>:l,<span class="attr">millisecond</span>:c&#125;&#125;,e.<span class="property">isNumber</span>=o,e.<span class="property">isString</span>=n,e.<span class="property">isArray</span>=r,e.<span class="property">isBoolean</span>=i,e.<span class="property">isUndefined</span>=a,e.<span class="property">isNull</span>=l,e.<span class="property">isSymbol</span>=c,e.<span class="property">isObject</span>=s,e.<span class="property">isFunction</span>=d,e.<span class="property">isElement</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span><span class="string">&quot;object&quot;</span>===(<span class="string">&quot;undefined&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">HTMLElement</span>?<span class="string">&quot;undefined&quot;</span>:<span class="title function_">t</span>(<span class="title class_">HTMLElement</span>))?e <span class="keyword">instanceof</span> <span class="title class_">HTMLElement</span>:e&amp;&amp;<span class="string">&quot;object&quot;</span>===<span class="title function_">t</span>(e)&amp;&amp;<span class="literal">null</span>!==e&amp;&amp;<span class="number">1</span>===e.<span class="property">nodeType</span>&amp;&amp;<span class="string">&quot;string&quot;</span>==<span class="keyword">typeof</span> e.<span class="property">nodeName</span>&#125;,e.<span class="property">isWindow</span>=u,e.<span class="property">isPlainObject</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> o,n=<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hasOwnProperty</span>;<span class="keyword">if</span>(!e||<span class="string">&quot;object&quot;</span>!==<span class="title function_">t</span>(e)||e.<span class="property">nodeType</span>||<span class="title function_">u</span>(e))<span class="keyword">return</span>!<span class="number">1</span>;<span class="keyword">try</span>&#123;<span class="keyword">if</span>(e.<span class="property">constructor</span>&amp;&amp;!n.<span class="title function_">call</span>(e,<span class="string">&quot;constructor&quot;</span>)&amp;&amp;!n.<span class="title function_">call</span>(e.<span class="property">constructor</span>.<span class="property"><span class="keyword">prototype</span></span>,<span class="string">&quot;isPrototypeOf&quot;</span>))<span class="keyword">return</span>!<span class="number">1</span>&#125;<span class="keyword">catch</span>(e)&#123;<span class="keyword">return</span>!<span class="number">1</span>&#125;<span class="keyword">for</span>(o <span class="keyword">in</span> e);<span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span>===o||n.<span class="title function_">call</span>(e,o)&#125;,e.<span class="property">htmlEncode</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>).<span class="title function_">appendChild</span>(<span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(e)).<span class="property">parentNode</span>.<span class="property">innerHTML</span>&#125;,e.<span class="property">JSONStringify</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(!<span class="title function_">s</span>(e)&amp;&amp;!<span class="title function_">r</span>(e))<span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(e);<span class="keyword">var</span> t=<span class="string">&quot;&#123;&quot;</span>,o=<span class="string">&quot;&#125;&quot;</span>;<span class="title function_">r</span>(e)&amp;&amp;(t=<span class="string">&quot;[&quot;</span>,o=<span class="string">&quot;]&quot;</span>);<span class="keyword">for</span>(<span class="keyword">var</span> n=t,i=<span class="title function_">v</span>(e),a=<span class="number">0</span>;a&lt;i.<span class="property">length</span>;a++)&#123;<span class="keyword">var</span> l=i[a],u=e[l];<span class="keyword">try</span>&#123;<span class="title function_">r</span>(e)||(<span class="title function_">s</span>(l)||<span class="title function_">r</span>(l)||<span class="title function_">c</span>(l)?n+=<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(l):n+=l,n+=<span class="string">&quot;: &quot;</span>),<span class="title function_">r</span>(u)?n+=<span class="string">&quot;Array[&quot;</span>+u.<span class="property">length</span>+<span class="string">&quot;]&quot;</span>:<span class="title function_">s</span>(u)||<span class="title function_">c</span>(u)||<span class="title function_">d</span>(u)?n+=<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(u):n+=<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(u),a&lt;i.<span class="property">length</span>-<span class="number">1</span>&amp;&amp;(n+=<span class="string">&quot;, &quot;</span>)&#125;<span class="keyword">catch</span>(e)&#123;<span class="keyword">continue</span>&#125;&#125;<span class="keyword">return</span> n+=o&#125;,e.<span class="property">getObjAllKeys</span>=v,e.<span class="property">getObjName</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(e).<span class="title function_">replace</span>(<span class="string">&quot;[object &quot;</span>,<span class="string">&quot;&quot;</span>).<span class="title function_">replace</span>(<span class="string">&quot;]&quot;</span>,<span class="string">&quot;&quot;</span>)&#125;,e.<span class="property">setStorage</span>=<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="variable language_">window</span>.<span class="property">localStorage</span>&amp;&amp;(e=<span class="string">&quot;vConsole_&quot;</span>+e,<span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(e,t))&#125;,e.<span class="property">getStorage</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">localStorage</span>)<span class="keyword">return</span> e=<span class="string">&quot;vConsole_&quot;</span>+e,<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(e)&#125;&#125;)?n.<span class="title function_">apply</span>(t,r):n)||(e.<span class="property">exports</span>=i)&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n,r,i;r=[t,<span class="title function_">o</span>(<span class="number">0</span>),<span class="title function_">o</span>(<span class="number">10</span>)],<span class="keyword">void</span> <span class="number">0</span>===(i=<span class="string">&quot;function&quot;</span>==<span class="title function_">typeof</span>(n=<span class="keyword">function</span>(<span class="params">o,n,r</span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">var</span> i;<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(o,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),o.<span class="property">default</span>=<span class="keyword">void</span> <span class="number">0</span>,r=(i=r)&amp;&amp;i.<span class="property">__esModule</span>?<span class="attr">i</span>:&#123;<span class="attr">default</span>:i&#125;;<span class="keyword">var</span> a=&#123;<span class="attr">one</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">try</span>&#123;<span class="keyword">return</span>(t||<span class="variable language_">document</span>).<span class="title function_">querySelector</span>(e)||<span class="keyword">void</span> <span class="number">0</span>&#125;<span class="keyword">catch</span>(e)&#123;<span class="keyword">return</span>&#125;&#125;,<span class="attr">all</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">try</span>&#123;<span class="keyword">var</span> o=(t||<span class="variable language_">document</span>).<span class="title function_">querySelectorAll</span>(e);<span class="keyword">return</span> <span class="title class_">Array</span>.<span class="title function_">from</span>(o)&#125;<span class="keyword">catch</span>(e)&#123;<span class="keyword">return</span>[]&#125;&#125;,<span class="attr">addClass</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(e)&#123;(<span class="number">0</span>,n.<span class="property">isArray</span>)(e)||(e=[e]);<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;e.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> r=(e[o].<span class="property">className</span>||<span class="string">&quot;&quot;</span>).<span class="title function_">split</span>(<span class="string">&quot; &quot;</span>);r.<span class="title function_">indexOf</span>(t)&gt;-<span class="number">1</span>||(r.<span class="title function_">push</span>(t),e[o].<span class="property">className</span>=r.<span class="title function_">join</span>(<span class="string">&quot; &quot;</span>))&#125;&#125;&#125;,<span class="attr">removeClass</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(e)&#123;(<span class="number">0</span>,n.<span class="property">isArray</span>)(e)||(e=[e]);<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;e.<span class="property">length</span>;o++)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> r=e[o].<span class="property">className</span>.<span class="title function_">split</span>(<span class="string">&quot; &quot;</span>),i=<span class="number">0</span>;i&lt;r.<span class="property">length</span>;i++)r[i]==t&amp;&amp;(r[i]=<span class="string">&quot;&quot;</span>);e[o].<span class="property">className</span>=r.<span class="title function_">join</span>(<span class="string">&quot; &quot;</span>).<span class="title function_">trim</span>()&#125;&#125;&#125;,<span class="attr">hasClass</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span>!(!e||!e.<span class="property">classList</span>)&amp;&amp;e.<span class="property">classList</span>.<span class="title function_">contains</span>(t)&#125;,<span class="attr">bind</span>:<span class="keyword">function</span>(<span class="params">e,t,o,r</span>)&#123;e&amp;&amp;((<span class="number">0</span>,n.<span class="property">isArray</span>)(e)||(e=[e]),e.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">e</span>)&#123;e.<span class="title function_">addEventListener</span>(t,o,!!r)&#125;))&#125;,<span class="attr">delegate</span>:<span class="keyword">function</span>(<span class="params">e,t,o,n</span>)&#123;e&amp;&amp;e.<span class="title function_">addEventListener</span>(t,<span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">var</span> r=a.<span class="title function_">all</span>(o,e);<span class="keyword">if</span>(r)<span class="attr">e</span>:<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;r.<span class="property">length</span>;i++)<span class="keyword">for</span>(<span class="keyword">var</span> l=t.<span class="property">target</span>;l;)&#123;<span class="keyword">if</span>(l==r[i])&#123;n.<span class="title function_">call</span>(l,t);<span class="keyword">break</span> e&#125;<span class="keyword">if</span>((l=l.<span class="property">parentNode</span>)==e)<span class="keyword">break</span>&#125;&#125;,!<span class="number">1</span>)&#125;&#125;;a.<span class="property">render</span>=r.<span class="property">default</span>;<span class="keyword">var</span> l=a;o.<span class="property">default</span>=l,e.<span class="property">exports</span>=t.<span class="property">default</span>&#125;)?n.<span class="title function_">apply</span>(t,r):n)||(e.<span class="property">exports</span>=i)&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n,r,i;r=[t],<span class="keyword">void</span> <span class="number">0</span>===(i=<span class="string">&quot;function&quot;</span>==<span class="title function_">typeof</span>(n=<span class="keyword">function</span>(<span class="params">o</span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">n</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;t.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=t[o];n.<span class="property">enumerable</span>=n.<span class="property">enumerable</span>||!<span class="number">1</span>,n.<span class="property">configurable</span>=!<span class="number">0</span>,<span class="string">&quot;value&quot;</span><span class="keyword">in</span> n&amp;&amp;(n.<span class="property">writable</span>=!<span class="number">0</span>),<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(e,n.<span class="property">key</span>,n)&#125;&#125;<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(o,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),o.<span class="property">default</span>=<span class="keyword">void</span> <span class="number">0</span>;<span class="keyword">var</span> r=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">function</span> <span class="title function_">e</span>(<span class="params">t</span>)&#123;<span class="keyword">var</span> o=<span class="variable language_">arguments</span>.<span class="property">length</span>&gt;<span class="number">1</span>&amp;&amp;<span class="keyword">void</span> <span class="number">0</span>!==<span class="variable language_">arguments</span>[<span class="number">1</span>]?<span class="variable language_">arguments</span>[<span class="number">1</span>]:<span class="string">&quot;newPlugin&quot;</span>;!<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(!(e <span class="keyword">instanceof</span> t))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Cannot call a class as a function&quot;</span>)&#125;(<span class="variable language_">this</span>,e),<span class="variable language_">this</span>.<span class="property">id</span>=t,<span class="variable language_">this</span>.<span class="property">name</span>=o,<span class="variable language_">this</span>.<span class="property">isReady</span>=!<span class="number">1</span>,<span class="variable language_">this</span>.<span class="property">eventList</span>=&#123;&#125;&#125;<span class="keyword">var</span> t,o,r;<span class="keyword">return</span> t=e,(o=[&#123;<span class="attr">key</span>:<span class="string">&quot;on&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">eventList</span>[e]=t,<span class="variable language_">this</span>&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;trigger&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="variable language_">this</span>.<span class="property">eventList</span>[e])<span class="variable language_">this</span>.<span class="property">eventList</span>[e].<span class="title function_">call</span>(<span class="variable language_">this</span>,t);<span class="keyword">else</span>&#123;<span class="keyword">var</span> o=<span class="string">&quot;on&quot;</span>+e.<span class="title function_">charAt</span>(<span class="number">0</span>).<span class="title function_">toUpperCase</span>()+e.<span class="title function_">slice</span>(<span class="number">1</span>);<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="variable language_">this</span>[o]&amp;&amp;<span class="variable language_">this</span>[o].<span class="title function_">call</span>(<span class="variable language_">this</span>,t)&#125;<span class="keyword">return</span> <span class="variable language_">this</span>&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;id&quot;</span>,<span class="attr">get</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_id</span>&#125;,<span class="attr">set</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(!e)<span class="keyword">throw</span><span class="string">&quot;Plugin ID cannot be empty&quot;</span>;<span class="variable language_">this</span>.<span class="property">_id</span>=e.<span class="title function_">toLowerCase</span>()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;name&quot;</span>,<span class="attr">get</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_name</span>&#125;,<span class="attr">set</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(!e)<span class="keyword">throw</span><span class="string">&quot;Plugin name cannot be empty&quot;</span>;<span class="variable language_">this</span>.<span class="property">_name</span>=e&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;vConsole&quot;</span>,<span class="attr">get</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_vConsole</span>||<span class="keyword">void</span> <span class="number">0</span>&#125;,<span class="attr">set</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(!e)<span class="keyword">throw</span><span class="string">&quot;vConsole cannot be empty&quot;</span>;<span class="variable language_">this</span>.<span class="property">_vConsole</span>=e&#125;&#125;])&amp;&amp;<span class="title function_">n</span>(t.<span class="property"><span class="keyword">prototype</span></span>,o),r&amp;&amp;<span class="title function_">n</span>(t,r),e&#125;();o.<span class="property">default</span>=r,e.<span class="property">exports</span>=t.<span class="property">default</span>&#125;)?n.<span class="title function_">apply</span>(t,r):n)||(e.<span class="property">exports</span>=i)&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n,r,i;r=[t,<span class="title function_">o</span>(<span class="number">0</span>),<span class="title function_">o</span>(<span class="number">1</span>),<span class="title function_">o</span>(<span class="number">2</span>),<span class="title function_">o</span>(<span class="number">18</span>),<span class="title function_">o</span>(<span class="number">19</span>),<span class="title function_">o</span>(<span class="number">20</span>)],<span class="keyword">void</span> <span class="number">0</span>===(i=<span class="string">&quot;function&quot;</span>==<span class="title function_">typeof</span>(n=<span class="keyword">function</span>(<span class="params">o,n,r,i,a,l,c</span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">s</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;e.<span class="property">__esModule</span>?<span class="attr">e</span>:&#123;<span class="attr">default</span>:e&#125;&#125;<span class="keyword">function</span> <span class="title function_">d</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span>(d=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;<span class="string">&quot;symbol&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>.<span class="property">iterator</span>?<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> <span class="keyword">typeof</span> e&#125;:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;e.<span class="property">constructor</span>===<span class="title class_">Symbol</span>&amp;&amp;e!==<span class="title class_">Symbol</span>.<span class="property"><span class="keyword">prototype</span></span>?<span class="string">&quot;symbol&quot;</span>:<span class="keyword">typeof</span> e&#125;)(e)&#125;<span class="keyword">function</span> <span class="title function_">u</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;t.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=t[o];n.<span class="property">enumerable</span>=n.<span class="property">enumerable</span>||!<span class="number">1</span>,n.<span class="property">configurable</span>=!<span class="number">0</span>,<span class="string">&quot;value&quot;</span><span class="keyword">in</span> n&amp;&amp;(n.<span class="property">writable</span>=!<span class="number">0</span>),<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(e,n.<span class="property">key</span>,n)&#125;&#125;<span class="keyword">function</span> <span class="title function_">v</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span>!t||<span class="string">&quot;object&quot;</span>!==<span class="title function_">d</span>(t)&amp;&amp;<span class="string">&quot;function&quot;</span>!=<span class="keyword">typeof</span> t?<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(<span class="keyword">void</span> <span class="number">0</span>===e)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ReferenceError</span>(<span class="string">&quot;this hasn&#x27;t been initialised - super() hasn&#x27;t been called&quot;</span>);<span class="keyword">return</span> e&#125;(e):t&#125;<span class="keyword">function</span> <span class="title function_">f</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span>(f=<span class="title class_">Object</span>.<span class="property">setPrototypeOf</span>?<span class="title class_">Object</span>.<span class="property">getPrototypeOf</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">__proto__</span>||<span class="title class_">Object</span>.<span class="title function_">getPrototypeOf</span>(e)&#125;)(e)&#125;<span class="keyword">function</span> <span class="title function_">p</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span>(p=<span class="title class_">Object</span>.<span class="property">setPrototypeOf</span>||<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span> e.<span class="property">__proto__</span>=t,e&#125;)(e,t)&#125;<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(o,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),o.<span class="property">default</span>=<span class="keyword">void</span> <span class="number">0</span>,n=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(e&amp;&amp;e.<span class="property">__esModule</span>)<span class="keyword">return</span> e;<span class="keyword">var</span> t=&#123;&#125;;<span class="keyword">if</span>(<span class="literal">null</span>!=e)<span class="keyword">for</span>(<span class="keyword">var</span> o <span class="keyword">in</span> e)<span class="keyword">if</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(e,o))&#123;<span class="keyword">var</span> n=<span class="title class_">Object</span>.<span class="property">defineProperty</span>&amp;&amp;<span class="title class_">Object</span>.<span class="property">getOwnPropertyDescriptor</span>?<span class="title class_">Object</span>.<span class="title function_">getOwnPropertyDescriptor</span>(e,o):&#123;&#125;;n.<span class="property">get</span>||n.<span class="property">set</span>?<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(t,o,n):t[o]=e[o]&#125;<span class="keyword">return</span> t.<span class="property">default</span>=e,t&#125;(n),r=<span class="title function_">s</span>(r),i=<span class="title function_">s</span>(i),a=<span class="title function_">s</span>(a),l=<span class="title function_">s</span>(l),c=<span class="title function_">s</span>(c);<span class="keyword">var</span> b=<span class="number">1e3</span>,g=[],h=&#123;&#125;,m=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">function</span> <span class="title function_">t</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e,o;!<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(!(e <span class="keyword">instanceof</span> t))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Cannot call a class as a function&quot;</span>)&#125;(<span class="variable language_">this</span>,t);<span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="variable language_">arguments</span>.<span class="property">length</span>,r=<span class="keyword">new</span> <span class="title class_">Array</span>(n),i=<span class="number">0</span>;i&lt;n;i++)r[i]=<span class="variable language_">arguments</span>[i];<span class="keyword">return</span> o=<span class="title function_">v</span>(<span class="variable language_">this</span>,(e=<span class="title function_">f</span>(t)).<span class="property">call</span>.<span class="title function_">apply</span>(e,[<span class="variable language_">this</span>].<span class="title function_">concat</span>(r))),g.<span class="title function_">push</span>(o.<span class="property">id</span>),o.<span class="property">tplTabbox</span>=<span class="string">&quot;&quot;</span>,o.<span class="property">allowUnformattedLog</span>=!<span class="number">0</span>,o.<span class="property">isReady</span>=!<span class="number">1</span>,o.<span class="property">isShow</span>=!<span class="number">1</span>,o.<span class="property">$tabbox</span>=<span class="literal">null</span>,o.<span class="property">console</span>=&#123;&#125;,o.<span class="property">logList</span>=[],o.<span class="property">isInBottom</span>=!<span class="number">0</span>,o.<span class="property">maxLogNumber</span>=b,o.<span class="property">logNumber</span>=<span class="number">0</span>,o.<span class="title function_">mockConsole</span>(),o&#125;<span class="keyword">var</span> o,s,m;<span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(<span class="string">&quot;function&quot;</span>!=<span class="keyword">typeof</span> t&amp;&amp;<span class="literal">null</span>!==t)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Super expression must either be null or a function&quot;</span>);e.<span class="property"><span class="keyword">prototype</span></span>=<span class="title class_">Object</span>.<span class="title function_">create</span>(t&amp;&amp;t.<span class="property"><span class="keyword">prototype</span></span>,&#123;<span class="attr">constructor</span>:&#123;<span class="attr">value</span>:e,<span class="attr">writable</span>:!<span class="number">0</span>,<span class="attr">configurable</span>:!<span class="number">0</span>&#125;&#125;),t&amp;&amp;<span class="title function_">p</span>(e,t)&#125;(t,i.<span class="property">default</span>),o=t,(s=[&#123;<span class="attr">key</span>:<span class="string">&quot;onInit&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">$tabbox</span>=r.<span class="property">default</span>.<span class="title function_">render</span>(<span class="variable language_">this</span>.<span class="property">tplTabbox</span>,&#123;&#125;),<span class="variable language_">this</span>.<span class="title function_">updateMaxLogNumber</span>()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onRenderTab&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="title function_">e</span>(<span class="variable language_">this</span>.<span class="property">$tabbox</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onAddTopBar&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="variable language_">this</span>,o=[<span class="string">&quot;All&quot;</span>,<span class="string">&quot;Log&quot;</span>,<span class="string">&quot;Info&quot;</span>,<span class="string">&quot;Warn&quot;</span>,<span class="string">&quot;Error&quot;</span>],n=[],i=<span class="number">0</span>;i&lt;o.<span class="property">length</span>;i++)n.<span class="title function_">push</span>(&#123;<span class="attr">name</span>:o[i],<span class="attr">data</span>:&#123;<span class="attr">type</span>:o[i].<span class="title function_">toLowerCase</span>()&#125;,<span class="attr">className</span>:<span class="string">&quot;&quot;</span>,<span class="attr">onClick</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(r.<span class="property">default</span>.<span class="title function_">hasClass</span>(<span class="variable language_">this</span>,<span class="string">&quot;vc-actived&quot;</span>))<span class="keyword">return</span>!<span class="number">1</span>;t.<span class="title function_">showLogType</span>(<span class="variable language_">this</span>.<span class="property">dataset</span>.<span class="property">type</span>||<span class="string">&quot;all&quot;</span>)&#125;&#125;);n[<span class="number">0</span>].<span class="property">className</span>=<span class="string">&quot;vc-actived&quot;</span>,<span class="title function_">e</span>(n)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onAddTool&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=<span class="variable language_">this</span>;<span class="title function_">e</span>([&#123;<span class="attr">name</span>:<span class="string">&quot;Clear&quot;</span>,<span class="attr">global</span>:!<span class="number">1</span>,<span class="attr">onClick</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;t.<span class="title function_">clearLog</span>(),t.<span class="property">vConsole</span>.<span class="title function_">triggerEvent</span>(<span class="string">&quot;clearLog&quot;</span>)&#125;&#125;])&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onReady&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e=<span class="variable language_">this</span>;e.<span class="property">isReady</span>=!<span class="number">0</span>;<span class="keyword">var</span> t=r.<span class="property">default</span>.<span class="title function_">all</span>(<span class="string">&quot;.vc-subtab&quot;</span>,e.<span class="property">$tabbox</span>);r.<span class="property">default</span>.<span class="title function_">bind</span>(t,<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params">o</span>)&#123;<span class="keyword">if</span>(o.<span class="title function_">preventDefault</span>(),r.<span class="property">default</span>.<span class="title function_">hasClass</span>(<span class="variable language_">this</span>,<span class="string">&quot;vc-actived&quot;</span>))<span class="keyword">return</span>!<span class="number">1</span>;r.<span class="property">default</span>.<span class="title function_">removeClass</span>(t,<span class="string">&quot;vc-actived&quot;</span>),r.<span class="property">default</span>.<span class="title function_">addClass</span>(<span class="variable language_">this</span>,<span class="string">&quot;vc-actived&quot;</span>);<span class="keyword">var</span> n=<span class="variable language_">this</span>.<span class="property">dataset</span>.<span class="property">type</span>,i=r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-log&quot;</span>,e.<span class="property">$tabbox</span>);r.<span class="property">default</span>.<span class="title function_">removeClass</span>(i,<span class="string">&quot;vc-log-partly-log&quot;</span>),r.<span class="property">default</span>.<span class="title function_">removeClass</span>(i,<span class="string">&quot;vc-log-partly-info&quot;</span>),r.<span class="property">default</span>.<span class="title function_">removeClass</span>(i,<span class="string">&quot;vc-log-partly-warn&quot;</span>),r.<span class="property">default</span>.<span class="title function_">removeClass</span>(i,<span class="string">&quot;vc-log-partly-error&quot;</span>),<span class="string">&quot;all&quot;</span>==n?r.<span class="property">default</span>.<span class="title function_">removeClass</span>(i,<span class="string">&quot;vc-log-partly&quot;</span>):(r.<span class="property">default</span>.<span class="title function_">addClass</span>(i,<span class="string">&quot;vc-log-partly&quot;</span>),r.<span class="property">default</span>.<span class="title function_">addClass</span>(i,<span class="string">&quot;vc-log-partly-&quot;</span>+n))&#125;);<span class="keyword">var</span> o=r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-content&quot;</span>);r.<span class="property">default</span>.<span class="title function_">bind</span>(o,<span class="string">&quot;scroll&quot;</span>,<span class="keyword">function</span>(<span class="params">t</span>)&#123;e.<span class="property">isShow</span>&amp;&amp;(o.<span class="property">scrollTop</span>+o.<span class="property">offsetHeight</span>&gt;=o.<span class="property">scrollHeight</span>?e.<span class="property">isInBottom</span>=!<span class="number">0</span>:e.<span class="property">isInBottom</span>=!<span class="number">1</span>)&#125;);<span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="number">0</span>;n&lt;e.<span class="property">logList</span>.<span class="property">length</span>;n++)e.<span class="title function_">printLog</span>(e.<span class="property">logList</span>[n]);e.<span class="property">logList</span>=[]&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onRemove&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">window</span>.<span class="property">console</span>.<span class="property">log</span>=<span class="variable language_">this</span>.<span class="property">console</span>.<span class="property">log</span>,<span class="variable language_">window</span>.<span class="property">console</span>.<span class="property">info</span>=<span class="variable language_">this</span>.<span class="property">console</span>.<span class="property">info</span>,<span class="variable language_">window</span>.<span class="property">console</span>.<span class="property">warn</span>=<span class="variable language_">this</span>.<span class="property">console</span>.<span class="property">warn</span>,<span class="variable language_">window</span>.<span class="property">console</span>.<span class="property">debug</span>=<span class="variable language_">this</span>.<span class="property">console</span>.<span class="property">debug</span>,<span class="variable language_">window</span>.<span class="property">console</span>.<span class="property">error</span>=<span class="variable language_">this</span>.<span class="property">console</span>.<span class="property">error</span>,<span class="variable language_">window</span>.<span class="property">console</span>.<span class="property">time</span>=<span class="variable language_">this</span>.<span class="property">console</span>.<span class="property">time</span>,<span class="variable language_">window</span>.<span class="property">console</span>.<span class="property">timeEnd</span>=<span class="variable language_">this</span>.<span class="property">console</span>.<span class="property">timeEnd</span>,<span class="variable language_">window</span>.<span class="property">console</span>.<span class="property">clear</span>=<span class="variable language_">this</span>.<span class="property">console</span>.<span class="property">clear</span>,<span class="variable language_">this</span>.<span class="property">console</span>=&#123;&#125;;<span class="keyword">var</span> e=g.<span class="title function_">indexOf</span>(<span class="variable language_">this</span>.<span class="property">id</span>);e&gt;-<span class="number">1</span>&amp;&amp;g.<span class="title function_">splice</span>(e,<span class="number">1</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onShow&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">isShow</span>=!<span class="number">0</span>,<span class="number">1</span>==<span class="variable language_">this</span>.<span class="property">isInBottom</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">autoScrollToBottom</span>()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onHide&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">isShow</span>=!<span class="number">1</span>&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onShowConsole&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="number">1</span>==<span class="variable language_">this</span>.<span class="property">isInBottom</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">autoScrollToBottom</span>()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onUpdateOption&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">vConsole</span>.<span class="property">option</span>.<span class="property">maxLogNumber</span>!=<span class="variable language_">this</span>.<span class="property">maxLogNumber</span>&amp;&amp;(<span class="variable language_">this</span>.<span class="title function_">updateMaxLogNumber</span>(),<span class="variable language_">this</span>.<span class="title function_">limitMaxLogs</span>())&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;updateMaxLogNumber&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">maxLogNumber</span>=<span class="variable language_">this</span>.<span class="property">vConsole</span>.<span class="property">option</span>.<span class="property">maxLogNumber</span>||b,<span class="variable language_">this</span>.<span class="property">maxLogNumber</span>=<span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">1</span>,<span class="variable language_">this</span>.<span class="property">maxLogNumber</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;limitMaxLogs&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">isReady</span>)<span class="keyword">for</span>(;<span class="variable language_">this</span>.<span class="property">logNumber</span>&gt;<span class="variable language_">this</span>.<span class="property">maxLogNumber</span>;)&#123;<span class="keyword">var</span> e=r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-item&quot;</span>,<span class="variable language_">this</span>.<span class="property">$tabbox</span>);<span class="keyword">if</span>(!e)<span class="keyword">break</span>;e.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(e),<span class="variable language_">this</span>.<span class="property">logNumber</span>--&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;showLogType&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-log&quot;</span>,<span class="variable language_">this</span>.<span class="property">$tabbox</span>);r.<span class="property">default</span>.<span class="title function_">removeClass</span>(t,<span class="string">&quot;vc-log-partly-log&quot;</span>),r.<span class="property">default</span>.<span class="title function_">removeClass</span>(t,<span class="string">&quot;vc-log-partly-info&quot;</span>),r.<span class="property">default</span>.<span class="title function_">removeClass</span>(t,<span class="string">&quot;vc-log-partly-warn&quot;</span>),r.<span class="property">default</span>.<span class="title function_">removeClass</span>(t,<span class="string">&quot;vc-log-partly-error&quot;</span>),<span class="string">&quot;all&quot;</span>==e?r.<span class="property">default</span>.<span class="title function_">removeClass</span>(t,<span class="string">&quot;vc-log-partly&quot;</span>):(r.<span class="property">default</span>.<span class="title function_">addClass</span>(t,<span class="string">&quot;vc-log-partly&quot;</span>),r.<span class="property">default</span>.<span class="title function_">addClass</span>(t,<span class="string">&quot;vc-log-partly-&quot;</span>+e))&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;autoScrollToBottom&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">vConsole</span>.<span class="property">option</span>.<span class="property">disableLogScrolling</span>||<span class="variable language_">this</span>.<span class="title function_">scrollToBottom</span>()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;scrollToBottom&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e=r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-content&quot;</span>);e&amp;&amp;(e.<span class="property">scrollTop</span>=e.<span class="property">scrollHeight</span>-e.<span class="property">offsetHeight</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;mockConsole&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e=<span class="variable language_">this</span>,t=<span class="variable language_">this</span>,o=[<span class="string">&quot;log&quot;</span>,<span class="string">&quot;info&quot;</span>,<span class="string">&quot;warn&quot;</span>,<span class="string">&quot;debug&quot;</span>,<span class="string">&quot;error&quot;</span>];<span class="variable language_">window</span>.<span class="property">console</span>?(o.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">e</span>)&#123;t.<span class="property">console</span>[e]=<span class="variable language_">window</span>.<span class="property">console</span>[e]&#125;),t.<span class="property">console</span>.<span class="property">time</span>=<span class="variable language_">window</span>.<span class="property">console</span>.<span class="property">time</span>,t.<span class="property">console</span>.<span class="property">timeEnd</span>=<span class="variable language_">window</span>.<span class="property">console</span>.<span class="property">timeEnd</span>,t.<span class="property">console</span>.<span class="property">clear</span>=<span class="variable language_">window</span>.<span class="property">console</span>.<span class="property">clear</span>):<span class="variable language_">window</span>.<span class="property">console</span>=&#123;&#125;,o.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="variable language_">window</span>.<span class="property">console</span>[t]=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="variable language_">arguments</span>.<span class="property">length</span>,n=<span class="keyword">new</span> <span class="title class_">Array</span>(o),r=<span class="number">0</span>;r&lt;o;r++)n[r]=<span class="variable language_">arguments</span>[r];e.<span class="title function_">printLog</span>(&#123;<span class="attr">logType</span>:t,<span class="attr">logs</span>:n&#125;)&#125;&#125;);<span class="keyword">var</span> n=&#123;&#125;;<span class="variable language_">window</span>.<span class="property">console</span>.<span class="property">time</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;n[e]=<span class="title class_">Date</span>.<span class="title function_">now</span>()&#125;,<span class="variable language_">window</span>.<span class="property">console</span>.<span class="property">timeEnd</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=n[e];t?(<span class="variable language_">console</span>.<span class="title function_">log</span>(e+<span class="string">&quot;:&quot;</span>,<span class="title class_">Date</span>.<span class="title function_">now</span>()-t+<span class="string">&quot;ms&quot;</span>),<span class="keyword">delete</span> n[e]):<span class="variable language_">console</span>.<span class="title function_">log</span>(e+<span class="string">&quot;: 0ms&quot;</span>)&#125;,<span class="variable language_">window</span>.<span class="property">console</span>.<span class="property">clear</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;t.<span class="title function_">clearLog</span>();<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="variable language_">arguments</span>.<span class="property">length</span>,o=<span class="keyword">new</span> <span class="title class_">Array</span>(e),n=<span class="number">0</span>;n&lt;e;n++)o[n]=<span class="variable language_">arguments</span>[n];t.<span class="property">console</span>.<span class="property">clear</span>.<span class="title function_">apply</span>(<span class="variable language_">window</span>.<span class="property">console</span>,o)&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;clearLog&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-log&quot;</span>,<span class="variable language_">this</span>.<span class="property">$tabbox</span>).<span class="property">innerHTML</span>=<span class="string">&quot;&quot;</span>,<span class="variable language_">this</span>.<span class="property">logNumber</span>=<span class="number">0</span>,h=&#123;&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;printOriginLog&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="variable language_">this</span>.<span class="property">console</span>[e.<span class="property">logType</span>]&amp;&amp;<span class="variable language_">this</span>.<span class="property">console</span>[e.<span class="property">logType</span>].<span class="title function_">apply</span>(<span class="variable language_">window</span>.<span class="property">console</span>,e.<span class="property">logs</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;printLog&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=e.<span class="property">logs</span>||[];<span class="keyword">if</span>(t.<span class="property">length</span>||e.<span class="property">content</span>)&#123;t=[].<span class="property">slice</span>.<span class="title function_">call</span>(t||[]);<span class="keyword">var</span> o=<span class="regexp">/^\[(\w+)\]$/i</span>,r=<span class="string">&quot;&quot;</span>,i=!<span class="number">1</span>;<span class="keyword">if</span>(n.<span class="title function_">isString</span>(t[<span class="number">0</span>]))&#123;<span class="keyword">var</span> a=t[<span class="number">0</span>].<span class="title function_">match</span>(o);<span class="literal">null</span>!==a&amp;&amp;a.<span class="property">length</span>&gt;<span class="number">0</span>&amp;&amp;(r=a[<span class="number">1</span>].<span class="title function_">toLowerCase</span>(),i=g.<span class="title function_">indexOf</span>(r)&gt;-<span class="number">1</span>)&#125;<span class="keyword">if</span>(r===<span class="variable language_">this</span>.<span class="property">id</span>||!<span class="number">0</span>!==i&amp;&amp;<span class="string">&quot;default&quot;</span>===<span class="variable language_">this</span>.<span class="property">id</span>)<span class="keyword">if</span>(e.<span class="property">_id</span>||(e.<span class="property">_id</span>=<span class="string">&quot;__vc_&quot;</span>+<span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>(<span class="number">36</span>).<span class="title function_">substring</span>(<span class="number">2</span>,<span class="number">8</span>)),e.<span class="property">date</span>||(e.<span class="property">date</span>=+<span class="keyword">new</span> <span class="title class_">Date</span>),<span class="variable language_">this</span>.<span class="property">isReady</span>)&#123;n.<span class="title function_">isString</span>(t[<span class="number">0</span>])&amp;&amp;i&amp;&amp;(t[<span class="number">0</span>]=t[<span class="number">0</span>].<span class="title function_">replace</span>(o,<span class="string">&quot;&quot;</span>),<span class="string">&quot;&quot;</span>===t[<span class="number">0</span>]&amp;&amp;t.<span class="title function_">shift</span>());<span class="keyword">for</span>(<span class="keyword">var</span> l=&#123;<span class="attr">_id</span>:e.<span class="property">_id</span>,<span class="attr">logType</span>:e.<span class="property">logType</span>,<span class="attr">logText</span>:[],<span class="attr">hasContent</span>:!!e.<span class="property">content</span>,<span class="attr">count</span>:<span class="number">1</span>&#125;,c=<span class="number">0</span>;c&lt;t.<span class="property">length</span>;c++)n.<span class="title function_">isFunction</span>(t[c])?l.<span class="property">logText</span>.<span class="title function_">push</span>(t[c].<span class="title function_">toString</span>()):n.<span class="title function_">isObject</span>(t[c])||n.<span class="title function_">isArray</span>(t[c])?l.<span class="property">logText</span>.<span class="title function_">push</span>(n.<span class="title class_">JSON</span>Stringify(t[c])):l.<span class="property">logText</span>.<span class="title function_">push</span>(t[c]);l.<span class="property">logText</span>=l.<span class="property">logText</span>.<span class="title function_">join</span>(<span class="string">&quot; &quot;</span>),l.<span class="property">hasContent</span>||h.<span class="property">logType</span>!==l.<span class="property">logType</span>||h.<span class="property">logText</span>!==l.<span class="property">logText</span>?(<span class="variable language_">this</span>.<span class="title function_">printNewLog</span>(e,t),h=l):<span class="variable language_">this</span>.<span class="title function_">printRepeatLog</span>(),<span class="variable language_">this</span>.<span class="property">isInBottom</span>&amp;&amp;<span class="variable language_">this</span>.<span class="property">isShow</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">autoScrollToBottom</span>(),e.<span class="property">noOrigin</span>||<span class="variable language_">this</span>.<span class="title function_">printOriginLog</span>(e)&#125;<span class="keyword">else</span> <span class="variable language_">this</span>.<span class="property">logList</span>.<span class="title function_">push</span>(e);<span class="keyword">else</span> e.<span class="property">noOrigin</span>||<span class="variable language_">this</span>.<span class="title function_">printOriginLog</span>(e)&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;printRepeatLog&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e=r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;#&quot;</span>+h.<span class="property">_id</span>),t=r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-item-repeat&quot;</span>,e);t||((t=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;i&quot;</span>)).<span class="property">className</span>=<span class="string">&quot;vc-item-repeat&quot;</span>,e.<span class="title function_">insertBefore</span>(t,e.<span class="property">lastChild</span>)),h.<span class="property">count</span>,h.<span class="property">count</span>++,t.<span class="property">innerHTML</span>=h.<span class="property">count</span>&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;printNewLog&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> o=r.<span class="property">default</span>.<span class="title function_">render</span>(a.<span class="property">default</span>,&#123;<span class="attr">_id</span>:e.<span class="property">_id</span>,<span class="attr">logType</span>:e.<span class="property">logType</span>,<span class="attr">style</span>:e.<span class="property">style</span>||<span class="string">&quot;&quot;</span>&#125;),i=<span class="regexp">/(\%c )|( \%c)/g</span>,l=[];<span class="keyword">if</span>(n.<span class="title function_">isString</span>(t[<span class="number">0</span>])&amp;&amp;i.<span class="title function_">test</span>(t[<span class="number">0</span>]))&#123;<span class="keyword">for</span>(<span class="keyword">var</span> c=t[<span class="number">0</span>].<span class="title function_">split</span>(i).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span>!==e&amp;&amp;<span class="string">&quot;&quot;</span>!==e&amp;&amp;!<span class="regexp">/ ?\%c ?/</span>.<span class="title function_">test</span>(e)&#125;),s=t[<span class="number">0</span>].<span class="title function_">match</span>(i),u=<span class="number">0</span>;u&lt;s.<span class="property">length</span>;u++)n.<span class="title function_">isString</span>(t[u+<span class="number">1</span>])&amp;&amp;l.<span class="title function_">push</span>(t[u+<span class="number">1</span>]);<span class="keyword">for</span>(<span class="keyword">var</span> v=s.<span class="property">length</span>+<span class="number">1</span>;v&lt;t.<span class="property">length</span>;v++)c.<span class="title function_">push</span>(t[v]);t=c&#125;<span class="keyword">for</span>(<span class="keyword">var</span> f=r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-item-content&quot;</span>,o),p=<span class="number">0</span>;p&lt;t.<span class="property">length</span>;p++)&#123;<span class="keyword">var</span> b=<span class="keyword">void</span> <span class="number">0</span>;<span class="keyword">try</span>&#123;<span class="keyword">if</span>(<span class="string">&quot;&quot;</span>===t[p])<span class="keyword">continue</span>;b=n.<span class="title function_">isFunction</span>(t[p])?<span class="string">&quot;&lt;span&gt; &quot;</span>+t[p].<span class="title function_">toString</span>()+<span class="string">&quot;&lt;/span&gt;&quot;</span>:n.<span class="title function_">isObject</span>(t[p])||n.<span class="title function_">isArray</span>(t[p])?<span class="variable language_">this</span>.<span class="title function_">getFoldedLine</span>(t[p]):(l[p]?<span class="string">&#x27;&lt;span style=&quot;&#x27;</span>.<span class="title function_">concat</span>(l[p],<span class="string">&#x27;&quot;&gt; &#x27;</span>):<span class="string">&quot;&lt;span&gt; &quot;</span>)+n.<span class="title function_">htmlEncode</span>(t[p]).<span class="title function_">replace</span>(<span class="regexp">/\n/g</span>,<span class="string">&quot;&lt;br/&gt;&quot;</span>)+<span class="string">&quot;&lt;/span&gt;&quot;</span>&#125;<span class="keyword">catch</span>(e)&#123;b=<span class="string">&quot;&lt;span&gt; [&quot;</span>+<span class="title function_">d</span>(t[p])+<span class="string">&quot;]&lt;/span&gt;&quot;</span>&#125;b&amp;&amp;(<span class="string">&quot;string&quot;</span>==<span class="keyword">typeof</span> b?f.<span class="title function_">insertAdjacentHTML</span>(<span class="string">&quot;beforeend&quot;</span>,b):f.<span class="title function_">insertAdjacentElement</span>(<span class="string">&quot;beforeend&quot;</span>,b))&#125;n.<span class="title function_">isObject</span>(e.<span class="property">content</span>)&amp;&amp;f.<span class="title function_">insertAdjacentElement</span>(<span class="string">&quot;beforeend&quot;</span>,e.<span class="property">content</span>),r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-log&quot;</span>,<span class="variable language_">this</span>.<span class="property">$tabbox</span>).<span class="title function_">insertAdjacentElement</span>(<span class="string">&quot;beforeend&quot;</span>,o),<span class="variable language_">this</span>.<span class="property">logNumber</span>++,<span class="variable language_">this</span>.<span class="title function_">limitMaxLogs</span>()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;getFoldedLine&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> o=<span class="variable language_">this</span>;<span class="keyword">if</span>(!t)&#123;<span class="keyword">var</span> i=n.<span class="title class_">JSON</span>Stringify(e),a=i.<span class="title function_">substr</span>(<span class="number">0</span>,<span class="number">36</span>);t=n.<span class="title function_">getObjName</span>(e),i.<span class="property">length</span>&gt;<span class="number">36</span>&amp;&amp;(a+=<span class="string">&quot;...&quot;</span>),t+=<span class="string">&quot; &quot;</span>+a&#125;<span class="keyword">var</span> s=r.<span class="property">default</span>.<span class="title function_">render</span>(l.<span class="property">default</span>,&#123;<span class="attr">outer</span>:t,<span class="attr">lineType</span>:<span class="string">&quot;obj&quot;</span>&#125;);<span class="keyword">return</span> r.<span class="property">default</span>.<span class="title function_">bind</span>(r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-fold-outer&quot;</span>,s),<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params">t</span>)&#123;t.<span class="title function_">preventDefault</span>(),t.<span class="title function_">stopPropagation</span>(),r.<span class="property">default</span>.<span class="title function_">hasClass</span>(s,<span class="string">&quot;vc-toggle&quot;</span>)?(r.<span class="property">default</span>.<span class="title function_">removeClass</span>(s,<span class="string">&quot;vc-toggle&quot;</span>),r.<span class="property">default</span>.<span class="title function_">removeClass</span>(r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-fold-inner&quot;</span>,s),<span class="string">&quot;vc-toggle&quot;</span>),r.<span class="property">default</span>.<span class="title function_">removeClass</span>(r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-fold-outer&quot;</span>,s),<span class="string">&quot;vc-toggle&quot;</span>)):(r.<span class="property">default</span>.<span class="title function_">addClass</span>(s,<span class="string">&quot;vc-toggle&quot;</span>),r.<span class="property">default</span>.<span class="title function_">addClass</span>(r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-fold-inner&quot;</span>,s),<span class="string">&quot;vc-toggle&quot;</span>),r.<span class="property">default</span>.<span class="title function_">addClass</span>(r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-fold-outer&quot;</span>,s),<span class="string">&quot;vc-toggle&quot;</span>));<span class="keyword">var</span> i=r.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-fold-inner&quot;</span>,s);<span class="keyword">return</span> <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(<span class="number">0</span>==i.<span class="property">children</span>.<span class="property">length</span>&amp;&amp;e)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=n.<span class="title function_">getObjAllKeys</span>(e),a=<span class="number">0</span>;a&lt;t.<span class="property">length</span>;a++)&#123;<span class="keyword">var</span> s=<span class="keyword">void</span> <span class="number">0</span>,d=<span class="string">&quot;undefined&quot;</span>,u=<span class="string">&quot;&quot;</span>;<span class="keyword">try</span>&#123;s=e[t[a]]&#125;<span class="keyword">catch</span>(e)&#123;<span class="keyword">continue</span>&#125;n.<span class="title function_">isString</span>(s)?(d=<span class="string">&quot;string&quot;</span>,s=<span class="string">&#x27;&quot;&#x27;</span>+s+<span class="string">&#x27;&quot;&#x27;</span>):n.<span class="title function_">isNumber</span>(s)?d=<span class="string">&quot;number&quot;</span>:n.<span class="title function_">isBoolean</span>(s)?d=<span class="string">&quot;boolean&quot;</span>:n.<span class="title function_">isNull</span>(s)?(d=<span class="string">&quot;null&quot;</span>,s=<span class="string">&quot;null&quot;</span>):n.<span class="title function_">isUndefined</span>(s)?(d=<span class="string">&quot;undefined&quot;</span>,s=<span class="string">&quot;undefined&quot;</span>):n.<span class="title function_">isFunction</span>(s)?(d=<span class="string">&quot;function&quot;</span>,s=<span class="string">&quot;function()&quot;</span>):n.<span class="title function_">isSymbol</span>(s)&amp;&amp;(d=<span class="string">&quot;symbol&quot;</span>);<span class="keyword">var</span> v=<span class="keyword">void</span> <span class="number">0</span>;<span class="keyword">if</span>(n.<span class="title function_">isArray</span>(s))&#123;<span class="keyword">var</span> f=n.<span class="title function_">getObjName</span>(s)+<span class="string">&quot;[&quot;</span>+s.<span class="property">length</span>+<span class="string">&quot;]&quot;</span>;v=o.<span class="title function_">getFoldedLine</span>(s,r.<span class="property">default</span>.<span class="title function_">render</span>(c.<span class="property">default</span>,&#123;<span class="attr">key</span>:t[a],<span class="attr">keyType</span>:u,<span class="attr">value</span>:f,<span class="attr">valueType</span>:<span class="string">&quot;array&quot;</span>&#125;,!<span class="number">0</span>))&#125;<span class="keyword">else</span> <span class="keyword">if</span>(n.<span class="title function_">isObject</span>(s))&#123;<span class="keyword">var</span> p=n.<span class="title function_">getObjName</span>(s);v=o.<span class="title function_">getFoldedLine</span>(s,r.<span class="property">default</span>.<span class="title function_">render</span>(c.<span class="property">default</span>,&#123;<span class="attr">key</span>:n.<span class="title function_">htmlEncode</span>(t[a]),<span class="attr">keyType</span>:u,<span class="attr">value</span>:p,<span class="attr">valueType</span>:<span class="string">&quot;object&quot;</span>&#125;,!<span class="number">0</span>))&#125;<span class="keyword">else</span>&#123;e.<span class="property">hasOwnProperty</span>&amp;&amp;!e.<span class="title function_">hasOwnProperty</span>(t[a])&amp;&amp;(u=<span class="string">&quot;private&quot;</span>);<span class="keyword">var</span> b=&#123;<span class="attr">lineType</span>:<span class="string">&quot;kv&quot;</span>,<span class="attr">key</span>:n.<span class="title function_">htmlEncode</span>(t[a]),<span class="attr">keyType</span>:u,<span class="attr">value</span>:n.<span class="title function_">htmlEncode</span>(s),<span class="attr">valueType</span>:d&#125;;v=r.<span class="property">default</span>.<span class="title function_">render</span>(l.<span class="property">default</span>,b)&#125;i.<span class="title function_">insertAdjacentElement</span>(<span class="string">&quot;beforeend&quot;</span>,v)&#125;<span class="keyword">if</span>(n.<span class="title function_">isObject</span>(e))&#123;<span class="keyword">var</span> g,h=e.<span class="property">__proto__</span>;g=n.<span class="title function_">isObject</span>(h)?o.<span class="title function_">getFoldedLine</span>(h,r.<span class="property">default</span>.<span class="title function_">render</span>(c.<span class="property">default</span>,&#123;<span class="attr">key</span>:<span class="string">&quot;__proto__&quot;</span>,<span class="attr">keyType</span>:<span class="string">&quot;private&quot;</span>,<span class="attr">value</span>:n.<span class="title function_">getObjName</span>(h),<span class="attr">valueType</span>:<span class="string">&quot;object&quot;</span>&#125;,!<span class="number">0</span>)):r.<span class="property">default</span>.<span class="title function_">render</span>(c.<span class="property">default</span>,&#123;<span class="attr">key</span>:<span class="string">&quot;__proto__&quot;</span>,<span class="attr">keyType</span>:<span class="string">&quot;private&quot;</span>,<span class="attr">value</span>:<span class="string">&quot;null&quot;</span>,<span class="attr">valueType</span>:<span class="string">&quot;null&quot;</span>&#125;),i.<span class="title function_">insertAdjacentElement</span>(<span class="string">&quot;beforeend&quot;</span>,g)&#125;&#125;&#125;),!<span class="number">1</span>&#125;),s&#125;&#125;])&amp;&amp;<span class="title function_">u</span>(o.<span class="property"><span class="keyword">prototype</span></span>,s),m&amp;&amp;<span class="title function_">u</span>(o,m),t&#125;();m.<span class="property">AddedLogID</span>=[];<span class="keyword">var</span> y=m;o.<span class="property">default</span>=y,e.<span class="property">exports</span>=t.<span class="property">default</span>&#125;)?n.<span class="title function_">apply</span>(t,r):n)||(e.<span class="property">exports</span>=i)&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="string">&quot;use strict&quot;</span>;e.<span class="property">exports</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=[];<span class="keyword">return</span> t.<span class="property">toString</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">var</span> o=<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> o=e[<span class="number">1</span>]||<span class="string">&quot;&quot;</span>,n=e[<span class="number">3</span>];<span class="keyword">if</span>(!n)<span class="keyword">return</span> o;<span class="keyword">if</span>(t&amp;&amp;<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> btoa)&#123;<span class="keyword">var</span> r=(a=n,l=<span class="title function_">btoa</span>(<span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(a)))),c=<span class="string">&quot;sourceMappingURL=data:application/json;charset=utf-8;base64,&quot;</span>.<span class="title function_">concat</span>(l),<span class="string">&quot;/*# &quot;</span>.<span class="title function_">concat</span>(c,<span class="string">&quot; */&quot;</span>)),i=n.<span class="property">sources</span>.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span><span class="string">&quot;/*# sourceURL=&quot;</span>.<span class="title function_">concat</span>(n.<span class="property">sourceRoot</span>).<span class="title function_">concat</span>(e,<span class="string">&quot; */&quot;</span>)&#125;);<span class="keyword">return</span>[o].<span class="title function_">concat</span>(i).<span class="title function_">concat</span>([r]).<span class="title function_">join</span>(<span class="string">&quot;\n&quot;</span>)&#125;<span class="keyword">var</span> a,l,c;<span class="keyword">return</span>[o].<span class="title function_">join</span>(<span class="string">&quot;\n&quot;</span>)&#125;(t,e);<span class="keyword">return</span> t[<span class="number">2</span>]?<span class="string">&quot;@media &quot;</span>.<span class="title function_">concat</span>(t[<span class="number">2</span>],<span class="string">&quot;&#123;&quot;</span>).<span class="title function_">concat</span>(o,<span class="string">&quot;&#125;&quot;</span>):o&#125;).<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>)&#125;,t.<span class="property">i</span>=<span class="keyword">function</span>(<span class="params">e,o</span>)&#123;<span class="string">&quot;string&quot;</span>==<span class="keyword">typeof</span> e&amp;&amp;(e=[[<span class="literal">null</span>,e,<span class="string">&quot;&quot;</span>]]);<span class="keyword">for</span>(<span class="keyword">var</span> n=&#123;&#125;,r=<span class="number">0</span>;r&lt;<span class="variable language_">this</span>.<span class="property">length</span>;r++)&#123;<span class="keyword">var</span> i=<span class="variable language_">this</span>[r][<span class="number">0</span>];<span class="literal">null</span>!=i&amp;&amp;(n[i]=!<span class="number">0</span>)&#125;<span class="keyword">for</span>(<span class="keyword">var</span> a=<span class="number">0</span>;a&lt;e.<span class="property">length</span>;a++)&#123;<span class="keyword">var</span> l=e[a];<span class="literal">null</span>!=l[<span class="number">0</span>]&amp;&amp;n[l[<span class="number">0</span>]]||(o&amp;&amp;!l[<span class="number">2</span>]?l[<span class="number">2</span>]=<span class="attr">o</span>:o&amp;&amp;(l[<span class="number">2</span>]=<span class="string">&quot;(&quot;</span>.<span class="title function_">concat</span>(l[<span class="number">2</span>],<span class="string">&quot;) and (&quot;</span>).<span class="title function_">concat</span>(o,<span class="string">&quot;)&quot;</span>)),t.<span class="title function_">push</span>(l))&#125;&#125;,t&#125;&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">var</span> n,r=&#123;&#125;,i=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span>===n&amp;&amp;(n=<span class="title class_">Boolean</span>(<span class="variable language_">window</span>&amp;&amp;<span class="variable language_">document</span>&amp;&amp;<span class="variable language_">document</span>.<span class="property">all</span>&amp;&amp;!<span class="variable language_">window</span>.<span class="property">atob</span>)),n&#125;,a=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e=&#123;&#125;;<span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">if</span>(<span class="keyword">void</span> <span class="number">0</span>===e[t])&#123;<span class="keyword">var</span> o=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(t);<span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">HTMLIFrameElement</span>&amp;&amp;o <span class="keyword">instanceof</span> <span class="variable language_">window</span>.<span class="property">HTMLIFrameElement</span>)<span class="keyword">try</span>&#123;o=o.<span class="property">contentDocument</span>.<span class="property">head</span>&#125;<span class="keyword">catch</span>(e)&#123;o=<span class="literal">null</span>&#125;e[t]=o&#125;<span class="keyword">return</span> e[t]&#125;&#125;();<span class="keyword">function</span> <span class="title function_">l</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=[],n=&#123;&#125;,r=<span class="number">0</span>;r&lt;e.<span class="property">length</span>;r++)&#123;<span class="keyword">var</span> i=e[r],a=t.<span class="property">base</span>?i[<span class="number">0</span>]+t.<span class="property">base</span>:i[<span class="number">0</span>],l=&#123;<span class="attr">css</span>:i[<span class="number">1</span>],<span class="attr">media</span>:i[<span class="number">2</span>],<span class="attr">sourceMap</span>:i[<span class="number">3</span>]&#125;;n[a]?n[a].<span class="property">parts</span>.<span class="title function_">push</span>(l):o.<span class="title function_">push</span>(n[a]=&#123;<span class="attr">id</span>:a,<span class="attr">parts</span>:[l]&#125;)&#125;<span class="keyword">return</span> o&#125;<span class="keyword">function</span> <span class="title function_">c</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;e.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=e[o],i=r[n.<span class="property">id</span>],a=<span class="number">0</span>;<span class="keyword">if</span>(i)&#123;<span class="keyword">for</span>(i.<span class="property">refs</span>++;a&lt;i.<span class="property">parts</span>.<span class="property">length</span>;a++)i.<span class="property">parts</span>[a](n.<span class="property">parts</span>[a]);<span class="keyword">for</span>(;a&lt;n.<span class="property">parts</span>.<span class="property">length</span>;a++)i.<span class="property">parts</span>.<span class="title function_">push</span>(<span class="title function_">b</span>(n.<span class="property">parts</span>[a],t))&#125;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> l=[];a&lt;n.<span class="property">parts</span>.<span class="property">length</span>;a++)l.<span class="title function_">push</span>(<span class="title function_">b</span>(n.<span class="property">parts</span>[a],t));r[n.<span class="property">id</span>]=&#123;<span class="attr">id</span>:n.<span class="property">id</span>,<span class="attr">refs</span>:<span class="number">1</span>,<span class="attr">parts</span>:l&#125;&#125;&#125;&#125;<span class="keyword">function</span> <span class="title function_">s</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;style&quot;</span>);<span class="keyword">if</span>(<span class="keyword">void</span> <span class="number">0</span>===e.<span class="property">attributes</span>.<span class="property">nonce</span>)&#123;<span class="keyword">var</span> n=o.<span class="property">nc</span>;n&amp;&amp;(e.<span class="property">attributes</span>.<span class="property">nonce</span>=n)&#125;<span class="keyword">if</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(e.<span class="property">attributes</span>).<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">o</span>)&#123;t.<span class="title function_">setAttribute</span>(o,e.<span class="property">attributes</span>[o])&#125;),<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> e.<span class="property">insert</span>)e.<span class="title function_">insert</span>(t);<span class="keyword">else</span>&#123;<span class="keyword">var</span> r=<span class="title function_">a</span>(e.<span class="property">insert</span>||<span class="string">&quot;head&quot;</span>);<span class="keyword">if</span>(!r)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;Couldn&#x27;t find a style target. This probably means that the value for the &#x27;insert&#x27; parameter is invalid.&quot;</span>);r.<span class="title function_">appendChild</span>(t)&#125;<span class="keyword">return</span> t&#125;<span class="keyword">var</span> d,u=(d=[],<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span> d[e]=t,d.<span class="title function_">filter</span>(<span class="title class_">Boolean</span>).<span class="title function_">join</span>(<span class="string">&quot;\n&quot;</span>)&#125;);<span class="keyword">function</span> <span class="title function_">v</span>(<span class="params">e,t,o,n</span>)&#123;<span class="keyword">var</span> r=o?<span class="string">&quot;&quot;</span>:n.<span class="property">css</span>;<span class="keyword">if</span>(e.<span class="property">styleSheet</span>)e.<span class="property">styleSheet</span>.<span class="property">cssText</span>=<span class="title function_">u</span>(t,r);<span class="keyword">else</span>&#123;<span class="keyword">var</span> i=<span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(r),a=e.<span class="property">childNodes</span>;a[t]&amp;&amp;e.<span class="title function_">removeChild</span>(a[t]),a.<span class="property">length</span>?e.<span class="title function_">insertBefore</span>(i,a[t]):e.<span class="title function_">appendChild</span>(i)&#125;&#125;<span class="keyword">var</span> f=<span class="literal">null</span>,p=<span class="number">0</span>;<span class="keyword">function</span> <span class="title function_">b</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> o,n,r;<span class="keyword">if</span>(t.<span class="property">singleton</span>)&#123;<span class="keyword">var</span> i=p++;o=f||(f=<span class="title function_">s</span>(t)),n=v.<span class="title function_">bind</span>(<span class="literal">null</span>,o,i,!<span class="number">1</span>),r=v.<span class="title function_">bind</span>(<span class="literal">null</span>,o,i,!<span class="number">0</span>)&#125;<span class="keyword">else</span> o=<span class="title function_">s</span>(t),n=<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n=o.<span class="property">css</span>,r=o.<span class="property">media</span>,i=o.<span class="property">sourceMap</span>;<span class="keyword">if</span>(r&amp;&amp;e.<span class="title function_">setAttribute</span>(<span class="string">&quot;media&quot;</span>,r),i&amp;&amp;btoa&amp;&amp;(n+=<span class="string">&quot;\n/*# sourceMappingURL=data:application/json;base64,&quot;</span>.<span class="title function_">concat</span>(<span class="title function_">btoa</span>(<span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(i)))),<span class="string">&quot; */&quot;</span>)),e.<span class="property">styleSheet</span>)e.<span class="property">styleSheet</span>.<span class="property">cssText</span>=n;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(;e.<span class="property">firstChild</span>;)e.<span class="title function_">removeChild</span>(e.<span class="property">firstChild</span>);e.<span class="title function_">appendChild</span>(<span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(n))&#125;&#125;.<span class="title function_">bind</span>(<span class="literal">null</span>,o,t),r=<span class="keyword">function</span>(<span class="params"></span>)&#123;!<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(<span class="literal">null</span>===e.<span class="property">parentNode</span>)<span class="keyword">return</span>!<span class="number">1</span>;e.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(e)&#125;(o)&#125;;<span class="keyword">return</span> <span class="title function_">n</span>(e),<span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">if</span>(t)&#123;<span class="keyword">if</span>(t.<span class="property">css</span>===e.<span class="property">css</span>&amp;&amp;t.<span class="property">media</span>===e.<span class="property">media</span>&amp;&amp;t.<span class="property">sourceMap</span>===e.<span class="property">sourceMap</span>)<span class="keyword">return</span>;<span class="title function_">n</span>(e=t)&#125;<span class="keyword">else</span> <span class="title function_">r</span>()&#125;&#125;e.<span class="property">exports</span>=<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;(t=t||&#123;&#125;).<span class="property">attributes</span>=<span class="string">&quot;object&quot;</span>==<span class="keyword">typeof</span> t.<span class="property">attributes</span>?t.<span class="property">attributes</span>:&#123;&#125;,t.<span class="property">singleton</span>||<span class="string">&quot;boolean&quot;</span>==<span class="keyword">typeof</span> t.<span class="property">singleton</span>||(t.<span class="property">singleton</span>=<span class="title function_">i</span>());<span class="keyword">var</span> o=<span class="title function_">l</span>(e,t);<span class="keyword">return</span> <span class="title function_">c</span>(o,t),<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> n=[],i=<span class="number">0</span>;i&lt;o.<span class="property">length</span>;i++)&#123;<span class="keyword">var</span> a=o[i],s=r[a.<span class="property">id</span>];s&amp;&amp;(s.<span class="property">refs</span>--,n.<span class="title function_">push</span>(s))&#125;e&amp;&amp;<span class="title function_">c</span>(<span class="title function_">l</span>(e,t),t);<span class="keyword">for</span>(<span class="keyword">var</span> d=<span class="number">0</span>;d&lt;n.<span class="property">length</span>;d++)&#123;<span class="keyword">var</span> u=n[d];<span class="keyword">if</span>(<span class="number">0</span>===u.<span class="property">refs</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> v=<span class="number">0</span>;v&lt;u.<span class="property">parts</span>.<span class="property">length</span>;v++)u.<span class="property">parts</span>[v]();<span class="keyword">delete</span> r[u.<span class="property">id</span>]&#125;&#125;&#125;&#125;&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n,r,i;r=[t,<span class="title function_">o</span>(<span class="number">7</span>),<span class="title function_">o</span>(<span class="number">8</span>)],<span class="keyword">void</span> <span class="number">0</span>===(i=<span class="string">&quot;function&quot;</span>==<span class="title function_">typeof</span>(n=<span class="keyword">function</span>(<span class="params">o,n,r</span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(o,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),o.<span class="property">default</span>=<span class="keyword">void</span> <span class="number">0</span>;<span class="keyword">var</span> i,a=(i=r,r=i&amp;&amp;i.<span class="property">__esModule</span>?<span class="attr">i</span>:&#123;<span class="attr">default</span>:i&#125;).<span class="property">default</span>;o.<span class="property">default</span>=a,e.<span class="property">exports</span>=t.<span class="property">default</span>&#125;)?n.<span class="title function_">apply</span>(t,r):n)||(e.<span class="property">exports</span>=i)&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n,r,i;r=[],<span class="keyword">void</span> <span class="number">0</span>===(i=<span class="string">&quot;function&quot;</span>==<span class="title function_">typeof</span>(n=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">if</span>(<span class="string">&quot;undefined&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>)&#123;<span class="variable language_">window</span>.<span class="property">Symbol</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;;<span class="keyword">var</span> e=<span class="string">&quot;__symbol_iterator_key&quot;</span>;<span class="variable language_">window</span>.<span class="property">Symbol</span>.<span class="property">iterator</span>=e,<span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>[e]=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e=<span class="variable language_">this</span>,t=<span class="number">0</span>;<span class="keyword">return</span>&#123;<span class="attr">next</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span>&#123;<span class="attr">done</span>:e.<span class="property">length</span>===t,<span class="attr">value</span>:e.<span class="property">length</span>===t?<span class="keyword">void</span> <span class="number">0</span>:e[t++]&#125;&#125;&#125;&#125;&#125;&#125;)?n.<span class="title function_">apply</span>(t,r):n)||(e.<span class="property">exports</span>=i)&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n,r,i;r=[t,<span class="title function_">o</span>(<span class="number">9</span>),<span class="title function_">o</span>(<span class="number">0</span>),<span class="title function_">o</span>(<span class="number">1</span>),<span class="title function_">o</span>(<span class="number">11</span>),<span class="title function_">o</span>(<span class="number">13</span>),<span class="title function_">o</span>(<span class="number">14</span>),<span class="title function_">o</span>(<span class="number">15</span>),<span class="title function_">o</span>(<span class="number">16</span>),<span class="title function_">o</span>(<span class="number">17</span>),<span class="title function_">o</span>(<span class="number">2</span>),<span class="title function_">o</span>(<span class="number">3</span>),<span class="title function_">o</span>(<span class="number">21</span>),<span class="title function_">o</span>(<span class="number">24</span>),<span class="title function_">o</span>(<span class="number">26</span>),<span class="title function_">o</span>(<span class="number">30</span>),<span class="title function_">o</span>(<span class="number">37</span>)],<span class="keyword">void</span> <span class="number">0</span>===(i=<span class="string">&quot;function&quot;</span>==<span class="title function_">typeof</span>(n=<span class="keyword">function</span>(<span class="params">o,n,r,i,a,l,c,s,d,u,v,f,p,b,g,h,m</span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">y</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;e.<span class="property">__esModule</span>?<span class="attr">e</span>:&#123;<span class="attr">default</span>:e&#125;&#125;<span class="keyword">function</span> <span class="title function_">_</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;t.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=t[o];n.<span class="property">enumerable</span>=n.<span class="property">enumerable</span>||!<span class="number">1</span>,n.<span class="property">configurable</span>=!<span class="number">0</span>,<span class="string">&quot;value&quot;</span><span class="keyword">in</span> n&amp;&amp;(n.<span class="property">writable</span>=!<span class="number">0</span>),<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(e,n.<span class="property">key</span>,n)&#125;&#125;<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(o,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),o.<span class="property">default</span>=<span class="keyword">void</span> <span class="number">0</span>,n=<span class="title function_">y</span>(n),r=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(e&amp;&amp;e.<span class="property">__esModule</span>)<span class="keyword">return</span> e;<span class="keyword">var</span> t=&#123;&#125;;<span class="keyword">if</span>(<span class="literal">null</span>!=e)<span class="keyword">for</span>(<span class="keyword">var</span> o <span class="keyword">in</span> e)<span class="keyword">if</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(e,o))&#123;<span class="keyword">var</span> n=<span class="title class_">Object</span>.<span class="property">defineProperty</span>&amp;&amp;<span class="title class_">Object</span>.<span class="property">getOwnPropertyDescriptor</span>?<span class="title class_">Object</span>.<span class="title function_">getOwnPropertyDescriptor</span>(e,o):&#123;&#125;;n.<span class="property">get</span>||n.<span class="property">set</span>?<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(t,o,n):t[o]=e[o]&#125;<span class="keyword">return</span> t.<span class="property">default</span>=e,t&#125;(r),i=<span class="title function_">y</span>(i),l=<span class="title function_">y</span>(l),c=<span class="title function_">y</span>(c),s=<span class="title function_">y</span>(s),d=<span class="title function_">y</span>(d),u=<span class="title function_">y</span>(u),v=<span class="title function_">y</span>(v),f=<span class="title function_">y</span>(f),p=<span class="title function_">y</span>(p),b=<span class="title function_">y</span>(b),g=<span class="title function_">y</span>(g),h=<span class="title function_">y</span>(h),m=<span class="title function_">y</span>(m);<span class="keyword">var</span> w=<span class="string">&quot;#__vconsole&quot;</span>,x=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">function</span> <span class="title function_">e</span>(<span class="params">t</span>)&#123;<span class="keyword">if</span>(<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(!(e <span class="keyword">instanceof</span> t))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Cannot call a class as a function&quot;</span>)&#125;(<span class="variable language_">this</span>,e),i.<span class="property">default</span>.<span class="title function_">one</span>(w))<span class="variable language_">console</span>.<span class="title function_">debug</span>(<span class="string">&quot;vConsole is already exists.&quot;</span>);<span class="keyword">else</span>&#123;<span class="keyword">var</span> o=<span class="variable language_">this</span>;<span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">version</span>=n.<span class="property">default</span>.<span class="property">version</span>,<span class="variable language_">this</span>.<span class="property">$dom</span>=<span class="literal">null</span>,<span class="variable language_">this</span>.<span class="property">isInited</span>=!<span class="number">1</span>,<span class="variable language_">this</span>.<span class="property">option</span>=&#123;<span class="attr">defaultPlugins</span>:[<span class="string">&quot;system&quot;</span>,<span class="string">&quot;network&quot;</span>,<span class="string">&quot;element&quot;</span>,<span class="string">&quot;storage&quot;</span>]&#125;,<span class="variable language_">this</span>.<span class="property">activedTab</span>=<span class="string">&quot;&quot;</span>,<span class="variable language_">this</span>.<span class="property">tabList</span>=[],<span class="variable language_">this</span>.<span class="property">pluginList</span>=&#123;&#125;,<span class="variable language_">this</span>.<span class="property">switchPos</span>=&#123;<span class="attr">x</span>:<span class="number">10</span>,<span class="attr">y</span>:<span class="number">10</span>,<span class="attr">startX</span>:<span class="number">0</span>,<span class="attr">startY</span>:<span class="number">0</span>,<span class="attr">endX</span>:<span class="number">0</span>,<span class="attr">endY</span>:<span class="number">0</span>&#125;,<span class="variable language_">this</span>.<span class="property">tool</span>=r,<span class="variable language_">this</span>.<span class="property">$</span>=i.<span class="property">default</span>,r.<span class="title function_">isObject</span>(t))<span class="keyword">for</span>(<span class="keyword">var</span> a <span class="keyword">in</span> t)<span class="variable language_">this</span>.<span class="property">option</span>[a]=t[a];<span class="variable language_">this</span>.<span class="title function_">_addBuiltInPlugins</span>();<span class="keyword">var</span> l,c=<span class="keyword">function</span>(<span class="params"></span>)&#123;o.<span class="property">isInited</span>||(o.<span class="title function_">_render</span>(),o.<span class="title function_">_mockTap</span>(),o.<span class="title function_">_bindEvent</span>(),o.<span class="title function_">_autoRun</span>())&#125;;<span class="keyword">if</span>(<span class="keyword">void</span> <span class="number">0</span>!==<span class="variable language_">document</span>)<span class="string">&quot;loading&quot;</span>===<span class="variable language_">document</span>.<span class="property">readyState</span>?i.<span class="property">default</span>.<span class="title function_">bind</span>(<span class="variable language_">window</span>,<span class="string">&quot;DOMContentLoaded&quot;</span>,c):<span class="title function_">c</span>();<span class="keyword">else</span> l=<span class="built_in">setTimeout</span>(<span class="keyword">function</span> <span class="title function_">e</span>(<span class="params"></span>)&#123;<span class="variable language_">document</span>&amp;&amp;<span class="string">&quot;complete&quot;</span>==<span class="variable language_">document</span>.<span class="property">readyState</span>?(l&amp;&amp;<span class="built_in">clearTimeout</span>(l),<span class="title function_">c</span>()):l=<span class="built_in">setTimeout</span>(e,<span class="number">1</span>)&#125;,<span class="number">1</span>)&#125;&#125;<span class="keyword">var</span> t,o,a;<span class="keyword">return</span> t=e,(o=[&#123;<span class="attr">key</span>:<span class="string">&quot;_addBuiltInPlugins&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="title function_">addPlugin</span>(<span class="keyword">new</span> p.<span class="title function_">default</span>(<span class="string">&quot;default&quot;</span>,<span class="string">&quot;Log&quot;</span>));<span class="keyword">var</span> e=<span class="variable language_">this</span>.<span class="property">option</span>.<span class="property">defaultPlugins</span>,t=&#123;<span class="attr">system</span>:&#123;<span class="attr">proto</span>:b.<span class="property">default</span>,<span class="attr">name</span>:<span class="string">&quot;System&quot;</span>&#125;,<span class="attr">network</span>:&#123;<span class="attr">proto</span>:g.<span class="property">default</span>,<span class="attr">name</span>:<span class="string">&quot;Network&quot;</span>&#125;,<span class="attr">element</span>:&#123;<span class="attr">proto</span>:h.<span class="property">default</span>,<span class="attr">name</span>:<span class="string">&quot;Element&quot;</span>&#125;,<span class="attr">storage</span>:&#123;<span class="attr">proto</span>:m.<span class="property">default</span>,<span class="attr">name</span>:<span class="string">&quot;Storage&quot;</span>&#125;&#125;;<span class="keyword">if</span>(e&amp;&amp;r.<span class="title function_">isArray</span>(e))<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;e.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=t[e[o]];n?<span class="variable language_">this</span>.<span class="title function_">addPlugin</span>(<span class="keyword">new</span> n.<span class="title function_">proto</span>(e[o],n.<span class="property">name</span>)):<span class="variable language_">console</span>.<span class="title function_">debug</span>(<span class="string">&quot;Unrecognized default plugin ID:&quot;</span>,e[o])&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;_render&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(!i.<span class="property">default</span>.<span class="title function_">one</span>(w))&#123;<span class="keyword">var</span> e=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);e.<span class="property">innerHTML</span>=l.<span class="property">default</span>,<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="title function_">insertAdjacentElement</span>(<span class="string">&quot;beforeend&quot;</span>,e.<span class="property">children</span>[<span class="number">0</span>])&#125;<span class="variable language_">this</span>.<span class="property">$dom</span>=i.<span class="property">default</span>.<span class="title function_">one</span>(w);<span class="keyword">var</span> t=i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-switch&quot;</span>,<span class="variable language_">this</span>.<span class="property">$dom</span>),o=<span class="number">1</span>*r.<span class="title function_">getStorage</span>(<span class="string">&quot;switch_x&quot;</span>),n=<span class="number">1</span>*r.<span class="title function_">getStorage</span>(<span class="string">&quot;switch_y&quot;</span>);(o||n)&amp;&amp;(o+t.<span class="property">offsetWidth</span>&gt;<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">offsetWidth</span>&amp;&amp;(o=<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">offsetWidth</span>-t.<span class="property">offsetWidth</span>),n+t.<span class="property">offsetHeight</span>&gt;<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">offsetHeight</span>&amp;&amp;(n=<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">offsetHeight</span>-t.<span class="property">offsetHeight</span>),o&lt;<span class="number">0</span>&amp;&amp;(o=<span class="number">0</span>),n&lt;<span class="number">0</span>&amp;&amp;(n=<span class="number">0</span>),<span class="variable language_">this</span>.<span class="property">switchPos</span>.<span class="property">x</span>=o,<span class="variable language_">this</span>.<span class="property">switchPos</span>.<span class="property">y</span>=n,i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-switch&quot;</span>).<span class="property">style</span>.<span class="property">right</span>=o+<span class="string">&quot;px&quot;</span>,i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-switch&quot;</span>).<span class="property">style</span>.<span class="property">bottom</span>=n+<span class="string">&quot;px&quot;</span>);<span class="keyword">var</span> a=<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span>||<span class="number">1</span>,c=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;[name=&quot;viewport&quot;]&#x27;</span>);<span class="keyword">if</span>(c&amp;&amp;c.<span class="property">content</span>)&#123;<span class="keyword">var</span> s=c.<span class="property">content</span>.<span class="title function_">match</span>(<span class="regexp">/initial\-scale\=\d+(\.\d+)?/</span>);(s?<span class="built_in">parseFloat</span>(s[<span class="number">0</span>].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>]):<span class="number">1</span>)&lt;<span class="number">1</span>&amp;&amp;(<span class="variable language_">this</span>.<span class="property">$dom</span>.<span class="property">style</span>.<span class="property">fontSize</span>=<span class="number">13</span>*a+<span class="string">&quot;px&quot;</span>)&#125;i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-mask&quot;</span>,<span class="variable language_">this</span>.<span class="property">$dom</span>).<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span>&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;_mockTap&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e,t,o,n=!<span class="number">1</span>,r=<span class="literal">null</span>;<span class="variable language_">this</span>.<span class="property">$dom</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;touchstart&quot;</span>,<span class="keyword">function</span>(<span class="params">n</span>)&#123;<span class="keyword">if</span>(<span class="keyword">void</span> <span class="number">0</span>===e)&#123;<span class="keyword">var</span> i=n.<span class="property">targetTouches</span>[<span class="number">0</span>];t=i.<span class="property">pageX</span>,o=i.<span class="property">pageY</span>,e=n.<span class="property">timeStamp</span>,r=n.<span class="property">target</span>.<span class="property">nodeType</span>===<span class="title class_">Node</span>.<span class="property">TEXT_NODE</span>?n.<span class="property">target</span>.<span class="property">parentNode</span>:n.<span class="property">target</span>&#125;&#125;,!<span class="number">1</span>),<span class="variable language_">this</span>.<span class="property">$dom</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;touchmove&quot;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> r=e.<span class="property">changedTouches</span>[<span class="number">0</span>];(<span class="title class_">Math</span>.<span class="title function_">abs</span>(r.<span class="property">pageX</span>-t)&gt;<span class="number">10</span>||<span class="title class_">Math</span>.<span class="title function_">abs</span>(r.<span class="property">pageY</span>-o)&gt;<span class="number">10</span>)&amp;&amp;(n=!<span class="number">0</span>)&#125;),<span class="variable language_">this</span>.<span class="property">$dom</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;touchend&quot;</span>,<span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">if</span>(!<span class="number">1</span>===n&amp;&amp;t.<span class="property">timeStamp</span>-e&lt;<span class="number">700</span>&amp;&amp;<span class="literal">null</span>!=r)&#123;<span class="keyword">var</span> o=!<span class="number">1</span>;<span class="keyword">switch</span>(r.<span class="property">tagName</span>.<span class="title function_">toLowerCase</span>())&#123;<span class="keyword">case</span><span class="string">&quot;textarea&quot;</span>:o=!<span class="number">0</span>;<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;input&quot;</span>:<span class="keyword">switch</span>(r.<span class="property">type</span>)&#123;<span class="keyword">case</span><span class="string">&quot;button&quot;</span>:<span class="keyword">case</span><span class="string">&quot;checkbox&quot;</span>:<span class="keyword">case</span><span class="string">&quot;file&quot;</span>:<span class="keyword">case</span><span class="string">&quot;image&quot;</span>:<span class="keyword">case</span><span class="string">&quot;radio&quot;</span>:<span class="keyword">case</span><span class="string">&quot;submit&quot;</span>:o=!<span class="number">1</span>;<span class="keyword">break</span>;<span class="attr">default</span>:o=!r.<span class="property">disabled</span>&amp;&amp;!r.<span class="property">readOnly</span>&#125;&#125;o?r.<span class="title function_">focus</span>():t.<span class="title function_">preventDefault</span>();<span class="keyword">var</span> i=t.<span class="property">changedTouches</span>[<span class="number">0</span>],a=<span class="variable language_">document</span>.<span class="title function_">createEvent</span>(<span class="string">&quot;MouseEvents&quot;</span>);a.<span class="title function_">initMouseEvent</span>(<span class="string">&quot;click&quot;</span>,!<span class="number">0</span>,!<span class="number">0</span>,<span class="variable language_">window</span>,<span class="number">1</span>,i.<span class="property">screenX</span>,i.<span class="property">screenY</span>,i.<span class="property">clientX</span>,i.<span class="property">clientY</span>,!<span class="number">1</span>,!<span class="number">1</span>,!<span class="number">1</span>,!<span class="number">1</span>,<span class="number">0</span>,<span class="literal">null</span>),a.<span class="property">forwardedTouchEvent</span>=!<span class="number">0</span>,a.<span class="title function_">initEvent</span>(<span class="string">&quot;click&quot;</span>,!<span class="number">0</span>,!<span class="number">0</span>),r.<span class="title function_">dispatchEvent</span>(a)&#125;e=<span class="keyword">void</span> <span class="number">0</span>,n=!<span class="number">1</span>,r=<span class="literal">null</span>&#125;,!<span class="number">1</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;_bindEvent&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e=<span class="variable language_">this</span>,t=i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-switch&quot;</span>,e.<span class="property">$dom</span>);i.<span class="property">default</span>.<span class="title function_">bind</span>(t,<span class="string">&quot;touchstart&quot;</span>,<span class="keyword">function</span>(<span class="params">t</span>)&#123;e.<span class="property">switchPos</span>.<span class="property">startX</span>=t.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">pageX</span>,e.<span class="property">switchPos</span>.<span class="property">startY</span>=t.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">pageY</span>&#125;),i.<span class="property">default</span>.<span class="title function_">bind</span>(t,<span class="string">&quot;touchend&quot;</span>,<span class="keyword">function</span>(<span class="params">t</span>)&#123;e.<span class="property">switchPos</span>.<span class="property">x</span>=e.<span class="property">switchPos</span>.<span class="property">endX</span>,e.<span class="property">switchPos</span>.<span class="property">y</span>=e.<span class="property">switchPos</span>.<span class="property">endY</span>,e.<span class="property">switchPos</span>.<span class="property">startX</span>=<span class="number">0</span>,e.<span class="property">switchPos</span>.<span class="property">startY</span>=<span class="number">0</span>,r.<span class="title function_">setStorage</span>(<span class="string">&quot;switch_x&quot;</span>,e.<span class="property">switchPos</span>.<span class="property">x</span>),r.<span class="title function_">setStorage</span>(<span class="string">&quot;switch_y&quot;</span>,e.<span class="property">switchPos</span>.<span class="property">y</span>)&#125;),i.<span class="property">default</span>.<span class="title function_">bind</span>(t,<span class="string">&quot;touchmove&quot;</span>,<span class="keyword">function</span>(<span class="params">o</span>)&#123;<span class="keyword">if</span>(o.<span class="property">touches</span>.<span class="property">length</span>&gt;<span class="number">0</span>)&#123;<span class="keyword">var</span> n=o.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">pageX</span>-e.<span class="property">switchPos</span>.<span class="property">startX</span>,r=o.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">pageY</span>-e.<span class="property">switchPos</span>.<span class="property">startY</span>,i=e.<span class="property">switchPos</span>.<span class="property">x</span>-n,a=e.<span class="property">switchPos</span>.<span class="property">y</span>-r;i+t.<span class="property">offsetWidth</span>&gt;<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">offsetWidth</span>&amp;&amp;(i=<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">offsetWidth</span>-t.<span class="property">offsetWidth</span>),a+t.<span class="property">offsetHeight</span>&gt;<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">offsetHeight</span>&amp;&amp;(a=<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">offsetHeight</span>-t.<span class="property">offsetHeight</span>),i&lt;<span class="number">0</span>&amp;&amp;(i=<span class="number">0</span>),a&lt;<span class="number">0</span>&amp;&amp;(a=<span class="number">0</span>),t.<span class="property">style</span>.<span class="property">right</span>=i+<span class="string">&quot;px&quot;</span>,t.<span class="property">style</span>.<span class="property">bottom</span>=a+<span class="string">&quot;px&quot;</span>,e.<span class="property">switchPos</span>.<span class="property">endX</span>=i,e.<span class="property">switchPos</span>.<span class="property">endY</span>=a,o.<span class="title function_">preventDefault</span>()&#125;&#125;),i.<span class="property">default</span>.<span class="title function_">bind</span>(i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-switch&quot;</span>,e.<span class="property">$dom</span>),<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;e.<span class="title function_">show</span>()&#125;),i.<span class="property">default</span>.<span class="title function_">bind</span>(i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-hide&quot;</span>,e.<span class="property">$dom</span>),<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;e.<span class="title function_">hide</span>()&#125;),i.<span class="property">default</span>.<span class="title function_">bind</span>(i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-mask&quot;</span>,e.<span class="property">$dom</span>),<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">if</span>(t.<span class="property">target</span>!=i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-mask&quot;</span>))<span class="keyword">return</span>!<span class="number">1</span>;e.<span class="title function_">hide</span>()&#125;),i.<span class="property">default</span>.<span class="title function_">delegate</span>(i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-tabbar&quot;</span>,e.<span class="property">$dom</span>),<span class="string">&quot;click&quot;</span>,<span class="string">&quot;.vc-tab&quot;</span>,<span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">var</span> o=<span class="variable language_">this</span>.<span class="property">dataset</span>.<span class="property">tab</span>;o!=e.<span class="property">activedTab</span>&amp;&amp;e.<span class="title function_">showTab</span>(o)&#125;),i.<span class="property">default</span>.<span class="title function_">bind</span>(i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-panel&quot;</span>,e.<span class="property">$dom</span>),<span class="string">&quot;transitionend webkitTransitionEnd oTransitionEnd otransitionend&quot;</span>,<span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">if</span>(t.<span class="property">target</span>!=i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-panel&quot;</span>))<span class="keyword">return</span>!<span class="number">1</span>;i.<span class="property">default</span>.<span class="title function_">hasClass</span>(e.<span class="property">$dom</span>,<span class="string">&quot;vc-toggle&quot;</span>)||(t.<span class="property">target</span>.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span>)&#125;);<span class="keyword">var</span> o=i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-content&quot;</span>,e.<span class="property">$dom</span>),n=!<span class="number">1</span>;i.<span class="property">default</span>.<span class="title function_">bind</span>(o,<span class="string">&quot;touchstart&quot;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=o.<span class="property">scrollTop</span>,r=o.<span class="property">scrollHeight</span>,a=t+o.<span class="property">offsetHeight</span>;<span class="number">0</span>===t?(o.<span class="property">scrollTop</span>=<span class="number">1</span>,<span class="number">0</span>===o.<span class="property">scrollTop</span>&amp;&amp;(i.<span class="property">default</span>.<span class="title function_">hasClass</span>(e.<span class="property">target</span>,<span class="string">&quot;vc-cmd-input&quot;</span>)||(n=!<span class="number">0</span>))):a===r&amp;&amp;(o.<span class="property">scrollTop</span>=t-<span class="number">1</span>,o.<span class="property">scrollTop</span>===t&amp;&amp;(i.<span class="property">default</span>.<span class="title function_">hasClass</span>(e.<span class="property">target</span>,<span class="string">&quot;vc-cmd-input&quot;</span>)||(n=!<span class="number">0</span>)))&#125;),i.<span class="property">default</span>.<span class="title function_">bind</span>(o,<span class="string">&quot;touchmove&quot;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;n&amp;&amp;e.<span class="title function_">preventDefault</span>()&#125;),i.<span class="property">default</span>.<span class="title function_">bind</span>(o,<span class="string">&quot;touchend&quot;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;n=!<span class="number">1</span>&#125;)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;_autoRun&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e <span class="keyword">in</span> <span class="variable language_">this</span>.<span class="property">isInited</span>=!<span class="number">0</span>,<span class="variable language_">this</span>.<span class="property">pluginList</span>)<span class="variable language_">this</span>.<span class="title function_">_initPlugin</span>(<span class="variable language_">this</span>.<span class="property">pluginList</span>[e]);<span class="variable language_">this</span>.<span class="property">tabList</span>.<span class="property">length</span>&gt;<span class="number">0</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">showTab</span>(<span class="variable language_">this</span>.<span class="property">tabList</span>[<span class="number">0</span>]),<span class="variable language_">this</span>.<span class="title function_">triggerEvent</span>(<span class="string">&quot;ready&quot;</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;triggerEvent&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e=<span class="string">&quot;on&quot;</span>+e.<span class="title function_">charAt</span>(<span class="number">0</span>).<span class="title function_">toUpperCase</span>()+e.<span class="title function_">slice</span>(<span class="number">1</span>),r.<span class="title function_">isFunction</span>(<span class="variable language_">this</span>.<span class="property">option</span>[e])&amp;&amp;<span class="variable language_">this</span>.<span class="property">option</span>[e].<span class="title function_">apply</span>(<span class="variable language_">this</span>,t)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;_initPlugin&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=<span class="variable language_">this</span>;e.<span class="property">vConsole</span>=<span class="variable language_">this</span>,e.<span class="title function_">trigger</span>(<span class="string">&quot;init&quot;</span>),e.<span class="title function_">trigger</span>(<span class="string">&quot;renderTab&quot;</span>,<span class="keyword">function</span>(<span class="params">o</span>)&#123;t.<span class="property">tabList</span>.<span class="title function_">push</span>(e.<span class="property">id</span>);<span class="keyword">var</span> n=i.<span class="property">default</span>.<span class="title function_">render</span>(c.<span class="property">default</span>,&#123;<span class="attr">id</span>:e.<span class="property">id</span>,<span class="attr">name</span>:e.<span class="property">name</span>&#125;);i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-tabbar&quot;</span>,t.<span class="property">$dom</span>).<span class="title function_">insertAdjacentElement</span>(<span class="string">&quot;beforeend&quot;</span>,n);<span class="keyword">var</span> a=i.<span class="property">default</span>.<span class="title function_">render</span>(s.<span class="property">default</span>,&#123;<span class="attr">id</span>:e.<span class="property">id</span>&#125;);o&amp;&amp;(r.<span class="title function_">isString</span>(o)?a.<span class="property">innerHTML</span>+=<span class="attr">o</span>:r.<span class="title function_">isFunction</span>(o.<span class="property">appendTo</span>)?o.<span class="title function_">appendTo</span>(a):r.<span class="title function_">isElement</span>(o)&amp;&amp;a.<span class="title function_">insertAdjacentElement</span>(<span class="string">&quot;beforeend&quot;</span>,o)),i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-content&quot;</span>,t.<span class="property">$dom</span>).<span class="title function_">insertAdjacentElement</span>(<span class="string">&quot;beforeend&quot;</span>,a)&#125;),e.<span class="title function_">trigger</span>(<span class="string">&quot;addTopBar&quot;</span>,<span class="keyword">function</span>(<span class="params">o</span>)&#123;<span class="keyword">if</span>(o)<span class="keyword">for</span>(<span class="keyword">var</span> n=i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-topbar&quot;</span>,t.<span class="property">$dom</span>),a=<span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">var</span> a=o[t],l=i.<span class="property">default</span>.<span class="title function_">render</span>(d.<span class="property">default</span>,&#123;<span class="attr">name</span>:a.<span class="property">name</span>||<span class="string">&quot;Undefined&quot;</span>,<span class="attr">className</span>:a.<span class="property">className</span>||<span class="string">&quot;&quot;</span>,<span class="attr">pluginID</span>:e.<span class="property">id</span>&#125;);<span class="keyword">if</span>(a.<span class="property">data</span>)<span class="keyword">for</span>(<span class="keyword">var</span> c <span class="keyword">in</span> a.<span class="property">data</span>)l.<span class="property">dataset</span>[c]=a.<span class="property">data</span>[c];r.<span class="title function_">isFunction</span>(a.<span class="property">onClick</span>)&amp;&amp;i.<span class="property">default</span>.<span class="title function_">bind</span>(l,<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params">t</span>)&#123;!<span class="number">1</span>===a.<span class="property">onClick</span>.<span class="title function_">call</span>(l)||(i.<span class="property">default</span>.<span class="title function_">removeClass</span>(i.<span class="property">default</span>.<span class="title function_">all</span>(<span class="string">&quot;.vc-topbar-&quot;</span>+e.<span class="property">id</span>),<span class="string">&quot;vc-actived&quot;</span>),i.<span class="property">default</span>.<span class="title function_">addClass</span>(l,<span class="string">&quot;vc-actived&quot;</span>))&#125;),n.<span class="title function_">insertAdjacentElement</span>(<span class="string">&quot;beforeend&quot;</span>,l)&#125;,l=<span class="number">0</span>;l&lt;o.<span class="property">length</span>;l++)<span class="title function_">a</span>(l)&#125;),e.<span class="title function_">trigger</span>(<span class="string">&quot;addTool&quot;</span>,<span class="keyword">function</span>(<span class="params">o</span>)&#123;<span class="keyword">if</span>(o)<span class="keyword">for</span>(<span class="keyword">var</span> n=i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-tool-last&quot;</span>,t.<span class="property">$dom</span>),a=<span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">var</span> a=o[t],l=i.<span class="property">default</span>.<span class="title function_">render</span>(u.<span class="property">default</span>,&#123;<span class="attr">name</span>:a.<span class="property">name</span>||<span class="string">&quot;Undefined&quot;</span>,<span class="attr">pluginID</span>:e.<span class="property">id</span>&#125;);<span class="number">1</span>==a.<span class="property">global</span>&amp;&amp;i.<span class="property">default</span>.<span class="title function_">addClass</span>(l,<span class="string">&quot;vc-global-tool&quot;</span>),r.<span class="title function_">isFunction</span>(a.<span class="property">onClick</span>)&amp;&amp;i.<span class="property">default</span>.<span class="title function_">bind</span>(l,<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;a.<span class="property">onClick</span>.<span class="title function_">call</span>(l)&#125;),n.<span class="property">parentNode</span>.<span class="title function_">insertBefore</span>(l,n)&#125;,l=<span class="number">0</span>;l&lt;o.<span class="property">length</span>;l++)<span class="title function_">a</span>(l)&#125;),e.<span class="property">isReady</span>=!<span class="number">0</span>,e.<span class="title function_">trigger</span>(<span class="string">&quot;ready&quot;</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;_triggerPluginsEvent&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t <span class="keyword">in</span> <span class="variable language_">this</span>.<span class="property">pluginList</span>)<span class="variable language_">this</span>.<span class="property">pluginList</span>[t].<span class="property">isReady</span>&amp;&amp;<span class="variable language_">this</span>.<span class="property">pluginList</span>[t].<span class="title function_">trigger</span>(e)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;_triggerPluginEvent&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> o=<span class="variable language_">this</span>.<span class="property">pluginList</span>[e];o&amp;&amp;o.<span class="property">isReady</span>&amp;&amp;o.<span class="title function_">trigger</span>(t)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;addPlugin&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span>!==<span class="variable language_">this</span>.<span class="property">pluginList</span>[e.<span class="property">id</span>]?(<span class="variable language_">console</span>.<span class="title function_">debug</span>(<span class="string">&quot;Plugin &quot;</span>+e.<span class="property">id</span>+<span class="string">&quot; has already been added.&quot;</span>),!<span class="number">1</span>):(<span class="variable language_">this</span>.<span class="property">pluginList</span>[e.<span class="property">id</span>]=e,<span class="variable language_">this</span>.<span class="property">isInited</span>&amp;&amp;(<span class="variable language_">this</span>.<span class="title function_">_initPlugin</span>(e),<span class="number">1</span>==<span class="variable language_">this</span>.<span class="property">tabList</span>.<span class="property">length</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">showTab</span>(<span class="variable language_">this</span>.<span class="property">tabList</span>[<span class="number">0</span>])),!<span class="number">0</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;removePlugin&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;e=(e+<span class="string">&quot;&quot;</span>).<span class="title function_">toLowerCase</span>();<span class="keyword">var</span> t=<span class="variable language_">this</span>.<span class="property">pluginList</span>[e];<span class="keyword">if</span>(<span class="keyword">void</span> <span class="number">0</span>===t)<span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">debug</span>(<span class="string">&quot;Plugin &quot;</span>+e+<span class="string">&quot; does not exist.&quot;</span>),!<span class="number">1</span>;<span class="keyword">if</span>(t.<span class="title function_">trigger</span>(<span class="string">&quot;remove&quot;</span>),<span class="variable language_">this</span>.<span class="property">isInited</span>)&#123;<span class="keyword">var</span> o=i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;#__vc_tab_&quot;</span>+e);o&amp;&amp;o.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(o);<span class="keyword">for</span>(<span class="keyword">var</span> n=i.<span class="property">default</span>.<span class="title function_">all</span>(<span class="string">&quot;.vc-topbar-&quot;</span>+e,<span class="variable language_">this</span>.<span class="property">$dom</span>),r=<span class="number">0</span>;r&lt;n.<span class="property">length</span>;r++)n[r].<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(n[r]);<span class="keyword">var</span> a=i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;#__vc_log_&quot;</span>+e);a&amp;&amp;a.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(a);<span class="keyword">for</span>(<span class="keyword">var</span> l=i.<span class="property">default</span>.<span class="title function_">all</span>(<span class="string">&quot;.vc-tool-&quot;</span>+e,<span class="variable language_">this</span>.<span class="property">$dom</span>),c=<span class="number">0</span>;c&lt;l.<span class="property">length</span>;c++)l[c].<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(l[c])&#125;<span class="keyword">var</span> s=<span class="variable language_">this</span>.<span class="property">tabList</span>.<span class="title function_">indexOf</span>(e);s&gt;-<span class="number">1</span>&amp;&amp;<span class="variable language_">this</span>.<span class="property">tabList</span>.<span class="title function_">splice</span>(s,<span class="number">1</span>);<span class="keyword">try</span>&#123;<span class="keyword">delete</span> <span class="variable language_">this</span>.<span class="property">pluginList</span>[e]&#125;<span class="keyword">catch</span>(t)&#123;<span class="variable language_">this</span>.<span class="property">pluginList</span>[e]=<span class="keyword">void</span> <span class="number">0</span>&#125;<span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">activedTab</span>==e&amp;&amp;<span class="variable language_">this</span>.<span class="property">tabList</span>.<span class="property">length</span>&gt;<span class="number">0</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">showTab</span>(<span class="variable language_">this</span>.<span class="property">tabList</span>[<span class="number">0</span>]),!<span class="number">0</span>&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;show&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">isInited</span>)&#123;<span class="keyword">var</span> e=<span class="variable language_">this</span>;i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-panel&quot;</span>,<span class="variable language_">this</span>.<span class="property">$dom</span>).<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;block&quot;</span>,<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;i.<span class="property">default</span>.<span class="title function_">addClass</span>(e.<span class="property">$dom</span>,<span class="string">&quot;vc-toggle&quot;</span>),e.<span class="title function_">_triggerPluginsEvent</span>(<span class="string">&quot;showConsole&quot;</span>),i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-mask&quot;</span>,e.<span class="property">$dom</span>).<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;block&quot;</span>&#125;,<span class="number">10</span>)&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;hide&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">isInited</span>)&#123;i.<span class="property">default</span>.<span class="title function_">removeClass</span>(<span class="variable language_">this</span>.<span class="property">$dom</span>,<span class="string">&quot;vc-toggle&quot;</span>),<span class="variable language_">this</span>.<span class="title function_">_triggerPluginsEvent</span>(<span class="string">&quot;hideConsole&quot;</span>);<span class="keyword">var</span> e=i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-mask&quot;</span>,<span class="variable language_">this</span>.<span class="property">$dom</span>),t=i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-panel&quot;</span>,<span class="variable language_">this</span>.<span class="property">$dom</span>);i.<span class="property">default</span>.<span class="title function_">bind</span>(e,<span class="string">&quot;transitionend&quot;</span>,<span class="keyword">function</span>(<span class="params">o</span>)&#123;e.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span>,t.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span>&#125;)&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;showSwitch&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">isInited</span>&amp;&amp;(i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-switch&quot;</span>,<span class="variable language_">this</span>.<span class="property">$dom</span>).<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;block&quot;</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;hideSwitch&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">isInited</span>&amp;&amp;(i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-switch&quot;</span>,<span class="variable language_">this</span>.<span class="property">$dom</span>).<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;showTab&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">isInited</span>)&#123;<span class="keyword">var</span> t=i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;#__vc_log_&quot;</span>+e);i.<span class="property">default</span>.<span class="title function_">removeClass</span>(i.<span class="property">default</span>.<span class="title function_">all</span>(<span class="string">&quot;.vc-tab&quot;</span>,<span class="variable language_">this</span>.<span class="property">$dom</span>),<span class="string">&quot;vc-actived&quot;</span>),i.<span class="property">default</span>.<span class="title function_">addClass</span>(i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;#__vc_tab_&quot;</span>+e),<span class="string">&quot;vc-actived&quot;</span>),i.<span class="property">default</span>.<span class="title function_">removeClass</span>(i.<span class="property">default</span>.<span class="title function_">all</span>(<span class="string">&quot;.vc-logbox&quot;</span>,<span class="variable language_">this</span>.<span class="property">$dom</span>),<span class="string">&quot;vc-actived&quot;</span>),i.<span class="property">default</span>.<span class="title function_">addClass</span>(t,<span class="string">&quot;vc-actived&quot;</span>);<span class="keyword">var</span> o=i.<span class="property">default</span>.<span class="title function_">all</span>(<span class="string">&quot;.vc-topbar-&quot;</span>+e,<span class="variable language_">this</span>.<span class="property">$dom</span>);i.<span class="property">default</span>.<span class="title function_">removeClass</span>(i.<span class="property">default</span>.<span class="title function_">all</span>(<span class="string">&quot;.vc-toptab&quot;</span>,<span class="variable language_">this</span>.<span class="property">$dom</span>),<span class="string">&quot;vc-toggle&quot;</span>),i.<span class="property">default</span>.<span class="title function_">addClass</span>(o,<span class="string">&quot;vc-toggle&quot;</span>),o.<span class="property">length</span>&gt;<span class="number">0</span>?i.<span class="property">default</span>.<span class="title function_">addClass</span>(i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-content&quot;</span>,<span class="variable language_">this</span>.<span class="property">$dom</span>),<span class="string">&quot;vc-has-topbar&quot;</span>):i.<span class="property">default</span>.<span class="title function_">removeClass</span>(i.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-content&quot;</span>,<span class="variable language_">this</span>.<span class="property">$dom</span>),<span class="string">&quot;vc-has-topbar&quot;</span>),i.<span class="property">default</span>.<span class="title function_">removeClass</span>(i.<span class="property">default</span>.<span class="title function_">all</span>(<span class="string">&quot;.vc-tool&quot;</span>,<span class="variable language_">this</span>.<span class="property">$dom</span>),<span class="string">&quot;vc-toggle&quot;</span>),i.<span class="property">default</span>.<span class="title function_">addClass</span>(i.<span class="property">default</span>.<span class="title function_">all</span>(<span class="string">&quot;.vc-tool-&quot;</span>+e,<span class="variable language_">this</span>.<span class="property">$dom</span>),<span class="string">&quot;vc-toggle&quot;</span>),<span class="variable language_">this</span>.<span class="property">activedTab</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">_triggerPluginEvent</span>(<span class="variable language_">this</span>.<span class="property">activedTab</span>,<span class="string">&quot;hide&quot;</span>),<span class="variable language_">this</span>.<span class="property">activedTab</span>=e,<span class="variable language_">this</span>.<span class="title function_">_triggerPluginEvent</span>(<span class="variable language_">this</span>.<span class="property">activedTab</span>,<span class="string">&quot;show&quot;</span>)&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;setOption&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(r.<span class="title function_">isString</span>(e))<span class="variable language_">this</span>.<span class="property">option</span>[e]=t,<span class="variable language_">this</span>.<span class="title function_">_triggerPluginsEvent</span>(<span class="string">&quot;updateOption&quot;</span>);<span class="keyword">else</span> <span class="keyword">if</span>(r.<span class="title function_">isObject</span>(e))&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o <span class="keyword">in</span> e)<span class="variable language_">this</span>.<span class="property">option</span>[o]=e[o];<span class="variable language_">this</span>.<span class="title function_">_triggerPluginsEvent</span>(<span class="string">&quot;updateOption&quot;</span>)&#125;<span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">debug</span>(<span class="string">&quot;The first parameter of vConsole.setOption() must be a string or an object.&quot;</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;destroy&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">isInited</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>.<span class="property">pluginList</span>),t=e.<span class="property">length</span>-<span class="number">1</span>;t&gt;=<span class="number">0</span>;t--)<span class="variable language_">this</span>.<span class="title function_">removePlugin</span>(e[t]);<span class="variable language_">this</span>.<span class="property">$dom</span>.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(<span class="variable language_">this</span>.<span class="property">$dom</span>),<span class="variable language_">this</span>.<span class="property">isInited</span>=!<span class="number">1</span>&#125;&#125;&#125;])&amp;&amp;<span class="title function_">_</span>(t.<span class="property"><span class="keyword">prototype</span></span>,o),a&amp;&amp;<span class="title function_">_</span>(t,a),e&#125;();x.<span class="property">VConsolePlugin</span>=v.<span class="property">default</span>,x.<span class="property">VConsoleLogPlugin</span>=f.<span class="property">default</span>,x.<span class="property">VConsoleDefaultPlugin</span>=p.<span class="property">default</span>,x.<span class="property">VConsoleSystemPlugin</span>=b.<span class="property">default</span>,x.<span class="property">VConsoleNetworkPlugin</span>=g.<span class="property">default</span>,x.<span class="property">VConsoleElementPlugin</span>=h.<span class="property">default</span>,x.<span class="property">VConsoleStoragePlugin</span>=m.<span class="property">default</span>;<span class="keyword">var</span> k=x;o.<span class="property">default</span>=k,e.<span class="property">exports</span>=t.<span class="property">default</span>&#125;)?n.<span class="title function_">apply</span>(t,r):n)||(e.<span class="property">exports</span>=i)&#125;,<span class="keyword">function</span>(<span class="params">e</span>)&#123;e.<span class="property">exports</span>=<span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;&#123;&quot;name&quot;:&quot;vconsole&quot;,&quot;version&quot;:&quot;3.3.4&quot;,&quot;description&quot;:&quot;A lightweight, extendable front-end developer tool for mobile web page.&quot;,&quot;homepage&quot;:&quot;https://github.com/Tencent/vConsole&quot;,&quot;main&quot;:&quot;dist/vconsole.min.js&quot;,&quot;typings&quot;:&quot;dist/vconsole.min.d.ts&quot;,&quot;scripts&quot;:&#123;&quot;test&quot;:&quot;mocha&quot;,&quot;build&quot;:&quot;webpack&quot;&#125;,&quot;keywords&quot;:[&quot;console&quot;,&quot;debug&quot;,&quot;mobile&quot;],&quot;repository&quot;:&#123;&quot;type&quot;:&quot;git&quot;,&quot;url&quot;:&quot;git+https://github.com/Tencent/vConsole.git&quot;&#125;,&quot;dependencies&quot;:&#123;&#125;,&quot;devDependencies&quot;:&#123;&quot;@babel/core&quot;:&quot;^7.5.5&quot;,&quot;@babel/plugin-proposal-class-properties&quot;:&quot;^7.5.5&quot;,&quot;@babel/plugin-proposal-export-namespace-from&quot;:&quot;^7.5.2&quot;,&quot;@babel/plugin-proposal-object-rest-spread&quot;:&quot;^7.5.5&quot;,&quot;@babel/preset-env&quot;:&quot;^7.5.5&quot;,&quot;babel-loader&quot;:&quot;^8.0.6&quot;,&quot;babel-plugin-add-module-exports&quot;:&quot;^1.0.2&quot;,&quot;chai&quot;:&quot;^4.2.0&quot;,&quot;copy-webpack-plugin&quot;:&quot;^5.0.4&quot;,&quot;css-loader&quot;:&quot;^3.2.0&quot;,&quot;html-loader&quot;:&quot;^0.5.5&quot;,&quot;jsdom&quot;:&quot;^15.1.1&quot;,&quot;json-loader&quot;:&quot;^0.5.7&quot;,&quot;less&quot;:&quot;^3.10.0&quot;,&quot;less-loader&quot;:&quot;^5.0.0&quot;,&quot;mocha&quot;:&quot;^5.2.0&quot;,&quot;style-loader&quot;:&quot;^1.0.0&quot;,&quot;webpack&quot;:&quot;^4.39.2&quot;,&quot;webpack-cli&quot;:&quot;^3.3.6&quot;&#125;,&quot;author&quot;:&quot;Tencent&quot;,&quot;license&quot;:&quot;MIT&quot;&#125;&#x27;</span>)&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n,r,i;r=[t],<span class="keyword">void</span> <span class="number">0</span>===(i=<span class="string">&quot;function&quot;</span>==<span class="title function_">typeof</span>(n=<span class="keyword">function</span>(<span class="params">o</span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(o,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),o.<span class="property">default</span>=<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n=<span class="regexp">/\&#123;\&#123;([^\&#125;]+)\&#125;\&#125;/g</span>,r=<span class="string">&quot;&quot;</span>,i=<span class="string">&quot;&quot;</span>,a=<span class="number">0</span>,l=[],c=<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="string">&quot;&quot;</span>!==e&amp;&amp;(t?e.<span class="title function_">match</span>(<span class="regexp">/^ ?else/g</span>)?r+=<span class="string">&quot;&#125; &quot;</span>+e+<span class="string">&quot; &#123;\n&quot;</span>:e.<span class="title function_">match</span>(<span class="regexp">/\/(if|for|switch)/g</span>)?r+=<span class="string">&quot;&#125;\n&quot;</span>:e.<span class="title function_">match</span>(<span class="regexp">/^ ?if|for|switch/g</span>)?r+=e+<span class="string">&quot; &#123;\n&quot;</span>:e.<span class="title function_">match</span>(<span class="regexp">/^ ?(break|continue) ?$/g</span>)?r+=e+<span class="string">&quot;;\n&quot;</span>:e.<span class="title function_">match</span>(<span class="regexp">/^ ?(case|default)/g</span>)?r+=e+<span class="string">&quot;:\n&quot;</span>:r+=<span class="string">&quot;arr.push(&quot;</span>+e+<span class="string">&quot;);\n&quot;</span>:r+=<span class="string">&#x27;arr.push(&quot;&#x27;</span>+e.<span class="title function_">replace</span>(<span class="regexp">/&quot;/g</span>,<span class="string">&#x27;\\&quot;&#x27;</span>)+<span class="string">&#x27;&quot;);\n&#x27;</span>)&#125;;<span class="keyword">for</span>(<span class="variable language_">window</span>.<span class="property">__mito_data</span>=t,<span class="variable language_">window</span>.<span class="property">__mito_code</span>=<span class="string">&quot;&quot;</span>,<span class="variable language_">window</span>.<span class="property">__mito_result</span>=<span class="string">&quot;&quot;</span>,e=(e=e.<span class="title function_">replace</span>(<span class="regexp">/(\&#123;\&#123; ?switch(.+?)\&#125;\&#125;)[\r\n\t ]+\&#123;\&#123;/g</span>,<span class="string">&quot;$1&#123;&#123;&quot;</span>)).<span class="title function_">replace</span>(<span class="regexp">/^[\r\n]/</span>,<span class="string">&quot;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/\n/g</span>,<span class="string">&quot;\\\n&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/\r/g</span>,<span class="string">&quot;\\\r&quot;</span>),i=<span class="string">&quot;(function()&#123;\n&quot;</span>,r=<span class="string">&quot;var arr = [];\n&quot;</span>;l=n.<span class="title function_">exec</span>(e);)<span class="title function_">c</span>(e.<span class="title function_">slice</span>(a,l.<span class="property">index</span>),!<span class="number">1</span>),<span class="title function_">c</span>(l[<span class="number">1</span>],!<span class="number">0</span>),a=l.<span class="property">index</span>+l[<span class="number">0</span>].<span class="property">length</span>;<span class="title function_">c</span>(e.<span class="title function_">substr</span>(a,e.<span class="property">length</span>-a),!<span class="number">1</span>),i+=r=<span class="string">&quot;with (__mito_data) &#123;\n&quot;</span>+(r+=<span class="string">&#x27;__mito_result = arr.join(&quot;&quot;);&#x27;</span>)+<span class="string">&quot;\n&#125;&quot;</span>,i+=<span class="string">&quot;&#125;)();&quot;</span>;<span class="keyword">var</span> s=<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;script&quot;</span>),d=<span class="string">&quot;&quot;</span>;s.<span class="property">length</span>&gt;<span class="number">0</span>&amp;&amp;(d=s[<span class="number">0</span>].<span class="property">nonce</span>||<span class="string">&quot;&quot;</span>);<span class="keyword">var</span> u=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;SCRIPT&quot;</span>);u.<span class="property">innerHTML</span>=i,u.<span class="title function_">setAttribute</span>(<span class="string">&quot;nonce&quot;</span>,d),<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="title function_">appendChild</span>(u);<span class="keyword">var</span> v=__mito_result;<span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="title function_">removeChild</span>(u),!o)&#123;<span class="keyword">var</span> f=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;DIV&quot;</span>);f.<span class="property">innerHTML</span>=v,v=f.<span class="property">children</span>[<span class="number">0</span>]&#125;<span class="keyword">return</span> v&#125;,e.<span class="property">exports</span>=t.<span class="property">default</span>&#125;)?n.<span class="title function_">apply</span>(t,r):n)||(e.<span class="property">exports</span>=i)&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n=<span class="title function_">o</span>(<span class="number">12</span>);<span class="string">&quot;string&quot;</span>==<span class="keyword">typeof</span> n&amp;&amp;(n=[[e.<span class="property">i</span>,n,<span class="string">&quot;&quot;</span>]]);<span class="keyword">var</span> r=&#123;<span class="attr">insert</span>:<span class="string">&quot;head&quot;</span>,<span class="attr">singleton</span>:!<span class="number">1</span>&#125;;<span class="title function_">o</span>(<span class="number">5</span>)(n,r);n.<span class="property">locals</span>&amp;&amp;(e.<span class="property">exports</span>=n.<span class="property">locals</span>)&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;(e.<span class="property">exports</span>=<span class="title function_">o</span>(<span class="number">4</span>)(!<span class="number">1</span>)).<span class="title function_">push</span>([e.<span class="property">i</span>,<span class="string">&#x27;#__vconsole &#123;\n  color: #000;\n  font-size: 13px;\n  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n  /* global */\n  /* compoment */\n&#125;\n#__vconsole .vc-max-height &#123;\n  max-height: 19.23076923em;\n&#125;\n#__vconsole .vc-max-height-line &#123;\n  max-height: 3.38461538em;\n&#125;\n#__vconsole .vc-min-height &#123;\n  min-height: 3.07692308em;\n&#125;\n#__vconsole dd,\n#__vconsole dl,\n#__vconsole pre &#123;\n  margin: 0;\n&#125;\n#__vconsole .vc-switch &#123;\n  display: block;\n  position: fixed;\n  right: 0.76923077em;\n  bottom: 0.76923077em;\n  color: #FFF;\n  background-color: #04BE02;\n  line-height: 1;\n  font-size: 1.07692308em;\n  padding: 0.61538462em 1.23076923em;\n  z-index: 10000;\n  border-radius: 0.30769231em;\n  box-shadow: 0 0 0.61538462em rgba(0, 0, 0, 0.4);\n&#125;\n#__vconsole .vc-mask &#123;\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0);\n  z-index: 10001;\n  transition: background 0.3s;\n  -webkit-tap-highlight-color: transparent;\n  overflow-y: scroll;\n&#125;\n#__vconsole .vc-panel &#123;\n  display: none;\n  position: fixed;\n  min-height: 85%;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 10002;\n  background-color: #EFEFF4;\n  -webkit-transition: -webkit-transform 0.3s;\n  transition: -webkit-transform 0.3s;\n  transition: transform 0.3s;\n  transition: transform 0.3s, -webkit-transform 0.3s;\n  -webkit-transform: translate(0, 100%);\n  transform: translate(0, 100%);\n&#125;\n#__vconsole .vc-tabbar &#123;\n  border-bottom: 1px solid #D9D9D9;\n  overflow-x: auto;\n  height: 3em;\n  width: auto;\n  white-space: nowrap;\n&#125;\n#__vconsole .vc-tabbar .vc-tab &#123;\n  display: inline-block;\n  line-height: 3em;\n  padding: 0 1.15384615em;\n  border-right: 1px solid #D9D9D9;\n  text-decoration: none;\n  color: #000;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n&#125;\n#__vconsole .vc-tabbar .vc-tab:active &#123;\n  background-color: rgba(0, 0, 0, 0.15);\n&#125;\n#__vconsole .vc-tabbar .vc-tab.vc-actived &#123;\n  background-color: #FFF;\n&#125;\n#__vconsole .vc-content &#123;\n  background-color: #FFF;\n  overflow-x: hidden;\n  overflow-y: auto;\n  position: absolute;\n  top: 3.07692308em;\n  left: 0;\n  right: 0;\n  bottom: 3.07692308em;\n  -webkit-overflow-scrolling: touch;\n  margin-bottom: constant(safe-area-inset-bottom);\n  margin-bottom: env(safe-area-inset-bottom);\n&#125;\n#__vconsole .vc-content.vc-has-topbar &#123;\n  top: 5.46153846em;\n&#125;\n#__vconsole .vc-topbar &#123;\n  background-color: #FBF9FE;\n  display: flex;\n  display: -webkit-box;\n  flex-direction: row;\n  flex-wrap: wrap;\n  -webkit-box-direction: row;\n  -webkit-flex-wrap: wrap;\n  width: 100%;\n&#125;\n#__vconsole .vc-topbar .vc-toptab &#123;\n  display: none;\n  flex: 1;\n  -webkit-box-flex: 1;\n  line-height: 2.30769231em;\n  padding: 0 1.15384615em;\n  border-bottom: 1px solid #D9D9D9;\n  text-decoration: none;\n  text-align: center;\n  color: #000;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n&#125;\n#__vconsole .vc-topbar .vc-toptab.vc-toggle &#123;\n  display: block;\n&#125;\n#__vconsole .vc-topbar .vc-toptab:active &#123;\n  background-color: rgba(0, 0, 0, 0.15);\n&#125;\n#__vconsole .vc-topbar .vc-toptab.vc-actived &#123;\n  border-bottom: 1px solid #3e82f7;\n&#125;\n#__vconsole .vc-logbox &#123;\n  display: none;\n  position: relative;\n  min-height: 100%;\n&#125;\n#__vconsole .vc-logbox i &#123;\n  font-style: normal;\n&#125;\n#__vconsole .vc-logbox .vc-log &#123;\n  padding-bottom: 3em;\n  -webkit-tap-highlight-color: transparent;\n&#125;\n#__vconsole .vc-logbox .vc-log:empty:before &#123;\n  content: &quot;Empty&quot;;\n  color: #999;\n  position: absolute;\n  top: 45%;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  font-size: 1.15384615em;\n  text-align: center;\n&#125;\n#__vconsole .vc-logbox .vc-item &#123;\n  margin: 0;\n  padding: 0.46153846em 0.61538462em;\n  overflow: hidden;\n  line-height: 1.3;\n  border-bottom: 1px solid #EEE;\n  word-break: break-word;\n&#125;\n#__vconsole .vc-logbox .vc-item-info &#123;\n  color: #6A5ACD;\n&#125;\n#__vconsole .vc-logbox .vc-item-debug &#123;\n  color: #DAA520;\n&#125;\n#__vconsole .vc-logbox .vc-item-warn &#123;\n  color: #FFA500;\n  border-color: #FFB930;\n  background-color: #FFFACD;\n&#125;\n#__vconsole .vc-logbox .vc-item-error &#123;\n  color: #DC143C;\n  border-color: #F4A0AB;\n  background-color: #FFE4E1;\n&#125;\n#__vconsole .vc-logbox .vc-log.vc-log-partly .vc-item &#123;\n  display: none;\n&#125;\n#__vconsole .vc-logbox .vc-log.vc-log-partly-log .vc-item-log,\n#__vconsole .vc-logbox .vc-log.vc-log-partly-info .vc-item-info,\n#__vconsole .vc-logbox .vc-log.vc-log-partly-warn .vc-item-warn,\n#__vconsole .vc-logbox .vc-log.vc-log-partly-error .vc-item-error &#123;\n  display: block;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-item-content &#123;\n  margin-right: 4.61538462em;\n  display: inline-block;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-item-repeat &#123;\n  display: inline-block;\n  margin-right: 0.30769231em;\n  padding: 0 6.5px;\n  color: #D7E0EF;\n  background-color: #42597F;\n  border-radius: 8.66666667px;\n&#125;\n#__vconsole .vc-logbox .vc-item.vc-item-error .vc-item-repeat &#123;\n  color: #901818;\n  background-color: #DC2727;\n&#125;\n#__vconsole .vc-logbox .vc-item.vc-item-warn .vc-item-repeat &#123;\n  color: #987D20;\n  background-color: #F4BD02;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-item-code &#123;\n  display: block;\n  white-space: pre-wrap;\n  overflow: auto;\n  position: relative;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-item-code.vc-item-code-input,\n#__vconsole .vc-logbox .vc-item .vc-item-code.vc-item-code-output &#123;\n  padding-left: 0.92307692em;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-item-code.vc-item-code-input:before,\n#__vconsole .vc-logbox .vc-item .vc-item-code.vc-item-code-output:before &#123;\n  content: &quot;›&quot;;\n  position: absolute;\n  top: -0.23076923em;\n  left: 0;\n  font-size: 1.23076923em;\n  color: #6A5ACD;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-item-code.vc-item-code-output:before &#123;\n  content: &quot;‹&quot;;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-fold &#123;\n  display: block;\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-outer &#123;\n  display: block;\n  font-style: italic;\n  padding-left: 0.76923077em;\n  position: relative;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-outer:active &#123;\n  background-color: #E6E6E6;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-outer:before &#123;\n  content: &quot;&quot;;\n  position: absolute;\n  top: 0.30769231em;\n  left: 0.15384615em;\n  width: 0;\n  height: 0;\n  border: transparent solid 0.30769231em;\n  border-left-color: #000;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-outer.vc-toggle:before &#123;\n  top: 0.46153846em;\n  left: 0;\n  border-top-color: #000;\n  border-left-color: transparent;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-inner &#123;\n  display: none;\n  margin-left: 0.76923077em;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-inner.vc-toggle &#123;\n  display: block;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-inner .vc-code-key &#123;\n  margin-left: 0.76923077em;\n&#125;\n#__vconsole .vc-logbox .vc-item .vc-fold .vc-fold-outer .vc-code-key &#123;\n  margin-left: 0;\n&#125;\n#__vconsole .vc-logbox .vc-code-key &#123;\n  color: #905;\n&#125;\n#__vconsole .vc-logbox .vc-code-private-key &#123;\n  color: #D391B5;\n&#125;\n#__vconsole .vc-logbox .vc-code-function &#123;\n  color: #905;\n  font-style: italic;\n&#125;\n#__vconsole .vc-logbox .vc-code-number,\n#__vconsole .vc-logbox .vc-code-boolean &#123;\n  color: #0086B3;\n&#125;\n#__vconsole .vc-logbox .vc-code-string &#123;\n  color: #183691;\n&#125;\n#__vconsole .vc-logbox .vc-code-null,\n#__vconsole .vc-logbox .vc-code-undefined &#123;\n  color: #666;\n&#125;\n#__vconsole .vc-logbox .vc-cmd &#123;\n  position: absolute;\n  height: 3.07692308em;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-top: 1px solid #D9D9D9;\n  display: block!important;\n&#125;\n#__vconsole .vc-logbox .vc-cmd .vc-cmd-input-wrap &#123;\n  display: block;\n  height: 2.15384615em;\n  margin-right: 3.07692308em;\n  padding: 0.46153846em 0.61538462em;\n&#125;\n#__vconsole .vc-logbox .vc-cmd .vc-cmd-input &#123;\n  width: 100%;\n  border: none;\n  resize: none;\n  outline: none;\n  padding: 0;\n  font-size: 0.92307692em;\n&#125;\n#__vconsole .vc-logbox .vc-cmd .vc-cmd-input::-webkit-input-placeholder &#123;\n  line-height: 2.15384615em;\n&#125;\n#__vconsole .vc-logbox .vc-cmd .vc-cmd-btn &#123;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  width: 3.07692308em;\n  border: none;\n  background-color: #EFEFF4;\n  outline: none;\n  -webkit-touch-callout: none;\n  font-size: 1em;\n&#125;\n#__vconsole .vc-logbox .vc-cmd .vc-cmd-btn:active &#123;\n  background-color: rgba(0, 0, 0, 0.15);\n&#125;\n#__vconsole .vc-logbox .vc-cmd .vc-cmd-prompted &#123;\n  position: fixed;\n  width: 100%;\n  background-color: #FBF9FE;\n  border: 1px solid #D9D9D9;\n  overflow-x: scroll;\n  display: none;\n&#125;\n#__vconsole .vc-logbox .vc-cmd .vc-cmd-prompted li &#123;\n  list-style: none;\n  line-height: 30px;\n  padding: 0 0.46153846em;\n  border-bottom: 1px solid #D9D9D9;\n&#125;\n#__vconsole .vc-logbox .vc-group .vc-group-preview &#123;\n  -webkit-touch-callout: none;\n&#125;\n#__vconsole .vc-logbox .vc-group .vc-group-preview:active &#123;\n  background-color: #E6E6E6;\n&#125;\n#__vconsole .vc-logbox .vc-group .vc-group-detail &#123;\n  display: none;\n  padding: 0 0 0.76923077em 1.53846154em;\n  border-bottom: 1px solid #EEE;\n&#125;\n#__vconsole .vc-logbox .vc-group.vc-actived .vc-group-detail &#123;\n  display: block;\n  background-color: #FBF9FE;\n&#125;\n#__vconsole .vc-logbox .vc-group.vc-actived .vc-table-row &#123;\n  background-color: #FFF;\n&#125;\n#__vconsole .vc-logbox .vc-group.vc-actived .vc-group-preview &#123;\n  background-color: #FBF9FE;\n&#125;\n#__vconsole .vc-logbox .vc-table .vc-table-row &#123;\n  display: flex;\n  display: -webkit-flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  -webkit-box-direction: row;\n  -webkit-flex-wrap: wrap;\n  overflow: hidden;\n  border-bottom: 1px solid #EEE;\n&#125;\n#__vconsole .vc-logbox .vc-table .vc-table-row.vc-left-border &#123;\n  border-left: 1px solid #EEE;\n&#125;\n#__vconsole .vc-logbox .vc-table .vc-table-col &#123;\n  flex: 1;\n  -webkit-box-flex: 1;\n  padding: 0.23076923em 0.30769231em;\n  border-left: 1px solid #EEE;\n  overflow: auto;\n  white-space: pre-wrap;\n  word-break: break-word;\n  /*white-space: nowrap;\n        text-overflow: ellipsis;*/\n  -webkit-overflow-scrolling: touch;\n&#125;\n#__vconsole .vc-logbox .vc-table .vc-table-col:first-child &#123;\n  border: none;\n&#125;\n#__vconsole .vc-logbox .vc-table .vc-small .vc-table-col &#123;\n  padding: 0 0.30769231em;\n  font-size: 0.92307692em;\n&#125;\n#__vconsole .vc-logbox .vc-table .vc-table-col-2 &#123;\n  flex: 2;\n  -webkit-box-flex: 2;\n&#125;\n#__vconsole .vc-logbox .vc-table .vc-table-col-3 &#123;\n  flex: 3;\n  -webkit-box-flex: 3;\n&#125;\n#__vconsole .vc-logbox .vc-table .vc-table-col-4 &#123;\n  flex: 4;\n  -webkit-box-flex: 4;\n&#125;\n#__vconsole .vc-logbox .vc-table .vc-table-col-5 &#123;\n  flex: 5;\n  -webkit-box-flex: 5;\n&#125;\n#__vconsole .vc-logbox .vc-table .vc-table-col-6 &#123;\n  flex: 6;\n  -webkit-box-flex: 6;\n&#125;\n#__vconsole .vc-logbox .vc-table .vc-table-row-error &#123;\n  border-color: #F4A0AB;\n  background-color: #FFE4E1;\n&#125;\n#__vconsole .vc-logbox .vc-table .vc-table-row-error .vc-table-col &#123;\n  color: #DC143C;\n  border-color: #F4A0AB;\n&#125;\n#__vconsole .vc-logbox .vc-table .vc-table-col-title &#123;\n  font-weight: bold;\n&#125;\n#__vconsole .vc-logbox.vc-actived &#123;\n  display: block;\n&#125;\n#__vconsole .vc-toolbar &#123;\n  border-top: 1px solid #D9D9D9;\n  line-height: 3em;\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  display: -webkit-box;\n  flex-direction: row;\n  -webkit-box-direction: row;\n&#125;\n#__vconsole .vc-toolbar .vc-tool &#123;\n  display: none;\n  text-decoration: none;\n  color: #000;\n  width: 50%;\n  flex: 1;\n  -webkit-box-flex: 1;\n  text-align: center;\n  position: relative;\n  -webkit-touch-callout: none;\n&#125;\n#__vconsole .vc-toolbar .vc-tool.vc-toggle,\n#__vconsole .vc-toolbar .vc-tool.vc-global-tool &#123;\n  display: block;\n&#125;\n#__vconsole .vc-toolbar .vc-tool:active &#123;\n  background-color: rgba(0, 0, 0, 0.15);\n&#125;\n#__vconsole .vc-toolbar .vc-tool:after &#123;\n  content: &quot; &quot;;\n  position: absolute;\n  top: 0.53846154em;\n  bottom: 0.53846154em;\n  right: 0;\n  border-left: 1px solid #D9D9D9;\n&#125;\n#__vconsole .vc-toolbar .vc-tool-last:after &#123;\n  border: none;\n&#125;\n@supports (bottom: constant(safe-area-inset-bottom)) or (bottom: env(safe-area-inset-bottom)) &#123;\n  #__vconsole .vc-toolbar,\n  #__vconsole .vc-switch &#123;\n    bottom: constant(safe-area-inset-bottom);\n    bottom: env(safe-area-inset-bottom);\n  &#125;\n&#125;\n#__vconsole.vc-toggle .vc-switch &#123;\n  display: none;\n&#125;\n#__vconsole.vc-toggle .vc-mask &#123;\n  background: rgba(0, 0, 0, 0.6);\n  display: block;\n&#125;\n#__vconsole.vc-toggle .vc-panel &#123;\n  -webkit-transform: translate(0, 0);\n  transform: translate(0, 0);\n&#125;\n&#x27;</span>,<span class="string">&quot;&quot;</span>])&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;div id=&quot;__vconsole&quot; class=&quot;&quot;&gt;\n  &lt;div class=&quot;vc-switch&quot;&gt;vConsole&lt;/div&gt;\n  &lt;div class=&quot;vc-mask&quot;&gt;\n  &lt;/div&gt;\n  &lt;div class=&quot;vc-panel&quot;&gt;\n    &lt;div class=&quot;vc-tabbar&quot;&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;vc-topbar&quot;&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;vc-content&quot;&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;vc-toolbar&quot;&gt;\n      &lt;a class=&quot;vc-tool vc-global-tool vc-tool-last vc-hide&quot;&gt;Hide&lt;/a&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;a class=&quot;vc-tab&quot; data-tab=&quot;&#123;&#123;id&#125;&#125;&quot; id=&quot;__vc_tab_&#123;&#123;id&#125;&#125;&quot;&gt;&#123;&#123;name&#125;&#125;&lt;/a&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;div class=&quot;vc-logbox&quot; id=&quot;__vc_log_&#123;&#123;id&#125;&#125;&quot;&gt;\n  \n&lt;/div&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;a class=&quot;vc-toptab vc-topbar-&#123;&#123;pluginID&#125;&#125;&#123;&#123;if (className)&#125;&#125; &#123;&#123;className&#125;&#125;&#123;&#123;/if&#125;&#125;&quot;&gt;&#123;&#123;name&#125;&#125;&lt;/a&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;a class=&quot;vc-tool vc-tool-&#123;&#123;pluginID&#125;&#125;&quot;&gt;&#123;&#123;name&#125;&#125;&lt;/a&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;div id=&quot;&#123;&#123;_id&#125;&#125;&quot; class=&quot;vc-item vc-item-&#123;&#123;logType&#125;&#125; &#123;&#123;style&#125;&#125;&quot;&gt;\n\t&lt;div class=&quot;vc-item-content&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;div class=&quot;vc-fold&quot;&gt;\n  &#123;&#123;if (lineType == \&#x27;obj\&#x27;)&#125;&#125;\n    &lt;i class=&quot;vc-fold-outer&quot;&gt;&#123;&#123;outer&#125;&#125;&lt;/i&gt;\n    &lt;div class=&quot;vc-fold-inner&quot;&gt;&lt;/div&gt;\n  &#123;&#123;else if (lineType == \&#x27;value\&#x27;)&#125;&#125;\n    &lt;i class=&quot;vc-code-&#123;&#123;valueType&#125;&#125;&quot;&gt;&#123;&#123;value&#125;&#125;&lt;/i&gt;\n  &#123;&#123;else if (lineType == \&#x27;kv\&#x27;)&#125;&#125;\n    &lt;i class=&quot;vc-code-key&#123;&#123;if (keyType)&#125;&#125; vc-code-&#123;&#123;keyType&#125;&#125;-key&#123;&#123;/if&#125;&#125;&quot;&gt;&#123;&#123;key&#125;&#125;&lt;/i&gt;: &lt;i class=&quot;vc-code-&#123;&#123;valueType&#125;&#125;&quot;&gt;&#123;&#123;value&#125;&#125;&lt;/i&gt;\n  &#123;&#123;/if&#125;&#125;\n&lt;/div&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;span&gt;\n  &lt;i class=&quot;vc-code-key&#123;&#123;if (keyType)&#125;&#125; vc-code-&#123;&#123;keyType&#125;&#125;-key&#123;&#123;/if&#125;&#125;&quot;&gt;&#123;&#123;key&#125;&#125;&lt;/i&gt;: &lt;i class=&quot;vc-code-&#123;&#123;valueType&#125;&#125;&quot;&gt;&#123;&#123;value&#125;&#125;&lt;/i&gt;\n&lt;/span&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params"><span class="variable language_">module</span>,<span class="built_in">exports</span>,__webpack_require__</span>)&#123;<span class="keyword">var</span> __WEBPACK_AMD_DEFINE_FACTORY__,__WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__,factory;factory=<span class="keyword">function</span>(<span class="params">_exports,_query,tool,_log,_tabbox_default,_item_code</span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">_interopRequireWildcard</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(e&amp;&amp;e.<span class="property">__esModule</span>)<span class="keyword">return</span> e;<span class="keyword">var</span> t=&#123;&#125;;<span class="keyword">if</span>(<span class="literal">null</span>!=e)<span class="keyword">for</span>(<span class="keyword">var</span> o <span class="keyword">in</span> e)<span class="keyword">if</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(e,o))&#123;<span class="keyword">var</span> n=<span class="title class_">Object</span>.<span class="property">defineProperty</span>&amp;&amp;<span class="title class_">Object</span>.<span class="property">getOwnPropertyDescriptor</span>?<span class="title class_">Object</span>.<span class="title function_">getOwnPropertyDescriptor</span>(e,o):&#123;&#125;;n.<span class="property">get</span>||n.<span class="property">set</span>?<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(t,o,n):t[o]=e[o]&#125;<span class="keyword">return</span> t.<span class="property">default</span>=e,t&#125;<span class="keyword">function</span> <span class="title function_">_interopRequireDefault</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;e.<span class="property">__esModule</span>?<span class="attr">e</span>:&#123;<span class="attr">default</span>:e&#125;&#125;<span class="keyword">function</span> <span class="title function_">_typeof</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span>(_typeof=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;<span class="string">&quot;symbol&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>.<span class="property">iterator</span>?<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> <span class="keyword">typeof</span> e&#125;:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;e.<span class="property">constructor</span>===<span class="title class_">Symbol</span>&amp;&amp;e!==<span class="title class_">Symbol</span>.<span class="property"><span class="keyword">prototype</span></span>?<span class="string">&quot;symbol&quot;</span>:<span class="keyword">typeof</span> e&#125;)(e)&#125;<span class="keyword">function</span> <span class="title function_">_classCallCheck</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(!(e <span class="keyword">instanceof</span> t))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Cannot call a class as a function&quot;</span>)&#125;<span class="keyword">function</span> <span class="title function_">_defineProperties</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;t.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=t[o];n.<span class="property">enumerable</span>=n.<span class="property">enumerable</span>||!<span class="number">1</span>,n.<span class="property">configurable</span>=!<span class="number">0</span>,<span class="string">&quot;value&quot;</span><span class="keyword">in</span> n&amp;&amp;(n.<span class="property">writable</span>=!<span class="number">0</span>),<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(e,n.<span class="property">key</span>,n)&#125;&#125;<span class="keyword">function</span> <span class="title function_">_createClass</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">return</span> t&amp;&amp;<span class="title function_">_defineProperties</span>(e.<span class="property"><span class="keyword">prototype</span></span>,t),o&amp;&amp;<span class="title function_">_defineProperties</span>(e,o),e&#125;<span class="keyword">function</span> <span class="title function_">_possibleConstructorReturn</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span>!t||<span class="string">&quot;object&quot;</span>!==<span class="title function_">_typeof</span>(t)&amp;&amp;<span class="string">&quot;function&quot;</span>!=<span class="keyword">typeof</span> t?<span class="title function_">_assertThisInitialized</span>(e):t&#125;<span class="keyword">function</span> <span class="title function_">_assertThisInitialized</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(<span class="keyword">void</span> <span class="number">0</span>===e)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ReferenceError</span>(<span class="string">&quot;this hasn&#x27;t been initialised - super() hasn&#x27;t been called&quot;</span>);<span class="keyword">return</span> e&#125;<span class="keyword">function</span> <span class="title function_">_get</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">return</span>(_get=<span class="string">&quot;undefined&quot;</span>!=<span class="keyword">typeof</span> <span class="title class_">Reflect</span>&amp;&amp;<span class="title class_">Reflect</span>.<span class="property">get</span>?<span class="title class_">Reflect</span>.<span class="property">get</span>:<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n=<span class="title function_">_superPropBase</span>(e,t);<span class="keyword">if</span>(n)&#123;<span class="keyword">var</span> r=<span class="title class_">Object</span>.<span class="title function_">getOwnPropertyDescriptor</span>(n,t);<span class="keyword">return</span> r.<span class="property">get</span>?r.<span class="property">get</span>.<span class="title function_">call</span>(o):r.<span class="property">value</span>&#125;&#125;)(e,t,o||e)&#125;<span class="keyword">function</span> <span class="title function_">_superPropBase</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(;!<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(e,t)&amp;&amp;<span class="literal">null</span>!==(e=<span class="title function_">_getPrototypeOf</span>(e)););<span class="keyword">return</span> e&#125;<span class="keyword">function</span> <span class="title function_">_getPrototypeOf</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span>(_getPrototypeOf=<span class="title class_">Object</span>.<span class="property">setPrototypeOf</span>?<span class="title class_">Object</span>.<span class="property">getPrototypeOf</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">__proto__</span>||<span class="title class_">Object</span>.<span class="title function_">getPrototypeOf</span>(e)&#125;)(e)&#125;<span class="keyword">function</span> <span class="title function_">_inherits</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(<span class="string">&quot;function&quot;</span>!=<span class="keyword">typeof</span> t&amp;&amp;<span class="literal">null</span>!==t)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Super expression must either be null or a function&quot;</span>);e.<span class="property"><span class="keyword">prototype</span></span>=<span class="title class_">Object</span>.<span class="title function_">create</span>(t&amp;&amp;t.<span class="property"><span class="keyword">prototype</span></span>,&#123;<span class="attr">constructor</span>:&#123;<span class="attr">value</span>:e,<span class="attr">writable</span>:!<span class="number">0</span>,<span class="attr">configurable</span>:!<span class="number">0</span>&#125;&#125;),t&amp;&amp;<span class="title function_">_setPrototypeOf</span>(e,t)&#125;<span class="keyword">function</span> <span class="title function_">_setPrototypeOf</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span>(_setPrototypeOf=<span class="title class_">Object</span>.<span class="property">setPrototypeOf</span>||<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span> e.<span class="property">__proto__</span>=t,e&#125;)(e,t)&#125;<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(_exports,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),_exports.<span class="property">default</span>=<span class="keyword">void</span> <span class="number">0</span>,_query=<span class="title function_">_interopRequireDefault</span>(_query),tool=<span class="title function_">_interopRequireWildcard</span>(tool),_log=<span class="title function_">_interopRequireDefault</span>(_log),_tabbox_default=<span class="title function_">_interopRequireDefault</span>(_tabbox_default),_item_code=<span class="title function_">_interopRequireDefault</span>(_item_code);<span class="keyword">var</span> <span class="title class_">VConsoleDefaultTab</span>=<span class="keyword">function</span>(<span class="params">_VConsoleLogTab</span>)&#123;<span class="keyword">function</span> <span class="title function_">VConsoleDefaultTab</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e,t;<span class="title function_">_classCallCheck</span>(<span class="variable language_">this</span>,<span class="title class_">VConsoleDefaultTab</span>);<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="variable language_">arguments</span>.<span class="property">length</span>,n=<span class="keyword">new</span> <span class="title class_">Array</span>(o),r=<span class="number">0</span>;r&lt;o;r++)n[r]=<span class="variable language_">arguments</span>[r];<span class="keyword">return</span>(t=<span class="title function_">_possibleConstructorReturn</span>(<span class="variable language_">this</span>,(e=<span class="title function_">_getPrototypeOf</span>(<span class="title class_">VConsoleDefaultTab</span>)).<span class="property">call</span>.<span class="title function_">apply</span>(e,[<span class="variable language_">this</span>].<span class="title function_">concat</span>(n)))).<span class="property">tplTabbox</span>=_tabbox_default.<span class="property">default</span>,t&#125;<span class="keyword">return</span> <span class="title function_">_inherits</span>(<span class="title class_">VConsoleDefaultTab</span>,_VConsoleLogTab),<span class="title function_">_createClass</span>(<span class="title class_">VConsoleDefaultTab</span>,[&#123;<span class="attr">key</span>:<span class="string">&quot;onReady&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span> <span class="title function_">onReady</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> that=<span class="variable language_">this</span>;<span class="title function_">_get</span>(<span class="title function_">_getPrototypeOf</span>(<span class="title class_">VConsoleDefaultTab</span>.<span class="property"><span class="keyword">prototype</span></span>),<span class="string">&quot;onReady&quot;</span>,<span class="variable language_">this</span>).<span class="title function_">call</span>(<span class="variable language_">this</span>),<span class="variable language_">window</span>.<span class="property">winKeys</span>=<span class="title class_">Object</span>.<span class="title function_">getOwnPropertyNames</span>(<span class="variable language_">window</span>).<span class="title function_">sort</span>(),<span class="variable language_">window</span>.<span class="property">keyTypes</span>=&#123;&#125;;<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;winKeys.<span class="property">length</span>;i++)keyTypes[winKeys[i]]=<span class="title function_">_typeof</span>(<span class="variable language_">window</span>[winKeys[i]]);<span class="keyword">var</span> cacheObj=&#123;&#125;,<span class="variable constant_">ID_REGEX</span>=<span class="regexp">/[a-zA-Z_0-9\$\-\u00A2-\uFFFF]/</span>,retrievePrecedingIdentifier=<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;o=o||<span class="variable constant_">ID_REGEX</span>;<span class="keyword">for</span>(<span class="keyword">var</span> n=[],r=t-<span class="number">1</span>;r&gt;=<span class="number">0</span>&amp;&amp;o.<span class="title function_">test</span>(e[r]);r--)n.<span class="title function_">push</span>(e[r]);<span class="keyword">if</span>(<span class="number">0</span>==n.<span class="property">length</span>)&#123;o=<span class="regexp">/\./</span>;<span class="keyword">for</span>(<span class="keyword">var</span> i=t-<span class="number">1</span>;i&gt;=<span class="number">0</span>&amp;&amp;o.<span class="title function_">test</span>(e[i]);i--)n.<span class="title function_">push</span>(e[i])&#125;<span class="keyword">if</span>(<span class="number">0</span>===n.<span class="property">length</span>)&#123;<span class="keyword">var</span> a=e.<span class="title function_">match</span>(<span class="regexp">/[\(\)\[\]\&#123;\&#125;]/gi</span>)||[];<span class="keyword">return</span> a[a.<span class="property">length</span>-<span class="number">1</span>]&#125;<span class="keyword">return</span> n.<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>)&#125;;_query.<span class="property">default</span>.<span class="title function_">bind</span>(_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd-input&quot;</span>),<span class="string">&quot;keyup&quot;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> isDeleteKeyCode=<span class="number">8</span>===e.<span class="property">keyCode</span>||<span class="number">46</span>===e.<span class="property">keyCode</span>,$prompted=_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd-prompted&quot;</span>);$prompted.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span>,$prompted.<span class="property">innerHTML</span>=<span class="string">&quot;&quot;</span>;<span class="keyword">var</span> tempValue=<span class="variable language_">this</span>.<span class="property">value</span>,value=<span class="title function_">retrievePrecedingIdentifier</span>(<span class="variable language_">this</span>.<span class="property">value</span>,<span class="variable language_">this</span>.<span class="property">value</span>.<span class="property">length</span>);<span class="keyword">if</span>(value&amp;&amp;value.<span class="property">length</span>&gt;<span class="number">0</span>)&#123;<span class="keyword">if</span>(<span class="regexp">/\(/</span>.<span class="title function_">test</span>(value)&amp;&amp;!isDeleteKeyCode)<span class="keyword">return</span> <span class="title function_">void</span>(_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd-input&quot;</span>).<span class="property">value</span>+=<span class="string">&quot;)&quot;</span>);<span class="keyword">if</span>(<span class="regexp">/\[/</span>.<span class="title function_">test</span>(value)&amp;&amp;!isDeleteKeyCode)<span class="keyword">return</span> <span class="title function_">void</span>(_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd-input&quot;</span>).<span class="property">value</span>+=<span class="string">&quot;]&quot;</span>);<span class="keyword">if</span>(<span class="regexp">/\&#123;/</span>.<span class="title function_">test</span>(value)&amp;&amp;!isDeleteKeyCode)<span class="keyword">return</span> <span class="title function_">void</span>(_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd-input&quot;</span>).<span class="property">value</span>+=<span class="string">&quot;&#125;&quot;</span>);<span class="keyword">if</span>(<span class="string">&quot;.&quot;</span>===value)&#123;<span class="keyword">var</span> key=<span class="title function_">retrievePrecedingIdentifier</span>(tempValue,tempValue.<span class="property">length</span>-<span class="number">1</span>);<span class="keyword">if</span>(!cacheObj[key])<span class="keyword">try</span>&#123;cacheObj[key]=<span class="title class_">Object</span>.<span class="title function_">getOwnPropertyNames</span>(<span class="built_in">eval</span>(<span class="string">&quot;(&quot;</span>+key+<span class="string">&quot;)&quot;</span>)).<span class="title function_">sort</span>()&#125;<span class="keyword">catch</span>(e)&#123;&#125;<span class="keyword">try</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> _i3=<span class="number">0</span>;_i3&lt;cacheObj[key].<span class="property">length</span>;_i3++)&#123;<span class="keyword">var</span> $li=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;li&quot;</span>),_key=cacheObj[key][_i3];$li.<span class="property">innerHTML</span>=_key,$li.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd-input&quot;</span>).<span class="property">value</span>=<span class="string">&quot;&quot;</span>,_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd-input&quot;</span>).<span class="property">value</span>=tempValue+<span class="variable language_">this</span>.<span class="property">innerHTML</span>,$prompted.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span>&#125;,$prompted.<span class="title function_">appendChild</span>($li)&#125;&#125;<span class="keyword">catch</span>(e)&#123;&#125;&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;.&quot;</span>!==value.<span class="title function_">substring</span>(value.<span class="property">length</span>-<span class="number">1</span>)&amp;&amp;value.<span class="title function_">indexOf</span>(<span class="string">&quot;.&quot;</span>)&lt;<span class="number">0</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> _i4=<span class="number">0</span>;_i4&lt;winKeys.<span class="property">length</span>;_i4++)<span class="keyword">if</span>(winKeys[_i4].<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(value.<span class="title function_">toLowerCase</span>())&gt;=<span class="number">0</span>)&#123;<span class="keyword">var</span> _$li=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;li&quot;</span>);_$li.<span class="property">innerHTML</span>=winKeys[_i4],_$li.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd-input&quot;</span>).<span class="property">value</span>=<span class="string">&quot;&quot;</span>,_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd-input&quot;</span>).<span class="property">value</span>=<span class="variable language_">this</span>.<span class="property">innerHTML</span>,<span class="string">&quot;function&quot;</span>==keyTypes[<span class="variable language_">this</span>.<span class="property">innerHTML</span>]&amp;&amp;(_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd-input&quot;</span>).<span class="property">value</span>+=<span class="string">&quot;()&quot;</span>),$prompted.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span>&#125;,$prompted.<span class="title function_">appendChild</span>(_$li)&#125;&#125;<span class="keyword">else</span>&#123;<span class="keyword">var</span> arr=value.<span class="title function_">split</span>(<span class="string">&quot;.&quot;</span>);<span class="keyword">if</span>(cacheObj[arr[<span class="number">0</span>]])&#123;cacheObj[arr[<span class="number">0</span>]].<span class="title function_">sort</span>();<span class="keyword">for</span>(<span class="keyword">var</span> _i5=<span class="number">0</span>;_i5&lt;cacheObj[arr[<span class="number">0</span>]].<span class="property">length</span>;_i5++)&#123;<span class="keyword">var</span> _$li2=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;li&quot;</span>),_key3=cacheObj[arr[<span class="number">0</span>]][_i5];_key3.<span class="title function_">indexOf</span>(arr[<span class="number">1</span>])&gt;=<span class="number">0</span>&amp;&amp;(_$li2.<span class="property">innerHTML</span>=_key3,_$li2.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd-input&quot;</span>).<span class="property">value</span>=<span class="string">&quot;&quot;</span>,_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd-input&quot;</span>).<span class="property">value</span>=tempValue+<span class="variable language_">this</span>.<span class="property">innerHTML</span>,$prompted.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span>&#125;,$prompted.<span class="title function_">appendChild</span>(_$li2))&#125;&#125;&#125;<span class="keyword">if</span>($prompted.<span class="property">children</span>.<span class="property">length</span>&gt;<span class="number">0</span>)&#123;<span class="keyword">var</span> m=<span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="number">200</span>,<span class="number">31</span>*$prompted.<span class="property">children</span>.<span class="property">length</span>);$prompted.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;block&quot;</span>,$prompted.<span class="property">style</span>.<span class="property">height</span>=m+<span class="string">&quot;px&quot;</span>,$prompted.<span class="property">style</span>.<span class="property">marginTop</span>=-m+<span class="string">&quot;px&quot;</span>&#125;&#125;<span class="keyword">else</span> $prompted.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span>&#125;),_query.<span class="property">default</span>.<span class="title function_">bind</span>(_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd&quot;</span>,<span class="variable language_">this</span>.<span class="property">$tabbox</span>),<span class="string">&quot;submit&quot;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;e.<span class="title function_">preventDefault</span>();<span class="keyword">var</span> t=_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd-input&quot;</span>,e.<span class="property">target</span>),o=t.<span class="property">value</span>;t.<span class="property">value</span>=<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>!==o&amp;&amp;that.<span class="title function_">evalCommand</span>(o);<span class="keyword">var</span> n=_query.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-cmd-prompted&quot;</span>);n&amp;&amp;(n.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span>)&#125;);<span class="keyword">var</span> code=<span class="string">&quot;&quot;</span>;code+=<span class="string">&quot;if (!!window) &#123;&quot;</span>,code+=<span class="string">&quot;window.__vConsole_cmd_result = undefined;&quot;</span>,code+=<span class="string">&quot;window.__vConsole_cmd_error = false;&quot;</span>,code+=<span class="string">&quot;&#125;&quot;</span>;<span class="keyword">var</span> scriptList=<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;script&quot;</span>),nonce=<span class="string">&quot;&quot;</span>;scriptList.<span class="property">length</span>&gt;<span class="number">0</span>&amp;&amp;(nonce=scriptList[<span class="number">0</span>].<span class="property">nonce</span>||<span class="string">&quot;&quot;</span>);<span class="keyword">var</span> script=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;SCRIPT&quot;</span>);script.<span class="property">innerHTML</span>=code,script.<span class="title function_">setAttribute</span>(<span class="string">&quot;nonce&quot;</span>,nonce),<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="title function_">appendChild</span>(script),<span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="title function_">removeChild</span>(script)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;mockConsole&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="title function_">_get</span>(<span class="title function_">_getPrototypeOf</span>(<span class="title class_">VConsoleDefaultTab</span>.<span class="property"><span class="keyword">prototype</span></span>),<span class="string">&quot;mockConsole&quot;</span>,<span class="variable language_">this</span>).<span class="title function_">call</span>(<span class="variable language_">this</span>);<span class="keyword">var</span> e=<span class="variable language_">this</span>;tool.<span class="title function_">isFunction</span>(<span class="variable language_">window</span>.<span class="property">onerror</span>)&amp;&amp;(<span class="variable language_">this</span>.<span class="property">windowOnError</span>=<span class="variable language_">window</span>.<span class="property">onerror</span>),<span class="variable language_">window</span>.<span class="property">onerror</span>=<span class="keyword">function</span>(<span class="params">t,o,n,r,i</span>)&#123;<span class="keyword">var</span> a=t;o&amp;&amp;(a+=<span class="string">&quot;\n&quot;</span>+o.<span class="title function_">replace</span>(location.<span class="property">origin</span>,<span class="string">&quot;&quot;</span>)),(n||r)&amp;&amp;(a+=<span class="string">&quot;:&quot;</span>+n+<span class="string">&quot;:&quot;</span>+r);<span class="keyword">var</span> l=!!i&amp;&amp;!!i.<span class="property">stack</span>&amp;&amp;i.<span class="property">stack</span>.<span class="title function_">toString</span>()||<span class="string">&quot;&quot;</span>;e.<span class="title function_">printLog</span>(&#123;<span class="attr">logType</span>:<span class="string">&quot;error&quot;</span>,<span class="attr">logs</span>:[a,l],<span class="attr">noOrigin</span>:!<span class="number">0</span>&#125;),tool.<span class="title function_">isFunction</span>(e.<span class="property">windowOnError</span>)&amp;&amp;e.<span class="property">windowOnError</span>.<span class="title function_">call</span>(<span class="variable language_">window</span>,t,o,n,r,i)&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;evalCommand&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="variable language_">this</span>.<span class="title function_">printLog</span>(&#123;<span class="attr">logType</span>:<span class="string">&quot;log&quot;</span>,<span class="attr">content</span>:_query.<span class="property">default</span>.<span class="title function_">render</span>(_item_code.<span class="property">default</span>,&#123;<span class="attr">content</span>:e,<span class="attr">type</span>:<span class="string">&quot;input&quot;</span>&#125;),<span class="attr">style</span>:<span class="string">&quot;&quot;</span>&#125;);<span class="keyword">var</span> t,o=<span class="keyword">void</span> <span class="number">0</span>;<span class="keyword">try</span>&#123;o=<span class="built_in">eval</span>.<span class="title function_">call</span>(<span class="variable language_">window</span>,<span class="string">&quot;(&quot;</span>+e+<span class="string">&quot;)&quot;</span>)&#125;<span class="keyword">catch</span>(t)&#123;<span class="keyword">try</span>&#123;o=<span class="built_in">eval</span>.<span class="title function_">call</span>(<span class="variable language_">window</span>,e)&#125;<span class="keyword">catch</span>(e)&#123;&#125;&#125;tool.<span class="title function_">isArray</span>(o)||tool.<span class="title function_">isObject</span>(o)?t=<span class="variable language_">this</span>.<span class="title function_">getFoldedLine</span>(o):(tool.<span class="title function_">isNull</span>(o)?o=<span class="string">&quot;null&quot;</span>:tool.<span class="title function_">isUndefined</span>(o)?o=<span class="string">&quot;undefined&quot;</span>:tool.<span class="title function_">isFunction</span>(o)?o=<span class="string">&quot;function()&quot;</span>:tool.<span class="title function_">isString</span>(o)&amp;&amp;(o=<span class="string">&#x27;&quot;&#x27;</span>+o+<span class="string">&#x27;&quot;&#x27;</span>),t=_query.<span class="property">default</span>.<span class="title function_">render</span>(_item_code.<span class="property">default</span>,&#123;<span class="attr">content</span>:o,<span class="attr">type</span>:<span class="string">&quot;output&quot;</span>&#125;)),<span class="variable language_">this</span>.<span class="title function_">printLog</span>(&#123;<span class="attr">logType</span>:<span class="string">&quot;log&quot;</span>,<span class="attr">content</span>:t,<span class="attr">style</span>:<span class="string">&quot;&quot;</span>&#125;),<span class="variable language_">window</span>.<span class="property">winKeys</span>=<span class="title class_">Object</span>.<span class="title function_">getOwnPropertyNames</span>(<span class="variable language_">window</span>).<span class="title function_">sort</span>()&#125;&#125;]),<span class="title class_">VConsoleDefaultTab</span>&#125;(_log.<span class="property">default</span>),_default=<span class="title class_">VConsoleDefaultTab</span>;_exports.<span class="property">default</span>=_default,<span class="variable language_">module</span>.<span class="property">exports</span>=<span class="built_in">exports</span>.<span class="property">default</span>&#125;,__WEBPACK_AMD_DEFINE_ARRAY__=[<span class="built_in">exports</span>,<span class="title function_">__webpack_require__</span>(<span class="number">1</span>),<span class="title function_">__webpack_require__</span>(<span class="number">0</span>),<span class="title function_">__webpack_require__</span>(<span class="number">3</span>),<span class="title function_">__webpack_require__</span>(<span class="number">22</span>),<span class="title function_">__webpack_require__</span>(<span class="number">23</span>)],<span class="keyword">void</span> <span class="number">0</span>===(__WEBPACK_AMD_DEFINE_RESULT__=<span class="string">&quot;function&quot;</span>==<span class="title function_">typeof</span>(__WEBPACK_AMD_DEFINE_FACTORY__=factory)?__WEBPACK_AMD_DEFINE_FACTORY__.<span class="title function_">apply</span>(<span class="built_in">exports</span>,__WEBPACK_AMD_DEFINE_ARRAY__):__WEBPACK_AMD_DEFINE_FACTORY__)||(<span class="variable language_">module</span>.<span class="property">exports</span>=__WEBPACK_AMD_DEFINE_RESULT__)&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;div&gt;\n  &lt;div class=&quot;vc-log&quot;&gt;&lt;/div&gt;\n  &lt;form class=&quot;vc-cmd&quot;&gt;\n    &lt;button class=&quot;vc-cmd-btn&quot; type=&quot;submit&quot;&gt;OK&lt;/button&gt;\n    &lt;ul class=\&#x27;vc-cmd-prompted\&#x27;&gt;&lt;/ul&gt;\n    &lt;div class=&quot;vc-cmd-input-wrap&quot;&gt;\n      &lt;textarea class=&quot;vc-cmd-input&quot; placeholder=&quot;command...&quot;&gt;&lt;/textarea&gt;\n    &lt;/div&gt;\n  &lt;/form&gt;\n&lt;/div&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;pre class=&quot;vc-item-code vc-item-code-&#123;&#123;type&#125;&#125;&quot;&gt;&#123;&#123;content&#125;&#125;&lt;/pre&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n,r,i;r=[t,<span class="title function_">o</span>(<span class="number">3</span>),<span class="title function_">o</span>(<span class="number">25</span>)],<span class="keyword">void</span> <span class="number">0</span>===(i=<span class="string">&quot;function&quot;</span>==<span class="title function_">typeof</span>(n=<span class="keyword">function</span>(<span class="params">o,n,r</span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">i</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;e.<span class="property">__esModule</span>?<span class="attr">e</span>:&#123;<span class="attr">default</span>:e&#125;&#125;<span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span>(a=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;<span class="string">&quot;symbol&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>.<span class="property">iterator</span>?<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> <span class="keyword">typeof</span> e&#125;:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;e.<span class="property">constructor</span>===<span class="title class_">Symbol</span>&amp;&amp;e!==<span class="title class_">Symbol</span>.<span class="property"><span class="keyword">prototype</span></span>?<span class="string">&quot;symbol&quot;</span>:<span class="keyword">typeof</span> e&#125;)(e)&#125;<span class="keyword">function</span> <span class="title function_">l</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;t.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=t[o];n.<span class="property">enumerable</span>=n.<span class="property">enumerable</span>||!<span class="number">1</span>,n.<span class="property">configurable</span>=!<span class="number">0</span>,<span class="string">&quot;value&quot;</span><span class="keyword">in</span> n&amp;&amp;(n.<span class="property">writable</span>=!<span class="number">0</span>),<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(e,n.<span class="property">key</span>,n)&#125;&#125;<span class="keyword">function</span> <span class="title function_">c</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span>!t||<span class="string">&quot;object&quot;</span>!==<span class="title function_">a</span>(t)&amp;&amp;<span class="string">&quot;function&quot;</span>!=<span class="keyword">typeof</span> t?<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(<span class="keyword">void</span> <span class="number">0</span>===e)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ReferenceError</span>(<span class="string">&quot;this hasn&#x27;t been initialised - super() hasn&#x27;t been called&quot;</span>);<span class="keyword">return</span> e&#125;(e):t&#125;<span class="keyword">function</span> <span class="title function_">s</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">return</span>(s=<span class="string">&quot;undefined&quot;</span>!=<span class="keyword">typeof</span> <span class="title class_">Reflect</span>&amp;&amp;<span class="title class_">Reflect</span>.<span class="property">get</span>?<span class="title class_">Reflect</span>.<span class="property">get</span>:<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n=<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(;!<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(e,t)&amp;&amp;<span class="literal">null</span>!==(e=<span class="title function_">d</span>(e)););<span class="keyword">return</span> e&#125;(e,t);<span class="keyword">if</span>(n)&#123;<span class="keyword">var</span> r=<span class="title class_">Object</span>.<span class="title function_">getOwnPropertyDescriptor</span>(n,t);<span class="keyword">return</span> r.<span class="property">get</span>?r.<span class="property">get</span>.<span class="title function_">call</span>(o):r.<span class="property">value</span>&#125;&#125;)(e,t,o||e)&#125;<span class="keyword">function</span> <span class="title function_">d</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span>(d=<span class="title class_">Object</span>.<span class="property">setPrototypeOf</span>?<span class="title class_">Object</span>.<span class="property">getPrototypeOf</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">__proto__</span>||<span class="title class_">Object</span>.<span class="title function_">getPrototypeOf</span>(e)&#125;)(e)&#125;<span class="keyword">function</span> <span class="title function_">u</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span>(u=<span class="title class_">Object</span>.<span class="property">setPrototypeOf</span>||<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span> e.<span class="property">__proto__</span>=t,e&#125;)(e,t)&#125;<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(o,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),o.<span class="property">default</span>=<span class="keyword">void</span> <span class="number">0</span>,n=<span class="title function_">i</span>(n),r=<span class="title function_">i</span>(r);<span class="keyword">var</span> v=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">function</span> <span class="title function_">t</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e,o;!<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(!(e <span class="keyword">instanceof</span> t))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Cannot call a class as a function&quot;</span>)&#125;(<span class="variable language_">this</span>,t);<span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="variable language_">arguments</span>.<span class="property">length</span>,i=<span class="keyword">new</span> <span class="title class_">Array</span>(n),a=<span class="number">0</span>;a&lt;n;a++)i[a]=<span class="variable language_">arguments</span>[a];<span class="keyword">return</span>(o=<span class="title function_">c</span>(<span class="variable language_">this</span>,(e=<span class="title function_">d</span>(t)).<span class="property">call</span>.<span class="title function_">apply</span>(e,[<span class="variable language_">this</span>].<span class="title function_">concat</span>(i)))).<span class="property">tplTabbox</span>=r.<span class="property">default</span>,o.<span class="property">allowUnformattedLog</span>=!<span class="number">1</span>,o&#125;<span class="keyword">var</span> o,i,a;<span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(<span class="string">&quot;function&quot;</span>!=<span class="keyword">typeof</span> t&amp;&amp;<span class="literal">null</span>!==t)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Super expression must either be null or a function&quot;</span>);e.<span class="property"><span class="keyword">prototype</span></span>=<span class="title class_">Object</span>.<span class="title function_">create</span>(t&amp;&amp;t.<span class="property"><span class="keyword">prototype</span></span>,&#123;<span class="attr">constructor</span>:&#123;<span class="attr">value</span>:e,<span class="attr">writable</span>:!<span class="number">0</span>,<span class="attr">configurable</span>:!<span class="number">0</span>&#125;&#125;),t&amp;&amp;<span class="title function_">u</span>(e,t)&#125;(t,n.<span class="property">default</span>),o=t,(i=[&#123;<span class="attr">key</span>:<span class="string">&quot;onInit&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="title function_">s</span>(<span class="title function_">d</span>(t.<span class="property"><span class="keyword">prototype</span></span>),<span class="string">&quot;onInit&quot;</span>,<span class="variable language_">this</span>).<span class="title function_">call</span>(<span class="variable language_">this</span>),<span class="variable language_">this</span>.<span class="title function_">printSystemInfo</span>()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;printSystemInfo&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e=navigator.<span class="property">userAgent</span>,t=<span class="string">&quot;&quot;</span>,o=e.<span class="title function_">match</span>(<span class="regexp">/(ipod).*\s([\d_]+)/i</span>),n=e.<span class="title function_">match</span>(<span class="regexp">/(ipad).*\s([\d_]+)/i</span>),r=e.<span class="title function_">match</span>(<span class="regexp">/(iphone)\sos\s([\d_]+)/i</span>),i=e.<span class="title function_">match</span>(<span class="regexp">/(android)\s([\d\.]+)/i</span>);t=<span class="string">&quot;Unknown&quot;</span>,i?t=<span class="string">&quot;Android &quot;</span>+i[<span class="number">2</span>]:r?t=<span class="string">&quot;iPhone, iOS &quot;</span>+r[<span class="number">2</span>].<span class="title function_">replace</span>(<span class="regexp">/_/g</span>,<span class="string">&quot;.&quot;</span>):n?t=<span class="string">&quot;iPad, iOS &quot;</span>+n[<span class="number">2</span>].<span class="title function_">replace</span>(<span class="regexp">/_/g</span>,<span class="string">&quot;.&quot;</span>):o&amp;&amp;(t=<span class="string">&quot;iPod, iOS &quot;</span>+o[<span class="number">2</span>].<span class="title function_">replace</span>(<span class="regexp">/_/g</span>,<span class="string">&quot;.&quot;</span>));<span class="keyword">var</span> a=t,l=e.<span class="title function_">match</span>(<span class="regexp">/MicroMessenger\/([\d\.]+)/i</span>);t=<span class="string">&quot;Unknown&quot;</span>,l&amp;&amp;l[<span class="number">1</span>]?(a+=<span class="string">&quot;, WeChat &quot;</span>+(t=l[<span class="number">1</span>]),<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;System:&quot;</span>,a)):<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;System:&quot;</span>,a),t=<span class="string">&quot;Unknown&quot;</span>,a=t=<span class="string">&quot;https:&quot;</span>==location.<span class="property">protocol</span>?<span class="string">&quot;HTTPS&quot;</span>:<span class="string">&quot;http:&quot;</span>==location.<span class="property">protocol</span>?<span class="string">&quot;HTTP&quot;</span>:location.<span class="property">protocol</span>.<span class="title function_">replace</span>(<span class="string">&quot;:&quot;</span>,<span class="string">&quot;&quot;</span>);<span class="keyword">var</span> c=e.<span class="title function_">toLowerCase</span>().<span class="title function_">match</span>(<span class="regexp">/ nettype\/([^ ]+)/g</span>);t=<span class="string">&quot;Unknown&quot;</span>,c&amp;&amp;c[<span class="number">0</span>]?(a+=<span class="string">&quot;, &quot;</span>+(t=(c=c[<span class="number">0</span>].<span class="title function_">split</span>(<span class="string">&quot;/&quot;</span>))[<span class="number">1</span>]),<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;Network:&quot;</span>,a)):<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;Protocol:&quot;</span>,a),<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;UA:&quot;</span>,e),<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e=<span class="variable language_">window</span>.<span class="property">performance</span>||<span class="variable language_">window</span>.<span class="property">msPerformance</span>||<span class="variable language_">window</span>.<span class="property">webkitPerformance</span>;<span class="keyword">if</span>(e&amp;&amp;e.<span class="property">timing</span>)&#123;<span class="keyword">var</span> t=e.<span class="property">timing</span>;t.<span class="property">navigationStart</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;navigationStart:&quot;</span>,t.<span class="property">navigationStart</span>),t.<span class="property">navigationStart</span>&amp;&amp;t.<span class="property">domainLookupStart</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;navigation:&quot;</span>,t.<span class="property">domainLookupStart</span>-t.<span class="property">navigationStart</span>+<span class="string">&quot;ms&quot;</span>),t.<span class="property">domainLookupEnd</span>&amp;&amp;t.<span class="property">domainLookupStart</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;dns:&quot;</span>,t.<span class="property">domainLookupEnd</span>-t.<span class="property">domainLookupStart</span>+<span class="string">&quot;ms&quot;</span>),t.<span class="property">connectEnd</span>&amp;&amp;t.<span class="property">connectStart</span>&amp;&amp;(t.<span class="property">connectEnd</span>&amp;&amp;t.<span class="property">secureConnectionStart</span>?<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;tcp (ssl):&quot;</span>,t.<span class="property">connectEnd</span>-t.<span class="property">connectStart</span>+<span class="string">&quot;ms (&quot;</span>+(t.<span class="property">connectEnd</span>-t.<span class="property">secureConnectionStart</span>)+<span class="string">&quot;ms)&quot;</span>):<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;tcp:&quot;</span>,t.<span class="property">connectEnd</span>-t.<span class="property">connectStart</span>+<span class="string">&quot;ms&quot;</span>)),t.<span class="property">responseStart</span>&amp;&amp;t.<span class="property">requestStart</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;request:&quot;</span>,t.<span class="property">responseStart</span>-t.<span class="property">requestStart</span>+<span class="string">&quot;ms&quot;</span>),t.<span class="property">responseEnd</span>&amp;&amp;t.<span class="property">responseStart</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;response:&quot;</span>,t.<span class="property">responseEnd</span>-t.<span class="property">responseStart</span>+<span class="string">&quot;ms&quot;</span>),t.<span class="property">domComplete</span>&amp;&amp;t.<span class="property">domLoading</span>&amp;&amp;(t.<span class="property">domContentLoadedEventStart</span>&amp;&amp;t.<span class="property">domLoading</span>?<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;domComplete (domLoaded):&quot;</span>,t.<span class="property">domComplete</span>-t.<span class="property">domLoading</span>+<span class="string">&quot;ms (&quot;</span>+(t.<span class="property">domContentLoadedEventStart</span>-t.<span class="property">domLoading</span>)+<span class="string">&quot;ms)&quot;</span>):<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;domComplete:&quot;</span>,t.<span class="property">domComplete</span>-t.<span class="property">domLoading</span>+<span class="string">&quot;ms&quot;</span>)),t.<span class="property">loadEventEnd</span>&amp;&amp;t.<span class="property">loadEventStart</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;loadEvent:&quot;</span>,t.<span class="property">loadEventEnd</span>-t.<span class="property">loadEventStart</span>+<span class="string">&quot;ms&quot;</span>),t.<span class="property">navigationStart</span>&amp;&amp;t.<span class="property">loadEventEnd</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;[system]&quot;</span>,<span class="string">&quot;total (DOM):&quot;</span>,t.<span class="property">loadEventEnd</span>-t.<span class="property">navigationStart</span>+<span class="string">&quot;ms (&quot;</span>+(t.<span class="property">domComplete</span>-t.<span class="property">navigationStart</span>)+<span class="string">&quot;ms)&quot;</span>)&#125;&#125;,<span class="number">0</span>)&#125;&#125;])&amp;&amp;<span class="title function_">l</span>(o.<span class="property"><span class="keyword">prototype</span></span>,i),a&amp;&amp;<span class="title function_">l</span>(o,a),t&#125;();o.<span class="property">default</span>=v,e.<span class="property">exports</span>=t.<span class="property">default</span>&#125;)?n.<span class="title function_">apply</span>(t,r):n)||(e.<span class="property">exports</span>=i)&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;div&gt;\n  &lt;div class=&quot;vc-log&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n,r,i;r=[t,<span class="title function_">o</span>(<span class="number">1</span>),<span class="title function_">o</span>(<span class="number">0</span>),<span class="title function_">o</span>(<span class="number">2</span>),<span class="title function_">o</span>(<span class="number">27</span>),<span class="title function_">o</span>(<span class="number">28</span>),<span class="title function_">o</span>(<span class="number">29</span>)],<span class="keyword">void</span> <span class="number">0</span>===(i=<span class="string">&quot;function&quot;</span>==<span class="title function_">typeof</span>(n=<span class="keyword">function</span>(<span class="params">o,n,r,i,a,l,c</span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">s</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;e.<span class="property">__esModule</span>?<span class="attr">e</span>:&#123;<span class="attr">default</span>:e&#125;&#125;<span class="keyword">function</span> <span class="title function_">d</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span>(d=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;<span class="string">&quot;symbol&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>.<span class="property">iterator</span>?<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> <span class="keyword">typeof</span> e&#125;:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;e.<span class="property">constructor</span>===<span class="title class_">Symbol</span>&amp;&amp;e!==<span class="title class_">Symbol</span>.<span class="property"><span class="keyword">prototype</span></span>?<span class="string">&quot;symbol&quot;</span>:<span class="keyword">typeof</span> e&#125;)(e)&#125;<span class="keyword">function</span> <span class="title function_">u</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;t.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=t[o];n.<span class="property">enumerable</span>=n.<span class="property">enumerable</span>||!<span class="number">1</span>,n.<span class="property">configurable</span>=!<span class="number">0</span>,<span class="string">&quot;value&quot;</span><span class="keyword">in</span> n&amp;&amp;(n.<span class="property">writable</span>=!<span class="number">0</span>),<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(e,n.<span class="property">key</span>,n)&#125;&#125;<span class="keyword">function</span> <span class="title function_">v</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span>!t||<span class="string">&quot;object&quot;</span>!==<span class="title function_">d</span>(t)&amp;&amp;<span class="string">&quot;function&quot;</span>!=<span class="keyword">typeof</span> t?<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(<span class="keyword">void</span> <span class="number">0</span>===e)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ReferenceError</span>(<span class="string">&quot;this hasn&#x27;t been initialised - super() hasn&#x27;t been called&quot;</span>);<span class="keyword">return</span> e&#125;(e):t&#125;<span class="keyword">function</span> <span class="title function_">f</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span>(f=<span class="title class_">Object</span>.<span class="property">setPrototypeOf</span>?<span class="title class_">Object</span>.<span class="property">getPrototypeOf</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">__proto__</span>||<span class="title class_">Object</span>.<span class="title function_">getPrototypeOf</span>(e)&#125;)(e)&#125;<span class="keyword">function</span> <span class="title function_">p</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span>(p=<span class="title class_">Object</span>.<span class="property">setPrototypeOf</span>||<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span> e.<span class="property">__proto__</span>=t,e&#125;)(e,t)&#125;<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(o,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),o.<span class="property">default</span>=<span class="keyword">void</span> <span class="number">0</span>,n=<span class="title function_">s</span>(n),r=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(e&amp;&amp;e.<span class="property">__esModule</span>)<span class="keyword">return</span> e;<span class="keyword">var</span> t=&#123;&#125;;<span class="keyword">if</span>(<span class="literal">null</span>!=e)<span class="keyword">for</span>(<span class="keyword">var</span> o <span class="keyword">in</span> e)<span class="keyword">if</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(e,o))&#123;<span class="keyword">var</span> n=<span class="title class_">Object</span>.<span class="property">defineProperty</span>&amp;&amp;<span class="title class_">Object</span>.<span class="property">getOwnPropertyDescriptor</span>?<span class="title class_">Object</span>.<span class="title function_">getOwnPropertyDescriptor</span>(e,o):&#123;&#125;;n.<span class="property">get</span>||n.<span class="property">set</span>?<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(t,o,n):t[o]=e[o]&#125;<span class="keyword">return</span> t.<span class="property">default</span>=e,t&#125;(r),i=<span class="title function_">s</span>(i),a=<span class="title function_">s</span>(a),l=<span class="title function_">s</span>(l),c=<span class="title function_">s</span>(c);<span class="keyword">var</span> b=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">function</span> <span class="title function_">t</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e,o;!<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(!(e <span class="keyword">instanceof</span> t))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Cannot call a class as a function&quot;</span>)&#125;(<span class="variable language_">this</span>,t);<span class="keyword">for</span>(<span class="keyword">var</span> r=<span class="variable language_">arguments</span>.<span class="property">length</span>,i=<span class="keyword">new</span> <span class="title class_">Array</span>(r),l=<span class="number">0</span>;l&lt;r;l++)i[l]=<span class="variable language_">arguments</span>[l];<span class="keyword">return</span>(o=<span class="title function_">v</span>(<span class="variable language_">this</span>,(e=<span class="title function_">f</span>(t)).<span class="property">call</span>.<span class="title function_">apply</span>(e,[<span class="variable language_">this</span>].<span class="title function_">concat</span>(i)))).<span class="property">$tabbox</span>=n.<span class="property">default</span>.<span class="title function_">render</span>(a.<span class="property">default</span>,&#123;&#125;),o.<span class="property">$header</span>=<span class="literal">null</span>,o.<span class="property">reqList</span>=&#123;&#125;,o.<span class="property">domList</span>=&#123;&#125;,o.<span class="property">isReady</span>=!<span class="number">1</span>,o.<span class="property">isShow</span>=!<span class="number">1</span>,o.<span class="property">isInBottom</span>=!<span class="number">0</span>,o.<span class="property">_open</span>=<span class="keyword">void</span> <span class="number">0</span>,o.<span class="property">_send</span>=<span class="keyword">void</span> <span class="number">0</span>,o.<span class="title function_">mockAjax</span>(),o&#125;<span class="keyword">var</span> o,s,d;<span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(<span class="string">&quot;function&quot;</span>!=<span class="keyword">typeof</span> t&amp;&amp;<span class="literal">null</span>!==t)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Super expression must either be null or a function&quot;</span>);e.<span class="property"><span class="keyword">prototype</span></span>=<span class="title class_">Object</span>.<span class="title function_">create</span>(t&amp;&amp;t.<span class="property"><span class="keyword">prototype</span></span>,&#123;<span class="attr">constructor</span>:&#123;<span class="attr">value</span>:e,<span class="attr">writable</span>:!<span class="number">0</span>,<span class="attr">configurable</span>:!<span class="number">0</span>&#125;&#125;),t&amp;&amp;<span class="title function_">p</span>(e,t)&#125;(t,i.<span class="property">default</span>),o=t,(s=[&#123;<span class="attr">key</span>:<span class="string">&quot;onRenderTab&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="title function_">e</span>(<span class="variable language_">this</span>.<span class="property">$tabbox</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onAddTool&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=<span class="variable language_">this</span>;<span class="title function_">e</span>([&#123;<span class="attr">name</span>:<span class="string">&quot;Clear&quot;</span>,<span class="attr">global</span>:!<span class="number">1</span>,<span class="attr">onClick</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;t.<span class="title function_">clearLog</span>()&#125;&#125;])&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onReady&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e=<span class="variable language_">this</span>;e.<span class="property">isReady</span>=!<span class="number">0</span>,<span class="variable language_">this</span>.<span class="title function_">renderHeader</span>(),n.<span class="property">default</span>.<span class="title function_">delegate</span>(n.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-log&quot;</span>,<span class="variable language_">this</span>.<span class="property">$tabbox</span>),<span class="string">&quot;click&quot;</span>,<span class="string">&quot;.vc-group-preview&quot;</span>,<span class="keyword">function</span>(<span class="params">t</span>)&#123;<span class="keyword">var</span> o=<span class="variable language_">this</span>.<span class="property">dataset</span>.<span class="property">reqid</span>,r=<span class="variable language_">this</span>.<span class="property">parentNode</span>;n.<span class="property">default</span>.<span class="title function_">hasClass</span>(r,<span class="string">&quot;vc-actived&quot;</span>)?(n.<span class="property">default</span>.<span class="title function_">removeClass</span>(r,<span class="string">&quot;vc-actived&quot;</span>),e.<span class="title function_">updateRequest</span>(o,&#123;<span class="attr">actived</span>:!<span class="number">1</span>&#125;)):(n.<span class="property">default</span>.<span class="title function_">addClass</span>(r,<span class="string">&quot;vc-actived&quot;</span>),e.<span class="title function_">updateRequest</span>(o,&#123;<span class="attr">actived</span>:!<span class="number">0</span>&#125;)),t.<span class="title function_">preventDefault</span>()&#125;);<span class="keyword">var</span> t=n.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-content&quot;</span>);<span class="keyword">for</span>(<span class="keyword">var</span> o <span class="keyword">in</span> n.<span class="property">default</span>.<span class="title function_">bind</span>(t,<span class="string">&quot;scroll&quot;</span>,<span class="keyword">function</span>(<span class="params">o</span>)&#123;e.<span class="property">isShow</span>&amp;&amp;(t.<span class="property">scrollTop</span>+t.<span class="property">offsetHeight</span>&gt;=t.<span class="property">scrollHeight</span>?e.<span class="property">isInBottom</span>=!<span class="number">0</span>:e.<span class="property">isInBottom</span>=!<span class="number">1</span>)&#125;),e.<span class="property">reqList</span>)e.<span class="title function_">updateRequest</span>(o,&#123;&#125;)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onRemove&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>&amp;&amp;(<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">open</span>=<span class="variable language_">this</span>.<span class="property">_open</span>,<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">send</span>=<span class="variable language_">this</span>.<span class="property">_send</span>,<span class="variable language_">this</span>.<span class="property">_open</span>=<span class="keyword">void</span> <span class="number">0</span>,<span class="variable language_">this</span>.<span class="property">_send</span>=<span class="keyword">void</span> <span class="number">0</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onShow&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">isShow</span>=!<span class="number">0</span>,<span class="number">1</span>==<span class="variable language_">this</span>.<span class="property">isInBottom</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">scrollToBottom</span>()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onHide&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">isShow</span>=!<span class="number">1</span>&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onShowConsole&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="number">1</span>==<span class="variable language_">this</span>.<span class="property">isInBottom</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">scrollToBottom</span>()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;scrollToBottom&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e=n.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-content&quot;</span>);e.<span class="property">scrollTop</span>=e.<span class="property">scrollHeight</span>-e.<span class="property">offsetHeight</span>&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;clearLog&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e <span class="keyword">in</span> <span class="variable language_">this</span>.<span class="property">reqList</span>=&#123;&#125;,<span class="variable language_">this</span>.<span class="property">domList</span>)<span class="variable language_">this</span>.<span class="property">domList</span>[e].<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(<span class="variable language_">this</span>.<span class="property">domList</span>[e]),<span class="variable language_">this</span>.<span class="property">domList</span>[e]=<span class="keyword">void</span> <span class="number">0</span>;<span class="variable language_">this</span>.<span class="property">domList</span>=&#123;&#125;,<span class="variable language_">this</span>.<span class="title function_">renderHeader</span>()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;renderHeader&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e=<span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>.<span class="property">reqList</span>).<span class="property">length</span>,t=n.<span class="property">default</span>.<span class="title function_">render</span>(l.<span class="property">default</span>,&#123;<span class="attr">count</span>:e&#125;),o=n.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-log&quot;</span>,<span class="variable language_">this</span>.<span class="property">$tabbox</span>);<span class="variable language_">this</span>.<span class="property">$header</span>?<span class="variable language_">this</span>.<span class="property">$header</span>.<span class="property">parentNode</span>.<span class="title function_">replaceChild</span>(t,<span class="variable language_">this</span>.<span class="property">$header</span>):o.<span class="property">parentNode</span>.<span class="title function_">insertBefore</span>(t,o),<span class="variable language_">this</span>.<span class="property">$header</span>=t&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;updateRequest&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> o=<span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>.<span class="property">reqList</span>).<span class="property">length</span>,i=<span class="variable language_">this</span>.<span class="property">reqList</span>[e]||&#123;&#125;;<span class="keyword">for</span>(<span class="keyword">var</span> a <span class="keyword">in</span> t)i[a]=t[a];<span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">reqList</span>[e]=i,<span class="variable language_">this</span>.<span class="property">isReady</span>)&#123;<span class="keyword">var</span> l=&#123;<span class="attr">id</span>:e,<span class="attr">url</span>:i.<span class="property">url</span>,<span class="attr">status</span>:i.<span class="property">status</span>,<span class="attr">method</span>:i.<span class="property">method</span>||<span class="string">&quot;-&quot;</span>,<span class="attr">costTime</span>:i.<span class="property">costTime</span>&gt;<span class="number">0</span>?i.<span class="property">costTime</span>+<span class="string">&quot;ms&quot;</span>:<span class="string">&quot;-&quot;</span>,<span class="attr">header</span>:i.<span class="property">header</span>||<span class="literal">null</span>,<span class="attr">getData</span>:i.<span class="property">getData</span>||<span class="literal">null</span>,<span class="attr">postData</span>:i.<span class="property">postData</span>||<span class="literal">null</span>,<span class="attr">response</span>:<span class="literal">null</span>,<span class="attr">actived</span>:!!i.<span class="property">actived</span>&#125;;<span class="keyword">switch</span>(i.<span class="property">responseType</span>)&#123;<span class="keyword">case</span><span class="string">&quot;&quot;</span>:<span class="keyword">case</span><span class="string">&quot;text&quot;</span>:<span class="keyword">if</span>(r.<span class="title function_">isString</span>(i.<span class="property">response</span>))<span class="keyword">try</span>&#123;l.<span class="property">response</span>=<span class="title class_">JSON</span>.<span class="title function_">parse</span>(i.<span class="property">response</span>),l.<span class="property">response</span>=<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(l.<span class="property">response</span>,<span class="literal">null</span>,<span class="number">1</span>),l.<span class="property">response</span>=r.<span class="title function_">htmlEncode</span>(l.<span class="property">response</span>)&#125;<span class="keyword">catch</span>(e)&#123;l.<span class="property">response</span>=r.<span class="title function_">htmlEncode</span>(i.<span class="property">response</span>)&#125;<span class="keyword">else</span> <span class="keyword">void</span> <span class="number">0</span>!==i.<span class="property">response</span>&amp;&amp;(l.<span class="property">response</span>=<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(i.<span class="property">response</span>));<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;json&quot;</span>:<span class="keyword">void</span> <span class="number">0</span>!==i.<span class="property">response</span>&amp;&amp;(l.<span class="property">response</span>=<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(i.<span class="property">response</span>,<span class="literal">null</span>,<span class="number">1</span>),l.<span class="property">response</span>=r.<span class="title function_">htmlEncode</span>(l.<span class="property">response</span>));<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;blob&quot;</span>:<span class="keyword">case</span><span class="string">&quot;document&quot;</span>:<span class="keyword">case</span><span class="string">&quot;arraybuffer&quot;</span>:<span class="attr">default</span>:<span class="keyword">void</span> <span class="number">0</span>!==i.<span class="property">response</span>&amp;&amp;(l.<span class="property">response</span>=<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(i.<span class="property">response</span>))&#125;<span class="number">0</span>==i.<span class="property">readyState</span>||<span class="number">1</span>==i.<span class="property">readyState</span>?l.<span class="property">status</span>=<span class="string">&quot;Pending&quot;</span>:<span class="number">2</span>==i.<span class="property">readyState</span>||<span class="number">3</span>==i.<span class="property">readyState</span>?l.<span class="property">status</span>=<span class="string">&quot;Loading&quot;</span>:<span class="number">4</span>==i.<span class="property">readyState</span>||(l.<span class="property">status</span>=<span class="string">&quot;Unknown&quot;</span>);<span class="keyword">var</span> s=n.<span class="property">default</span>.<span class="title function_">render</span>(c.<span class="property">default</span>,l),d=<span class="variable language_">this</span>.<span class="property">domList</span>[e];i.<span class="property">status</span>&gt;=<span class="number">400</span>&amp;&amp;n.<span class="property">default</span>.<span class="title function_">addClass</span>(n.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-group-preview&quot;</span>,s),<span class="string">&quot;vc-table-row-error&quot;</span>),d?d.<span class="property">parentNode</span>.<span class="title function_">replaceChild</span>(s,d):n.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-log&quot;</span>,<span class="variable language_">this</span>.<span class="property">$tabbox</span>).<span class="title function_">insertAdjacentElement</span>(<span class="string">&quot;beforeend&quot;</span>,s),<span class="variable language_">this</span>.<span class="property">domList</span>[e]=s,<span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>.<span class="property">reqList</span>).<span class="property">length</span>!=o&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">renderHeader</span>(),<span class="variable language_">this</span>.<span class="property">isInBottom</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">scrollToBottom</span>()&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;mockAjax&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>)&#123;<span class="keyword">var</span> e=<span class="variable language_">this</span>,t=<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">open</span>,o=<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">send</span>;e.<span class="property">_open</span>=t,e.<span class="property">_send</span>=o,<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">open</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> o=<span class="variable language_">this</span>,n=[].<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>),r=n[<span class="number">0</span>],i=n[<span class="number">1</span>],a=e.<span class="title function_">getUniqueID</span>(),l=<span class="literal">null</span>;o.<span class="property">_requestID</span>=a,o.<span class="property">_method</span>=r,o.<span class="property">_url</span>=i;<span class="keyword">var</span> c=o.<span class="property">onreadystatechange</span>||<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;,s=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> t=e.<span class="property">reqList</span>[a]||&#123;&#125;;<span class="keyword">if</span>(t.<span class="property">readyState</span>=o.<span class="property">readyState</span>,t.<span class="property">status</span>=<span class="number">0</span>,o.<span class="property">readyState</span>&gt;<span class="number">1</span>&amp;&amp;(t.<span class="property">status</span>=o.<span class="property">status</span>),t.<span class="property">responseType</span>=o.<span class="property">responseType</span>,<span class="number">0</span>==o.<span class="property">readyState</span>)t.<span class="property">startTime</span>||(t.<span class="property">startTime</span>=+<span class="keyword">new</span> <span class="title class_">Date</span>);<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">1</span>==o.<span class="property">readyState</span>)t.<span class="property">startTime</span>||(t.<span class="property">startTime</span>=+<span class="keyword">new</span> <span class="title class_">Date</span>);<span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">2</span>==o.<span class="property">readyState</span>)&#123;t.<span class="property">header</span>=&#123;&#125;;<span class="keyword">for</span>(<span class="keyword">var</span> n=o.<span class="title function_">getAllResponseHeaders</span>()||<span class="string">&quot;&quot;</span>,r=n.<span class="title function_">split</span>(<span class="string">&quot;\n&quot;</span>),i=<span class="number">0</span>;i&lt;r.<span class="property">length</span>;i++)&#123;<span class="keyword">var</span> s=r[i];<span class="keyword">if</span>(s)&#123;<span class="keyword">var</span> d=s.<span class="title function_">split</span>(<span class="string">&quot;: &quot;</span>),u=d[<span class="number">0</span>],v=d.<span class="title function_">slice</span>(<span class="number">1</span>).<span class="title function_">join</span>(<span class="string">&quot;: &quot;</span>);t.<span class="property">header</span>[u]=v&#125;&#125;&#125;<span class="keyword">else</span> <span class="number">3</span>==o.<span class="property">readyState</span>||(<span class="number">4</span>==o.<span class="property">readyState</span>?(<span class="built_in">clearInterval</span>(l),t.<span class="property">endTime</span>=+<span class="keyword">new</span> <span class="title class_">Date</span>,t.<span class="property">costTime</span>=t.<span class="property">endTime</span>-(t.<span class="property">startTime</span>||t.<span class="property">endTime</span>),t.<span class="property">response</span>=o.<span class="property">response</span>):<span class="built_in">clearInterval</span>(l));<span class="keyword">return</span> o.<span class="property">_noVConsole</span>||e.<span class="title function_">updateRequest</span>(a,t),c.<span class="title function_">apply</span>(o,<span class="variable language_">arguments</span>)&#125;;o.<span class="property">onreadystatechange</span>=s;<span class="keyword">var</span> d=-<span class="number">1</span>;<span class="keyword">return</span> l=<span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;d!=o.<span class="property">readyState</span>&amp;&amp;(d=o.<span class="property">readyState</span>,s.<span class="title function_">call</span>(o))&#125;,<span class="number">10</span>),t.<span class="title function_">apply</span>(o,n)&#125;,<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">send</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> t=<span class="variable language_">this</span>,n=[].<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>),i=n[<span class="number">0</span>],a=e.<span class="property">reqList</span>[t.<span class="property">_requestID</span>]||&#123;&#125;;a.<span class="property">method</span>=t.<span class="property">_method</span>.<span class="title function_">toUpperCase</span>();<span class="keyword">var</span> l=t.<span class="property">_url</span>.<span class="title function_">split</span>(<span class="string">&quot;?&quot;</span>);<span class="keyword">if</span>(a.<span class="property">url</span>=l.<span class="title function_">shift</span>(),l.<span class="property">length</span>&gt;<span class="number">0</span>)&#123;a.<span class="property">getData</span>=&#123;&#125;,l=(l=l.<span class="title function_">join</span>(<span class="string">&quot;?&quot;</span>)).<span class="title function_">split</span>(<span class="string">&quot;&amp;&quot;</span>);<span class="keyword">var</span> c=!<span class="number">0</span>,s=!<span class="number">1</span>,d=<span class="keyword">void</span> <span class="number">0</span>;<span class="keyword">try</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> u,v=l[<span class="title class_">Symbol</span>.<span class="property">iterator</span>]();!(c=(u=v.<span class="title function_">next</span>()).<span class="property">done</span>);c=!<span class="number">0</span>)&#123;<span class="keyword">var</span> f=u.<span class="property">value</span>;f=f.<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>),a.<span class="property">getData</span>[f[<span class="number">0</span>]]=<span class="built_in">decodeURIComponent</span>(f[<span class="number">1</span>])&#125;&#125;<span class="keyword">catch</span>(e)&#123;s=!<span class="number">0</span>,d=e&#125;<span class="keyword">finally</span>&#123;<span class="keyword">try</span>&#123;c||<span class="literal">null</span>==v.<span class="property">return</span>||v.<span class="keyword">return</span>()&#125;<span class="keyword">finally</span>&#123;<span class="keyword">if</span>(s)<span class="keyword">throw</span> d&#125;&#125;&#125;<span class="keyword">if</span>(<span class="string">&quot;POST&quot;</span>==a.<span class="property">method</span>)<span class="keyword">if</span>(r.<span class="title function_">isString</span>(i))&#123;<span class="keyword">var</span> p=i.<span class="title function_">split</span>(<span class="string">&quot;&amp;&quot;</span>);a.<span class="property">postData</span>=&#123;&#125;;<span class="keyword">var</span> b=!<span class="number">0</span>,g=!<span class="number">1</span>,h=<span class="keyword">void</span> <span class="number">0</span>;<span class="keyword">try</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> m,y=p[<span class="title class_">Symbol</span>.<span class="property">iterator</span>]();!(b=(m=y.<span class="title function_">next</span>()).<span class="property">done</span>);b=!<span class="number">0</span>)&#123;<span class="keyword">var</span> _=m.<span class="property">value</span>;_=_.<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>),a.<span class="property">postData</span>[_[<span class="number">0</span>]]=_[<span class="number">1</span>]&#125;&#125;<span class="keyword">catch</span>(e)&#123;g=!<span class="number">0</span>,h=e&#125;<span class="keyword">finally</span>&#123;<span class="keyword">try</span>&#123;b||<span class="literal">null</span>==y.<span class="property">return</span>||y.<span class="keyword">return</span>()&#125;<span class="keyword">finally</span>&#123;<span class="keyword">if</span>(g)<span class="keyword">throw</span> h&#125;&#125;&#125;<span class="keyword">else</span> r.<span class="title function_">isPlainObject</span>(i)&amp;&amp;(a.<span class="property">postData</span>=i);<span class="keyword">return</span> t.<span class="property">_noVConsole</span>||e.<span class="title function_">updateRequest</span>(t.<span class="property">_requestID</span>,a),o.<span class="title function_">apply</span>(t,n)&#125;&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;getUniqueID&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span><span class="string">&quot;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/[xy]/g</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=<span class="number">16</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>()|<span class="number">0</span>;<span class="keyword">return</span>(<span class="string">&quot;x&quot;</span>==e?<span class="attr">t</span>:<span class="number">3</span>&amp;t|<span class="number">8</span>).<span class="title function_">toString</span>(<span class="number">16</span>)&#125;)&#125;&#125;])&amp;&amp;<span class="title function_">u</span>(o.<span class="property"><span class="keyword">prototype</span></span>,s),d&amp;&amp;<span class="title function_">u</span>(o,d),t&#125;();o.<span class="property">default</span>=b,e.<span class="property">exports</span>=t.<span class="property">default</span>&#125;)?n.<span class="title function_">apply</span>(t,r):n)||(e.<span class="property">exports</span>=i)&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;div class=&quot;vc-table&quot;&gt;\n  &lt;div class=&quot;vc-log&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;dl class=&quot;vc-table-row&quot;&gt;\n  &lt;dd class=&quot;vc-table-col vc-table-col-4&quot;&gt;Name &#123;&#123;if (count &gt; 0)&#125;&#125;(&#123;&#123;count&#125;&#125;)&#123;&#123;/if&#125;&#125;&lt;/dd&gt;\n  &lt;dd class=&quot;vc-table-col&quot;&gt;Method&lt;/dd&gt;\n  &lt;dd class=&quot;vc-table-col&quot;&gt;Status&lt;/dd&gt;\n  &lt;dd class=&quot;vc-table-col&quot;&gt;Time&lt;/dd&gt;\n&lt;/dl&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;div class=&quot;vc-group &#123;&#123;actived ? \&#x27;vc-actived\&#x27; : \&#x27;\&#x27;&#125;&#125;&quot;&gt;\n  &lt;dl class=&quot;vc-table-row vc-group-preview&quot; data-reqid=&quot;&#123;&#123;id&#125;&#125;&quot;&gt;\n    &lt;dd class=&quot;vc-table-col vc-table-col-4&quot;&gt;&#123;&#123;url&#125;&#125;&lt;/dd&gt;\n    &lt;dd class=&quot;vc-table-col&quot;&gt;&#123;&#123;method&#125;&#125;&lt;/dd&gt;\n    &lt;dd class=&quot;vc-table-col&quot;&gt;&#123;&#123;status&#125;&#125;&lt;/dd&gt;\n    &lt;dd class=&quot;vc-table-col&quot;&gt;&#123;&#123;costTime&#125;&#125;&lt;/dd&gt;\n  &lt;/dl&gt;\n  &lt;div class=&quot;vc-group-detail&quot;&gt;\n    &#123;&#123;if (header !== null)&#125;&#125;\n    &lt;div&gt;\n      &lt;dl class=&quot;vc-table-row vc-left-border&quot;&gt;\n        &lt;dt class=&quot;vc-table-col vc-table-col-title&quot;&gt;Headers&lt;/dt&gt;\n      &lt;/dl&gt;\n      &#123;&#123;for (var key in header)&#125;&#125;\n      &lt;div class=&quot;vc-table-row vc-left-border vc-small&quot;&gt;\n        &lt;div class=&quot;vc-table-col vc-table-col-2&quot;&gt;&#123;&#123;key&#125;&#125;&lt;/div&gt;\n        &lt;div class=&quot;vc-table-col vc-table-col-4 vc-max-height-line&quot;&gt;&#123;&#123;header[key]&#125;&#125;&lt;/div&gt;\n      &lt;/div&gt;\n      &#123;&#123;/for&#125;&#125;\n    &lt;/div&gt;\n    &#123;&#123;/if&#125;&#125;\n    &#123;&#123;if (getData !== null)&#125;&#125;\n    &lt;div&gt;\n      &lt;dl class=&quot;vc-table-row vc-left-border&quot;&gt;\n        &lt;dt class=&quot;vc-table-col vc-table-col-title&quot;&gt;Query String Parameters&lt;/dt&gt;\n      &lt;/dl&gt;\n      &#123;&#123;for (var key in getData)&#125;&#125;\n      &lt;div class=&quot;vc-table-row vc-left-border vc-small&quot;&gt;\n        &lt;div class=&quot;vc-table-col vc-table-col-2&quot;&gt;&#123;&#123;key&#125;&#125;&lt;/div&gt;\n        &lt;div class=&quot;vc-table-col vc-table-col-4 vc-max-height-line&quot;&gt;&#123;&#123;getData[key]&#125;&#125;&lt;/div&gt;\n      &lt;/div&gt;\n      &#123;&#123;/for&#125;&#125;\n    &lt;/div&gt;\n    &#123;&#123;/if&#125;&#125;\n    &#123;&#123;if (postData !== null)&#125;&#125;\n    &lt;div&gt;\n      &lt;dl class=&quot;vc-table-row vc-left-border&quot;&gt;\n        &lt;dt class=&quot;vc-table-col vc-table-col-title&quot;&gt;Form Data&lt;/dt&gt;\n      &lt;/dl&gt;\n      &#123;&#123;for (var key in postData)&#125;&#125;\n      &lt;div class=&quot;vc-table-row vc-left-border vc-small&quot;&gt;\n        &lt;div class=&quot;vc-table-col vc-table-col-2&quot;&gt;&#123;&#123;key&#125;&#125;&lt;/div&gt;\n        &lt;div class=&quot;vc-table-col vc-table-col-4 vc-max-height-line&quot;&gt;&#123;&#123;postData[key]&#125;&#125;&lt;/div&gt;\n      &lt;/div&gt;\n      &#123;&#123;/for&#125;&#125;\n    &lt;/div&gt;\n    &#123;&#123;/if&#125;&#125;\n    &lt;div&gt;\n      &lt;dl class=&quot;vc-table-row vc-left-border&quot;&gt;\n        &lt;dt class=&quot;vc-table-col vc-table-col-title&quot;&gt;Response&lt;/dt&gt;\n      &lt;/dl&gt;\n      &lt;div class=&quot;vc-table-row vc-left-border vc-small&quot;&gt;\n        &lt;pre class=&quot;vc-table-col vc-max-height vc-min-height&quot;&gt;&#123;&#123;response || \&#x27;\&#x27;&#125;&#125;&lt;/pre&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n,r,i;r=[t,<span class="title function_">o</span>(<span class="number">31</span>),<span class="title function_">o</span>(<span class="number">2</span>),<span class="title function_">o</span>(<span class="number">33</span>),<span class="title function_">o</span>(<span class="number">34</span>),<span class="title function_">o</span>(<span class="number">0</span>),<span class="title function_">o</span>(<span class="number">1</span>)],<span class="keyword">void</span> <span class="number">0</span>===(i=<span class="string">&quot;function&quot;</span>==<span class="title function_">typeof</span>(n=<span class="keyword">function</span>(<span class="params">o,n,r,i,a,l,c</span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">s</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;e.<span class="property">__esModule</span>?<span class="attr">e</span>:&#123;<span class="attr">default</span>:e&#125;&#125;<span class="keyword">function</span> <span class="title function_">d</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span>(d=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;<span class="string">&quot;symbol&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>.<span class="property">iterator</span>?<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> <span class="keyword">typeof</span> e&#125;:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;e.<span class="property">constructor</span>===<span class="title class_">Symbol</span>&amp;&amp;e!==<span class="title class_">Symbol</span>.<span class="property"><span class="keyword">prototype</span></span>?<span class="string">&quot;symbol&quot;</span>:<span class="keyword">typeof</span> e&#125;)(e)&#125;<span class="keyword">function</span> <span class="title function_">u</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;t.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=t[o];n.<span class="property">enumerable</span>=n.<span class="property">enumerable</span>||!<span class="number">1</span>,n.<span class="property">configurable</span>=!<span class="number">0</span>,<span class="string">&quot;value&quot;</span><span class="keyword">in</span> n&amp;&amp;(n.<span class="property">writable</span>=!<span class="number">0</span>),<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(e,n.<span class="property">key</span>,n)&#125;&#125;<span class="keyword">function</span> <span class="title function_">v</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span>(v=<span class="title class_">Object</span>.<span class="property">setPrototypeOf</span>?<span class="title class_">Object</span>.<span class="property">getPrototypeOf</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">__proto__</span>||<span class="title class_">Object</span>.<span class="title function_">getPrototypeOf</span>(e)&#125;)(e)&#125;<span class="keyword">function</span> <span class="title function_">f</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(<span class="keyword">void</span> <span class="number">0</span>===e)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ReferenceError</span>(<span class="string">&quot;this hasn&#x27;t been initialised - super() hasn&#x27;t been called&quot;</span>);<span class="keyword">return</span> e&#125;<span class="keyword">function</span> <span class="title function_">p</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span>(p=<span class="title class_">Object</span>.<span class="property">setPrototypeOf</span>||<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span> e.<span class="property">__proto__</span>=t,e&#125;)(e,t)&#125;<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(o,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),o.<span class="property">default</span>=<span class="keyword">void</span> <span class="number">0</span>,r=<span class="title function_">s</span>(r),i=<span class="title function_">s</span>(i),a=<span class="title function_">s</span>(a),l=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(e&amp;&amp;e.<span class="property">__esModule</span>)<span class="keyword">return</span> e;<span class="keyword">var</span> t=&#123;&#125;;<span class="keyword">if</span>(<span class="literal">null</span>!=e)<span class="keyword">for</span>(<span class="keyword">var</span> o <span class="keyword">in</span> e)<span class="keyword">if</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(e,o))&#123;<span class="keyword">var</span> n=<span class="title class_">Object</span>.<span class="property">defineProperty</span>&amp;&amp;<span class="title class_">Object</span>.<span class="property">getOwnPropertyDescriptor</span>?<span class="title class_">Object</span>.<span class="title function_">getOwnPropertyDescriptor</span>(e,o):&#123;&#125;;n.<span class="property">get</span>||n.<span class="property">set</span>?<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(t,o,n):t[o]=e[o]&#125;<span class="keyword">return</span> t.<span class="property">default</span>=e,t&#125;(l),c=<span class="title function_">s</span>(c);<span class="keyword">var</span> b=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">function</span> <span class="title function_">t</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e,o,n,r;!<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(!(e <span class="keyword">instanceof</span> t))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Cannot call a class as a function&quot;</span>)&#125;(<span class="variable language_">this</span>,t);<span class="keyword">for</span>(<span class="keyword">var</span> a=<span class="variable language_">arguments</span>.<span class="property">length</span>,l=<span class="keyword">new</span> <span class="title class_">Array</span>(a),s=<span class="number">0</span>;s&lt;a;s++)l[s]=<span class="variable language_">arguments</span>[s];n=<span class="variable language_">this</span>,o=!(r=(e=<span class="title function_">v</span>(t)).<span class="property">call</span>.<span class="title function_">apply</span>(e,[<span class="variable language_">this</span>].<span class="title function_">concat</span>(l)))||<span class="string">&quot;object&quot;</span>!==<span class="title function_">d</span>(r)&amp;&amp;<span class="string">&quot;function&quot;</span>!=<span class="keyword">typeof</span> r?<span class="title function_">f</span>(n):r;<span class="keyword">var</span> u=<span class="title function_">f</span>(o);u.<span class="property">isInited</span>=!<span class="number">1</span>,u.<span class="property">node</span>=&#123;&#125;,u.<span class="property">$tabbox</span>=c.<span class="property">default</span>.<span class="title function_">render</span>(i.<span class="property">default</span>,&#123;&#125;),u.<span class="property">nodes</span>=[],u.<span class="property">activedElem</span>=&#123;&#125;;<span class="keyword">var</span> p=<span class="variable language_">window</span>.<span class="property">MutationObserver</span>||<span class="variable language_">window</span>.<span class="property">WebKitMutationObserver</span>||<span class="variable language_">window</span>.<span class="property">MozMutationObserver</span>;<span class="keyword">return</span> u.<span class="property">observer</span>=<span class="keyword">new</span> <span class="title function_">p</span>(<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.<span class="property">length</span>;t++)&#123;<span class="keyword">var</span> o=e[t];u.<span class="title function_">_isInVConsole</span>(o.<span class="property">target</span>)||u.<span class="title function_">onMutation</span>(o)&#125;&#125;),o&#125;<span class="keyword">var</span> o,n,l;<span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(<span class="string">&quot;function&quot;</span>!=<span class="keyword">typeof</span> t&amp;&amp;<span class="literal">null</span>!==t)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Super expression must either be null or a function&quot;</span>);e.<span class="property"><span class="keyword">prototype</span></span>=<span class="title class_">Object</span>.<span class="title function_">create</span>(t&amp;&amp;t.<span class="property"><span class="keyword">prototype</span></span>,&#123;<span class="attr">constructor</span>:&#123;<span class="attr">value</span>:e,<span class="attr">writable</span>:!<span class="number">0</span>,<span class="attr">configurable</span>:!<span class="number">0</span>&#125;&#125;),t&amp;&amp;<span class="title function_">p</span>(e,t)&#125;(t,r.<span class="property">default</span>),o=t,(n=[&#123;<span class="attr">key</span>:<span class="string">&quot;onRenderTab&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="title function_">e</span>(<span class="variable language_">this</span>.<span class="property">$tabbox</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onAddTool&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=<span class="variable language_">this</span>;<span class="title function_">e</span>([&#123;<span class="attr">name</span>:<span class="string">&quot;Expand&quot;</span>,<span class="attr">global</span>:!<span class="number">1</span>,<span class="attr">onClick</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(t.<span class="property">activedElem</span>)<span class="keyword">if</span>(c.<span class="property">default</span>.<span class="title function_">hasClass</span>(t.<span class="property">activedElem</span>,<span class="string">&quot;vc-toggle&quot;</span>))<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;t.<span class="property">activedElem</span>.<span class="property">childNodes</span>.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=t.<span class="property">activedElem</span>.<span class="property">childNodes</span>[o];<span class="keyword">if</span>(c.<span class="property">default</span>.<span class="title function_">hasClass</span>(n,<span class="string">&quot;vcelm-l&quot;</span>)&amp;&amp;!c.<span class="property">default</span>.<span class="title function_">hasClass</span>(n,<span class="string">&quot;vcelm-noc&quot;</span>)&amp;&amp;!c.<span class="property">default</span>.<span class="title function_">hasClass</span>(n,<span class="string">&quot;vc-toggle&quot;</span>))&#123;c.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vcelm-node&quot;</span>,n).<span class="title function_">click</span>();<span class="keyword">break</span>&#125;&#125;<span class="keyword">else</span> c.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vcelm-node&quot;</span>,t.<span class="property">activedElem</span>).<span class="title function_">click</span>()&#125;&#125;,&#123;<span class="attr">name</span>:<span class="string">&quot;Collapse&quot;</span>,<span class="attr">global</span>:!<span class="number">1</span>,<span class="attr">onClick</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;t.<span class="property">activedElem</span>&amp;&amp;(c.<span class="property">default</span>.<span class="title function_">hasClass</span>(t.<span class="property">activedElem</span>,<span class="string">&quot;vc-toggle&quot;</span>)?c.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vcelm-node&quot;</span>,t.<span class="property">activedElem</span>).<span class="title function_">click</span>():t.<span class="property">activedElem</span>.<span class="property">parentNode</span>&amp;&amp;c.<span class="property">default</span>.<span class="title function_">hasClass</span>(t.<span class="property">activedElem</span>.<span class="property">parentNode</span>,<span class="string">&quot;vcelm-l&quot;</span>)&amp;&amp;c.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vcelm-node&quot;</span>,t.<span class="property">activedElem</span>.<span class="property">parentNode</span>).<span class="title function_">click</span>())&#125;&#125;])&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onShow&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="property">isInited</span>)&#123;<span class="variable language_">this</span>.<span class="property">isInited</span>=!<span class="number">0</span>,<span class="variable language_">this</span>.<span class="property">node</span>=<span class="variable language_">this</span>.<span class="title function_">getNode</span>(<span class="variable language_">document</span>.<span class="property">documentElement</span>);<span class="keyword">var</span> e=<span class="variable language_">this</span>.<span class="title function_">renderView</span>(<span class="variable language_">this</span>.<span class="property">node</span>,c.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-log&quot;</span>,<span class="variable language_">this</span>.<span class="property">$tabbox</span>)),t=c.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vcelm-node&quot;</span>,e);t&amp;&amp;t.<span class="title function_">click</span>(),<span class="variable language_">this</span>.<span class="property">observer</span>.<span class="title function_">observe</span>(<span class="variable language_">document</span>.<span class="property">documentElement</span>,&#123;<span class="attr">attributes</span>:!<span class="number">0</span>,<span class="attr">childList</span>:!<span class="number">0</span>,<span class="attr">characterData</span>:!<span class="number">0</span>,<span class="attr">subtree</span>:!<span class="number">0</span>&#125;)&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onRemove&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">observer</span>.<span class="title function_">disconnect</span>()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onMutation&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">switch</span>(e.<span class="property">type</span>)&#123;<span class="keyword">case</span><span class="string">&quot;childList&quot;</span>:e.<span class="property">removedNodes</span>.<span class="property">length</span>&gt;<span class="number">0</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">onChildRemove</span>(e),e.<span class="property">addedNodes</span>.<span class="property">length</span>&gt;<span class="number">0</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">onChildAdd</span>(e);<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;attributes&quot;</span>:<span class="variable language_">this</span>.<span class="title function_">onAttributesChange</span>(e);<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;characterData&quot;</span>:<span class="variable language_">this</span>.<span class="title function_">onCharacterDataChange</span>(e)&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onChildRemove&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=e.<span class="property">target</span>;<span class="keyword">if</span>(t.<span class="property">__vconsole_node</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;e.<span class="property">removedNodes</span>.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=e.<span class="property">removedNodes</span>[o].<span class="property">__vconsole_node</span>;n&amp;&amp;n.<span class="property">view</span>&amp;&amp;n.<span class="property">view</span>.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(n.<span class="property">view</span>)&#125;<span class="variable language_">this</span>.<span class="title function_">getNode</span>(t)&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onChildAdd&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=e.<span class="property">target</span>,o=t.<span class="property">__vconsole_node</span>;<span class="keyword">if</span>(o)&#123;<span class="variable language_">this</span>.<span class="title function_">getNode</span>(t),o.<span class="property">view</span>&amp;&amp;c.<span class="property">default</span>.<span class="title function_">removeClass</span>(o.<span class="property">view</span>,<span class="string">&quot;vcelm-noc&quot;</span>);<span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="number">0</span>;n&lt;e.<span class="property">addedNodes</span>.<span class="property">length</span>;n++)&#123;<span class="keyword">var</span> r=e.<span class="property">addedNodes</span>[n].<span class="property">__vconsole_node</span>;<span class="keyword">if</span>(r)<span class="keyword">if</span>(<span class="literal">null</span>!==e.<span class="property">nextSibling</span>)&#123;<span class="keyword">var</span> i=e.<span class="property">nextSibling</span>.<span class="property">__vconsole_node</span>;i.<span class="property">view</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">renderView</span>(r,i.<span class="property">view</span>,<span class="string">&quot;insertBefore&quot;</span>)&#125;<span class="keyword">else</span> o.<span class="property">view</span>&amp;&amp;(o.<span class="property">view</span>.<span class="property">lastChild</span>?<span class="variable language_">this</span>.<span class="title function_">renderView</span>(r,o.<span class="property">view</span>.<span class="property">lastChild</span>,<span class="string">&quot;insertBefore&quot;</span>):<span class="variable language_">this</span>.<span class="title function_">renderView</span>(r,o.<span class="property">view</span>))&#125;&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onAttributesChange&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=e.<span class="property">target</span>.<span class="property">__vconsole_node</span>;t&amp;&amp;(t=<span class="variable language_">this</span>.<span class="title function_">getNode</span>(e.<span class="property">target</span>)).<span class="property">view</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">renderView</span>(t,t.<span class="property">view</span>,!<span class="number">0</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onCharacterDataChange&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=e.<span class="property">target</span>.<span class="property">__vconsole_node</span>;t&amp;&amp;(t=<span class="variable language_">this</span>.<span class="title function_">getNode</span>(e.<span class="property">target</span>)).<span class="property">view</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">renderView</span>(t,t.<span class="property">view</span>,!<span class="number">0</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;renderView&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n=<span class="variable language_">this</span>,r=<span class="keyword">new</span> a.<span class="title function_">default</span>(e).<span class="title function_">get</span>();<span class="keyword">switch</span>(e.<span class="property">view</span>=r,c.<span class="property">default</span>.<span class="title function_">delegate</span>(r,<span class="string">&quot;click&quot;</span>,<span class="string">&quot;.vcelm-node&quot;</span>,<span class="keyword">function</span>(<span class="params">t</span>)&#123;t.<span class="title function_">stopPropagation</span>();<span class="keyword">var</span> o=<span class="variable language_">this</span>.<span class="property">parentNode</span>;<span class="keyword">if</span>(!c.<span class="property">default</span>.<span class="title function_">hasClass</span>(o,<span class="string">&quot;vcelm-noc&quot;</span>))&#123;n.<span class="property">activedElem</span>=o,c.<span class="property">default</span>.<span class="title function_">hasClass</span>(o,<span class="string">&quot;vc-toggle&quot;</span>)?c.<span class="property">default</span>.<span class="title function_">removeClass</span>(o,<span class="string">&quot;vc-toggle&quot;</span>):c.<span class="property">default</span>.<span class="title function_">addClass</span>(o,<span class="string">&quot;vc-toggle&quot;</span>);<span class="keyword">for</span>(<span class="keyword">var</span> r=-<span class="number">1</span>,i=<span class="number">0</span>;i&lt;o.<span class="property">children</span>.<span class="property">length</span>;i++)&#123;<span class="keyword">var</span> a=o.<span class="property">children</span>[i];c.<span class="property">default</span>.<span class="title function_">hasClass</span>(a,<span class="string">&quot;vcelm-l&quot;</span>)&amp;&amp;(r++,a.<span class="property">children</span>.<span class="property">length</span>&gt;<span class="number">0</span>||(e.<span class="property">childNodes</span>[r]?n.<span class="title function_">renderView</span>(e.<span class="property">childNodes</span>[r],a,<span class="string">&quot;replace&quot;</span>):a.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span>))&#125;&#125;&#125;),o)&#123;<span class="keyword">case</span><span class="string">&quot;replace&quot;</span>:t.<span class="property">parentNode</span>.<span class="title function_">replaceChild</span>(r,t);<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;insertBefore&quot;</span>:t.<span class="property">parentNode</span>.<span class="title function_">insertBefore</span>(r,t);<span class="keyword">break</span>;<span class="attr">default</span>:t.<span class="title function_">appendChild</span>(r)&#125;<span class="keyword">return</span> r&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;getNode&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="title function_">_isIgnoredElement</span>(e))&#123;<span class="keyword">var</span> t=e.<span class="property">__vconsole_node</span>||&#123;&#125;;<span class="keyword">if</span>(t.<span class="property">nodeType</span>=e.<span class="property">nodeType</span>,t.<span class="property">nodeName</span>=e.<span class="property">nodeName</span>,t.<span class="property">tagName</span>=e.<span class="property">tagName</span>||<span class="string">&quot;&quot;</span>,t.<span class="property">textContent</span>=<span class="string">&quot;&quot;</span>,t.<span class="property">nodeType</span>!=e.<span class="property">TEXT_NODE</span>&amp;&amp;t.<span class="property">nodeType</span>!=e.<span class="property">DOCUMENT_TYPE_NODE</span>||(t.<span class="property">textContent</span>=e.<span class="property">textContent</span>),t.<span class="property">id</span>=e.<span class="property">id</span>||<span class="string">&quot;&quot;</span>,t.<span class="property">className</span>=e.<span class="property">className</span>||<span class="string">&quot;&quot;</span>,t.<span class="property">attributes</span>=[],e.<span class="property">hasAttributes</span>&amp;&amp;e.<span class="title function_">hasAttributes</span>())<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;e.<span class="property">attributes</span>.<span class="property">length</span>;o++)t.<span class="property">attributes</span>.<span class="title function_">push</span>(&#123;<span class="attr">name</span>:e.<span class="property">attributes</span>[o].<span class="property">name</span>,<span class="attr">value</span>:e.<span class="property">attributes</span>[o].<span class="property">value</span>||<span class="string">&quot;&quot;</span>&#125;);<span class="keyword">if</span>(t.<span class="property">childNodes</span>=[],e.<span class="property">childNodes</span>.<span class="property">length</span>&gt;<span class="number">0</span>)<span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="number">0</span>;n&lt;e.<span class="property">childNodes</span>.<span class="property">length</span>;n++)&#123;<span class="keyword">var</span> r=<span class="variable language_">this</span>.<span class="title function_">getNode</span>(e.<span class="property">childNodes</span>[n]);r&amp;&amp;t.<span class="property">childNodes</span>.<span class="title function_">push</span>(r)&#125;<span class="keyword">return</span> e.<span class="property">__vconsole_node</span>=t,t&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;_isIgnoredElement&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">nodeType</span>==e.<span class="property">TEXT_NODE</span>&amp;&amp;<span class="string">&quot;&quot;</span>==e.<span class="property">textContent</span>.<span class="title function_">replace</span>(<span class="regexp">/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$|\n+/g</span>,<span class="string">&quot;&quot;</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;_isInVConsole&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=e;<span class="literal">null</span>!=t;)&#123;<span class="keyword">if</span>(<span class="string">&quot;__vconsole&quot;</span>==t.<span class="property">id</span>)<span class="keyword">return</span>!<span class="number">0</span>;t=t.<span class="property">parentNode</span>||<span class="keyword">void</span> <span class="number">0</span>&#125;<span class="keyword">return</span>!<span class="number">1</span>&#125;&#125;])&amp;&amp;<span class="title function_">u</span>(o.<span class="property"><span class="keyword">prototype</span></span>,n),l&amp;&amp;<span class="title function_">u</span>(o,l),t&#125;();o.<span class="property">default</span>=b,e.<span class="property">exports</span>=t.<span class="property">default</span>&#125;)?n.<span class="title function_">apply</span>(t,r):n)||(e.<span class="property">exports</span>=i)&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n=<span class="title function_">o</span>(<span class="number">32</span>);<span class="string">&quot;string&quot;</span>==<span class="keyword">typeof</span> n&amp;&amp;(n=[[e.<span class="property">i</span>,n,<span class="string">&quot;&quot;</span>]]);<span class="keyword">var</span> r=&#123;<span class="attr">insert</span>:<span class="string">&quot;head&quot;</span>,<span class="attr">singleton</span>:!<span class="number">1</span>&#125;;<span class="title function_">o</span>(<span class="number">5</span>)(n,r);n.<span class="property">locals</span>&amp;&amp;(e.<span class="property">exports</span>=n.<span class="property">locals</span>)&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;(e.<span class="property">exports</span>=<span class="title function_">o</span>(<span class="number">4</span>)(!<span class="number">1</span>)).<span class="title function_">push</span>([e.<span class="property">i</span>,<span class="string">&#x27;/* color */\n.vcelm-node &#123;\n  color: #183691;\n&#125;\n.vcelm-k &#123;\n  color: #0086B3;\n&#125;\n.vcelm-v &#123;\n  color: #905;\n&#125;\n/* layout */\n.vcelm-l &#123;\n  padding-left: 8px;\n  position: relative;\n  word-wrap: break-word;\n  line-height: 1;\n&#125;\n/*.vcelm-l.vcelm-noc &#123;\n  padding-left: 0;\n&#125;*/\n.vcelm-l.vc-toggle &gt; .vcelm-node &#123;\n  display: block;\n&#125;\n.vcelm-l .vcelm-node:active &#123;\n  background-color: rgba(0, 0, 0, 0.15);\n&#125;\n.vcelm-l.vcelm-noc .vcelm-node:active &#123;\n  background-color: transparent;\n&#125;\n.vcelm-t &#123;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n&#125;\n/* level */\n.vcelm-l .vcelm-l &#123;\n  display: none;\n&#125;\n.vcelm-l.vc-toggle &gt; .vcelm-l &#123;\n  margin-left: 4px;\n  display: block;\n&#125;\n/* arrow */\n.vcelm-l:before &#123;\n  content: &quot;&quot;;\n  display: block;\n  position: absolute;\n  top: 6px;\n  left: 3px;\n  width: 0;\n  height: 0;\n  border: transparent solid 3px;\n  border-left-color: #000;\n&#125;\n.vcelm-l.vc-toggle:before &#123;\n  display: block;\n  top: 6px;\n  left: 0;\n  border-top-color: #000;\n  border-left-color: transparent;\n&#125;\n.vcelm-l.vcelm-noc:before &#123;\n  display: none;\n&#125;\n&#x27;</span>,<span class="string">&quot;&quot;</span>])&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;div&gt;\n  &lt;div class=&quot;vc-log&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n,r,i;r=[t,<span class="title function_">o</span>(<span class="number">35</span>),<span class="title function_">o</span>(<span class="number">36</span>),<span class="title function_">o</span>(<span class="number">0</span>),<span class="title function_">o</span>(<span class="number">1</span>)],<span class="keyword">void</span> <span class="number">0</span>===(i=<span class="string">&quot;function&quot;</span>==<span class="title function_">typeof</span>(n=<span class="keyword">function</span>(<span class="params">o,n,r,i,a</span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">l</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;e.<span class="property">__esModule</span>?<span class="attr">e</span>:&#123;<span class="attr">default</span>:e&#125;&#125;<span class="keyword">function</span> <span class="title function_">c</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;t.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=t[o];n.<span class="property">enumerable</span>=n.<span class="property">enumerable</span>||!<span class="number">1</span>,n.<span class="property">configurable</span>=!<span class="number">0</span>,<span class="string">&quot;value&quot;</span><span class="keyword">in</span> n&amp;&amp;(n.<span class="property">writable</span>=!<span class="number">0</span>),<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(e,n.<span class="property">key</span>,n)&#125;&#125;<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(o,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),o.<span class="property">default</span>=<span class="keyword">void</span> <span class="number">0</span>,n=<span class="title function_">l</span>(n),r=<span class="title function_">l</span>(r),i=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(e&amp;&amp;e.<span class="property">__esModule</span>)<span class="keyword">return</span> e;<span class="keyword">var</span> t=&#123;&#125;;<span class="keyword">if</span>(<span class="literal">null</span>!=e)<span class="keyword">for</span>(<span class="keyword">var</span> o <span class="keyword">in</span> e)<span class="keyword">if</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(e,o))&#123;<span class="keyword">var</span> n=<span class="title class_">Object</span>.<span class="property">defineProperty</span>&amp;&amp;<span class="title class_">Object</span>.<span class="property">getOwnPropertyDescriptor</span>?<span class="title class_">Object</span>.<span class="title function_">getOwnPropertyDescriptor</span>(e,o):&#123;&#125;;n.<span class="property">get</span>||n.<span class="property">set</span>?<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(t,o,n):t[o]=e[o]&#125;<span class="keyword">return</span> t.<span class="property">default</span>=e,t&#125;(i),a=<span class="title function_">l</span>(a);<span class="keyword">var</span> s=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">function</span> <span class="title function_">e</span>(<span class="params">t</span>)&#123;!<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(!(e <span class="keyword">instanceof</span> t))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Cannot call a class as a function&quot;</span>)&#125;(<span class="variable language_">this</span>,e),<span class="variable language_">this</span>.<span class="property">node</span>=t,<span class="variable language_">this</span>.<span class="property">view</span>=<span class="variable language_">this</span>.<span class="title function_">_create</span>(<span class="variable language_">this</span>.<span class="property">node</span>)&#125;<span class="keyword">var</span> t,o,i;<span class="keyword">return</span> t=e,(o=[&#123;<span class="attr">key</span>:<span class="string">&quot;get&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">view</span>&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;_create&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> o=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;DIV&quot;</span>);<span class="keyword">switch</span>(a.<span class="property">default</span>.<span class="title function_">addClass</span>(o,<span class="string">&quot;vcelm-l&quot;</span>),e.<span class="property">nodeType</span>)&#123;<span class="keyword">case</span> o.<span class="property">ELEMENT_NODE</span>:<span class="variable language_">this</span>.<span class="title function_">_createElementNode</span>(e,o);<span class="keyword">break</span>;<span class="keyword">case</span> o.<span class="property">TEXT_NODE</span>:<span class="variable language_">this</span>.<span class="title function_">_createTextNode</span>(e,o);<span class="keyword">break</span>;<span class="keyword">case</span> o.<span class="property">COMMENT_NODE</span>:<span class="keyword">case</span> o.<span class="property">DOCUMENT_NODE</span>:<span class="keyword">case</span> o.<span class="property">DOCUMENT_TYPE_NODE</span>:<span class="keyword">case</span> o.<span class="property">DOCUMENT_FRAGMENT_NODE</span>:&#125;<span class="keyword">return</span> o&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;_createTextNode&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;a.<span class="property">default</span>.<span class="title function_">addClass</span>(t,<span class="string">&quot;vcelm-t vcelm-noc&quot;</span>),e.<span class="property">textContent</span>&amp;&amp;t.<span class="title function_">appendChild</span>(<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> <span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(e)&#125;(e.<span class="property">textContent</span>.<span class="title function_">replace</span>(<span class="regexp">/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g</span>,<span class="string">&quot;&quot;</span>)))&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;_createElementNode&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> o,i=(o=(o=e.<span class="property">tagName</span>)?o.<span class="title function_">toLowerCase</span>():<span class="string">&quot;&quot;</span>,[<span class="string">&quot;br&quot;</span>,<span class="string">&quot;hr&quot;</span>,<span class="string">&quot;img&quot;</span>,<span class="string">&quot;input&quot;</span>,<span class="string">&quot;link&quot;</span>,<span class="string">&quot;meta&quot;</span>].<span class="title function_">indexOf</span>(o)&gt;-<span class="number">1</span>),l=i;<span class="number">0</span>==e.<span class="property">childNodes</span>.<span class="property">length</span>&amp;&amp;(l=!<span class="number">0</span>);<span class="keyword">var</span> c=a.<span class="property">default</span>.<span class="title function_">render</span>(n.<span class="property">default</span>,&#123;<span class="attr">node</span>:e&#125;),s=a.<span class="property">default</span>.<span class="title function_">render</span>(r.<span class="property">default</span>,&#123;<span class="attr">node</span>:e&#125;);<span class="keyword">if</span>(l)a.<span class="property">default</span>.<span class="title function_">addClass</span>(t,<span class="string">&quot;vcelm-noc&quot;</span>),t.<span class="title function_">appendChild</span>(c),i||t.<span class="title function_">appendChild</span>(s);<span class="keyword">else</span>&#123;t.<span class="title function_">appendChild</span>(c);<span class="keyword">for</span>(<span class="keyword">var</span> d=<span class="number">0</span>;d&lt;e.<span class="property">childNodes</span>.<span class="property">length</span>;d++)&#123;<span class="keyword">var</span> u=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;DIV&quot;</span>);a.<span class="property">default</span>.<span class="title function_">addClass</span>(u,<span class="string">&quot;vcelm-l&quot;</span>),t.<span class="title function_">appendChild</span>(u)&#125;i||t.<span class="title function_">appendChild</span>(s)&#125;&#125;&#125;])&amp;&amp;<span class="title function_">c</span>(t.<span class="property"><span class="keyword">prototype</span></span>,o),i&amp;&amp;<span class="title function_">c</span>(t,i),e&#125;();o.<span class="property">default</span>=s,e.<span class="property">exports</span>=t.<span class="property">default</span>&#125;)?n.<span class="title function_">apply</span>(t,r):n)||(e.<span class="property">exports</span>=i)&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;span class=&quot;vcelm-node&quot;&gt;&amp;lt;&#123;&#123;node.tagName.toLowerCase()&#125;&#125;&#123;&#123;if (node.className || node.attributes.length)&#125;&#125;\n  &lt;i class=&quot;vcelm-k&quot;&gt;\n    &#123;&#123;for (var i = 0; i &lt; node.attributes.length; i++)&#125;&#125;\n      &#123;&#123;if (node.attributes[i].value !== \&#x27;\&#x27;)&#125;&#125;\n        &#123;&#123;node.attributes[i].name&#125;&#125;=&quot;&lt;i class=&quot;vcelm-v&quot;&gt;&#123;&#123;node.attributes[i].value&#125;&#125;&lt;/i&gt;&quot;&#123;&#123;else&#125;&#125;\n        &#123;&#123;node.attributes[i].name&#125;&#125;&#123;&#123;/if&#125;&#125;&#123;&#123;/for&#125;&#125;&lt;/i&gt;&#123;&#123;/if&#125;&#125;&amp;gt;&lt;/span&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;span class=&quot;vcelm-node&quot;&gt;&amp;lt;/&#123;&#123;node.tagName.toLowerCase()&#125;&#125;&amp;gt;&lt;/span&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t,o</span>)&#123;<span class="keyword">var</span> n,r,i;r=[t,<span class="title function_">o</span>(<span class="number">2</span>),<span class="title function_">o</span>(<span class="number">38</span>),<span class="title function_">o</span>(<span class="number">39</span>),<span class="title function_">o</span>(<span class="number">0</span>),<span class="title function_">o</span>(<span class="number">1</span>)],<span class="keyword">void</span> <span class="number">0</span>===(i=<span class="string">&quot;function&quot;</span>==<span class="title function_">typeof</span>(n=<span class="keyword">function</span>(<span class="params">o,n,r,i,a,l</span>)&#123;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">c</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;e.<span class="property">__esModule</span>?<span class="attr">e</span>:&#123;<span class="attr">default</span>:e&#125;&#125;<span class="keyword">function</span> <span class="title function_">s</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span>(s=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;<span class="string">&quot;symbol&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>.<span class="property">iterator</span>?<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> <span class="keyword">typeof</span> e&#125;:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e&amp;&amp;<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> <span class="title class_">Symbol</span>&amp;&amp;e.<span class="property">constructor</span>===<span class="title class_">Symbol</span>&amp;&amp;e!==<span class="title class_">Symbol</span>.<span class="property"><span class="keyword">prototype</span></span>?<span class="string">&quot;symbol&quot;</span>:<span class="keyword">typeof</span> e&#125;)(e)&#125;<span class="keyword">function</span> <span class="title function_">d</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;t.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=t[o];n.<span class="property">enumerable</span>=n.<span class="property">enumerable</span>||!<span class="number">1</span>,n.<span class="property">configurable</span>=!<span class="number">0</span>,<span class="string">&quot;value&quot;</span><span class="keyword">in</span> n&amp;&amp;(n.<span class="property">writable</span>=!<span class="number">0</span>),<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(e,n.<span class="property">key</span>,n)&#125;&#125;<span class="keyword">function</span> <span class="title function_">u</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span>!t||<span class="string">&quot;object&quot;</span>!==<span class="title function_">s</span>(t)&amp;&amp;<span class="string">&quot;function&quot;</span>!=<span class="keyword">typeof</span> t?<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(<span class="keyword">void</span> <span class="number">0</span>===e)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ReferenceError</span>(<span class="string">&quot;this hasn&#x27;t been initialised - super() hasn&#x27;t been called&quot;</span>);<span class="keyword">return</span> e&#125;(e):t&#125;<span class="keyword">function</span> <span class="title function_">v</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span>(v=<span class="title class_">Object</span>.<span class="property">setPrototypeOf</span>?<span class="title class_">Object</span>.<span class="property">getPrototypeOf</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">__proto__</span>||<span class="title class_">Object</span>.<span class="title function_">getPrototypeOf</span>(e)&#125;)(e)&#125;<span class="keyword">function</span> <span class="title function_">f</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span>(f=<span class="title class_">Object</span>.<span class="property">setPrototypeOf</span>||<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">return</span> e.<span class="property">__proto__</span>=t,e&#125;)(e,t)&#125;<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(o,<span class="string">&quot;__esModule&quot;</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;),o.<span class="property">default</span>=<span class="keyword">void</span> <span class="number">0</span>,n=<span class="title function_">c</span>(n),r=<span class="title function_">c</span>(r),i=<span class="title function_">c</span>(i),a=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">if</span>(e&amp;&amp;e.<span class="property">__esModule</span>)<span class="keyword">return</span> e;<span class="keyword">var</span> t=&#123;&#125;;<span class="keyword">if</span>(<span class="literal">null</span>!=e)<span class="keyword">for</span>(<span class="keyword">var</span> o <span class="keyword">in</span> e)<span class="keyword">if</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(e,o))&#123;<span class="keyword">var</span> n=<span class="title class_">Object</span>.<span class="property">defineProperty</span>&amp;&amp;<span class="title class_">Object</span>.<span class="property">getOwnPropertyDescriptor</span>?<span class="title class_">Object</span>.<span class="title function_">getOwnPropertyDescriptor</span>(e,o):&#123;&#125;;n.<span class="property">get</span>||n.<span class="property">set</span>?<span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(t,o,n):t[o]=e[o]&#125;<span class="keyword">return</span> t.<span class="property">default</span>=e,t&#125;(a),l=<span class="title function_">c</span>(l);<span class="keyword">var</span> p=<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">function</span> <span class="title function_">t</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e,o;!<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(!(e <span class="keyword">instanceof</span> t))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Cannot call a class as a function&quot;</span>)&#125;(<span class="variable language_">this</span>,t);<span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="variable language_">arguments</span>.<span class="property">length</span>,i=<span class="keyword">new</span> <span class="title class_">Array</span>(n),a=<span class="number">0</span>;a&lt;n;a++)i[a]=<span class="variable language_">arguments</span>[a];<span class="keyword">return</span>(o=<span class="title function_">u</span>(<span class="variable language_">this</span>,(e=<span class="title function_">v</span>(t)).<span class="property">call</span>.<span class="title function_">apply</span>(e,[<span class="variable language_">this</span>].<span class="title function_">concat</span>(i)))).<span class="property">$tabbox</span>=l.<span class="property">default</span>.<span class="title function_">render</span>(r.<span class="property">default</span>,&#123;&#125;),o.<span class="property">currentType</span>=<span class="string">&quot;&quot;</span>,o.<span class="property">typeNameMap</span>=&#123;<span class="attr">cookies</span>:<span class="string">&quot;Cookies&quot;</span>,<span class="attr">localstorage</span>:<span class="string">&quot;LocalStorage&quot;</span>,<span class="attr">sessionstorage</span>:<span class="string">&quot;SessionStorage&quot;</span>&#125;,o&#125;<span class="keyword">var</span> o,c,s;<span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">e,t</span>)&#123;<span class="keyword">if</span>(<span class="string">&quot;function&quot;</span>!=<span class="keyword">typeof</span> t&amp;&amp;<span class="literal">null</span>!==t)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&quot;Super expression must either be null or a function&quot;</span>);e.<span class="property"><span class="keyword">prototype</span></span>=<span class="title class_">Object</span>.<span class="title function_">create</span>(t&amp;&amp;t.<span class="property"><span class="keyword">prototype</span></span>,&#123;<span class="attr">constructor</span>:&#123;<span class="attr">value</span>:e,<span class="attr">writable</span>:!<span class="number">0</span>,<span class="attr">configurable</span>:!<span class="number">0</span>&#125;&#125;),t&amp;&amp;<span class="title function_">f</span>(e,t)&#125;(t,n.<span class="property">default</span>),o=t,(c=[&#123;<span class="attr">key</span>:<span class="string">&quot;onRenderTab&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="title function_">e</span>(<span class="variable language_">this</span>.<span class="property">$tabbox</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onAddTopBar&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="variable language_">this</span>,o=[<span class="string">&quot;Cookies&quot;</span>,<span class="string">&quot;LocalStorage&quot;</span>,<span class="string">&quot;SessionStorage&quot;</span>],n=[],r=<span class="number">0</span>;r&lt;o.<span class="property">length</span>;r++)n.<span class="title function_">push</span>(&#123;<span class="attr">name</span>:o[r],<span class="attr">data</span>:&#123;<span class="attr">type</span>:o[r].<span class="title function_">toLowerCase</span>()&#125;,<span class="attr">className</span>:<span class="string">&quot;&quot;</span>,<span class="attr">onClick</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(l.<span class="property">default</span>.<span class="title function_">hasClass</span>(<span class="variable language_">this</span>,<span class="string">&quot;vc-actived&quot;</span>))<span class="keyword">return</span>!<span class="number">1</span>;t.<span class="property">currentType</span>=<span class="variable language_">this</span>.<span class="property">dataset</span>.<span class="property">type</span>,t.<span class="title function_">renderStorage</span>()&#125;&#125;);n[<span class="number">0</span>].<span class="property">className</span>=<span class="string">&quot;vc-actived&quot;</span>,<span class="title function_">e</span>(n)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onAddTool&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=<span class="variable language_">this</span>;<span class="title function_">e</span>([&#123;<span class="attr">name</span>:<span class="string">&quot;Refresh&quot;</span>,<span class="attr">global</span>:!<span class="number">1</span>,<span class="attr">onClick</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;t.<span class="title function_">renderStorage</span>()&#125;&#125;,&#123;<span class="attr">name</span>:<span class="string">&quot;Clear&quot;</span>,<span class="attr">global</span>:!<span class="number">1</span>,<span class="attr">onClick</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;t.<span class="title function_">clearLog</span>()&#125;&#125;])&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onReady&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;onShow&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="string">&quot;&quot;</span>==<span class="variable language_">this</span>.<span class="property">currentType</span>&amp;&amp;(<span class="variable language_">this</span>.<span class="property">currentType</span>=<span class="string">&quot;cookies&quot;</span>,<span class="variable language_">this</span>.<span class="title function_">renderStorage</span>())&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;clearLog&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">currentType</span>&amp;&amp;<span class="variable language_">window</span>.<span class="property">confirm</span>&amp;&amp;!<span class="variable language_">window</span>.<span class="title function_">confirm</span>(<span class="string">&quot;Remove all &quot;</span>+<span class="variable language_">this</span>.<span class="property">typeNameMap</span>[<span class="variable language_">this</span>.<span class="property">currentType</span>]+<span class="string">&quot;?&quot;</span>))<span class="keyword">return</span>!<span class="number">1</span>;<span class="keyword">switch</span>(<span class="variable language_">this</span>.<span class="property">currentType</span>)&#123;<span class="keyword">case</span><span class="string">&quot;cookies&quot;</span>:<span class="variable language_">this</span>.<span class="title function_">clearCookieList</span>();<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;localstorage&quot;</span>:<span class="variable language_">this</span>.<span class="title function_">clearLocalStorageList</span>();<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;sessionstorage&quot;</span>:<span class="variable language_">this</span>.<span class="title function_">clearSessionStorageList</span>();<span class="keyword">break</span>;<span class="attr">default</span>:<span class="keyword">return</span>!<span class="number">1</span>&#125;<span class="variable language_">this</span>.<span class="title function_">renderStorage</span>()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;renderStorage&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> e=[];<span class="keyword">switch</span>(<span class="variable language_">this</span>.<span class="property">currentType</span>)&#123;<span class="keyword">case</span><span class="string">&quot;cookies&quot;</span>:e=<span class="variable language_">this</span>.<span class="title function_">getCookieList</span>();<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;localstorage&quot;</span>:e=<span class="variable language_">this</span>.<span class="title function_">getLocalStorageList</span>();<span class="keyword">break</span>;<span class="keyword">case</span><span class="string">&quot;sessionstorage&quot;</span>:e=<span class="variable language_">this</span>.<span class="title function_">getSessionStorageList</span>();<span class="keyword">break</span>;<span class="attr">default</span>:<span class="keyword">return</span>!<span class="number">1</span>&#125;<span class="keyword">var</span> t=l.<span class="property">default</span>.<span class="title function_">one</span>(<span class="string">&quot;.vc-log&quot;</span>,<span class="variable language_">this</span>.<span class="property">$tabbox</span>);<span class="keyword">if</span>(<span class="number">0</span>==e.<span class="property">length</span>)t.<span class="property">innerHTML</span>=<span class="string">&quot;&quot;</span>;<span class="keyword">else</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;e.<span class="property">length</span>;o++)e[o].<span class="property">name</span>=a.<span class="title function_">htmlEncode</span>(e[o].<span class="property">name</span>),e[o].<span class="property">value</span>=a.<span class="title function_">htmlEncode</span>(e[o].<span class="property">value</span>);t.<span class="property">innerHTML</span>=l.<span class="property">default</span>.<span class="title function_">render</span>(i.<span class="property">default</span>,&#123;<span class="attr">list</span>:e&#125;,!<span class="number">0</span>)&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;getCookieList&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(!<span class="variable language_">document</span>.<span class="property">cookie</span>||!navigator.<span class="property">cookieEnabled</span>)<span class="keyword">return</span>[];<span class="keyword">for</span>(<span class="keyword">var</span> e=[],t=<span class="variable language_">document</span>.<span class="property">cookie</span>.<span class="title function_">split</span>(<span class="string">&quot;;&quot;</span>),o=<span class="number">0</span>;o&lt;t.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=t[o].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>),r=n.<span class="title function_">shift</span>().<span class="title function_">replace</span>(<span class="regexp">/^ /</span>,<span class="string">&quot;&quot;</span>),i=n.<span class="title function_">join</span>(<span class="string">&quot;=&quot;</span>);<span class="keyword">try</span>&#123;r=<span class="built_in">decodeURIComponent</span>(r),i=<span class="built_in">decodeURIComponent</span>(i)&#125;<span class="keyword">catch</span>(e)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(e,r,i)&#125;e.<span class="title function_">push</span>(&#123;<span class="attr">name</span>:r,<span class="attr">value</span>:i&#125;)&#125;<span class="keyword">return</span> e&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;getLocalStorageList&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(!<span class="variable language_">window</span>.<span class="property">localStorage</span>)<span class="keyword">return</span>[];<span class="keyword">try</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=[],t=<span class="number">0</span>;t&lt;<span class="variable language_">localStorage</span>.<span class="property">length</span>;t++)&#123;<span class="keyword">var</span> o=<span class="variable language_">localStorage</span>.<span class="title function_">key</span>(t),n=<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(o);e.<span class="title function_">push</span>(&#123;<span class="attr">name</span>:o,<span class="attr">value</span>:n&#125;)&#125;<span class="keyword">return</span> e&#125;<span class="keyword">catch</span>(e)&#123;<span class="keyword">return</span>[]&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;getSessionStorageList&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(!<span class="variable language_">window</span>.<span class="property">sessionStorage</span>)<span class="keyword">return</span>[];<span class="keyword">try</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=[],t=<span class="number">0</span>;t&lt;<span class="variable language_">sessionStorage</span>.<span class="property">length</span>;t++)&#123;<span class="keyword">var</span> o=<span class="variable language_">sessionStorage</span>.<span class="title function_">key</span>(t),n=<span class="variable language_">sessionStorage</span>.<span class="title function_">getItem</span>(o);e.<span class="title function_">push</span>(&#123;<span class="attr">name</span>:o,<span class="attr">value</span>:n&#125;)&#125;<span class="keyword">return</span> e&#125;<span class="keyword">catch</span>(e)&#123;<span class="keyword">return</span>[]&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;clearCookieList&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>&amp;&amp;navigator.<span class="property">cookieEnabled</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hostname</span>,t=<span class="variable language_">this</span>.<span class="title function_">getCookieList</span>(),o=<span class="number">0</span>;o&lt;t.<span class="property">length</span>;o++)&#123;<span class="keyword">var</span> n=t[o].<span class="property">name</span>;<span class="variable language_">document</span>.<span class="property">cookie</span>=<span class="string">&quot;&quot;</span>.<span class="title function_">concat</span>(n,<span class="string">&quot;=;expires=Thu, 01 Jan 1970 00:00:00 GMT&quot;</span>),<span class="variable language_">document</span>.<span class="property">cookie</span>=<span class="string">&quot;&quot;</span>.<span class="title function_">concat</span>(n,<span class="string">&quot;=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/&quot;</span>),<span class="variable language_">document</span>.<span class="property">cookie</span>=<span class="string">&quot;&quot;</span>.<span class="title function_">concat</span>(n,<span class="string">&quot;=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;domain=.&quot;</span>).<span class="title function_">concat</span>(e.<span class="title function_">split</span>(<span class="string">&quot;.&quot;</span>).<span class="title function_">slice</span>(-<span class="number">2</span>).<span class="title function_">join</span>(<span class="string">&quot;.&quot;</span>))&#125;<span class="variable language_">this</span>.<span class="title function_">renderStorage</span>()&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;clearLocalStorageList&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">localStorage</span>)<span class="keyword">try</span>&#123;<span class="variable language_">localStorage</span>.<span class="title function_">clear</span>(),<span class="variable language_">this</span>.<span class="title function_">renderStorage</span>()&#125;<span class="keyword">catch</span>(e)&#123;<span class="title function_">alert</span>(<span class="string">&quot;localStorage.clear() fail.&quot;</span>)&#125;&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">&quot;clearSessionStorageList&quot;</span>,<span class="attr">value</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">sessionStorage</span>)<span class="keyword">try</span>&#123;<span class="variable language_">sessionStorage</span>.<span class="title function_">clear</span>(),<span class="variable language_">this</span>.<span class="title function_">renderStorage</span>()&#125;<span class="keyword">catch</span>(e)&#123;<span class="title function_">alert</span>(<span class="string">&quot;sessionStorage.clear() fail.&quot;</span>)&#125;&#125;&#125;])&amp;&amp;<span class="title function_">d</span>(o.<span class="property"><span class="keyword">prototype</span></span>,c),s&amp;&amp;<span class="title function_">d</span>(o,s),t&#125;();o.<span class="property">default</span>=p,e.<span class="property">exports</span>=t.<span class="property">default</span>&#125;)?n.<span class="title function_">apply</span>(t,r):n)||(e.<span class="property">exports</span>=i)&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;div class=&quot;vc-table&quot;&gt;\n  &lt;div class=&quot;vc-log&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;&#x27;</span>&#125;,<span class="keyword">function</span>(<span class="params">e,t</span>)&#123;e.<span class="property">exports</span>=<span class="string">&#x27;&lt;div&gt;\n  &lt;dl class=&quot;vc-table-row&quot;&gt;\n    &lt;dd class=&quot;vc-table-col&quot;&gt;Name&lt;/dd&gt;\n    &lt;dd class=&quot;vc-table-col vc-table-col-2&quot;&gt;Value&lt;/dd&gt;\n  &lt;/dl&gt;\n  &#123;&#123;for (var i = 0; i &lt; list.length; i++)&#125;&#125;\n  &lt;dl class=&quot;vc-table-row&quot;&gt;\n    &lt;dd class=&quot;vc-table-col&quot;&gt;&#123;&#123;list[i].name&#125;&#125;&lt;/dd&gt;\n    &lt;dd class=&quot;vc-table-col vc-table-col-2&quot;&gt;&#123;&#123;list[i].value&#125;&#125;&lt;/dd&gt;\n  &lt;/dl&gt;\n  &#123;&#123;/for&#125;&#125;\n&lt;/div&gt;&#x27;</span>&#125;])&#125;);</span><br></pre></td></tr></table></figure>Values新建vconsole.js<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--初始化<span class="title class_">VConsole</span>--&gt;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">VConsole</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure>Rules:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//m.baidu.com/ jsPrepend://&#123;vConsole.js&#125;</span></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//m.baidu.com/ jsPrepend://&#123;vconsole.js&#125;</span></span><br></pre></td></tr></table></figure><h2 id="weinre"><a href="#weinre" class="headerlink" title="weinre"></a>weinre</h2>Rules:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//xxx.xxx.com/ weinre://test</span></span><br></pre></td></tr></table></figure></li></ol><p><strong>注意: weinre不可与vconsole一同使用</strong></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>Rules新建</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 代理接口</span><br><span class="line"><span class="attr">https</span>:<span class="comment">//xxx.xxx.cn  https://xxx.xxx.com</span></span><br><span class="line"></span><br><span class="line"># 注入 vconsole</span><br><span class="line"><span class="attr">https</span>:<span class="comment">//xxx.xxx.com/ whistle.inspect://</span></span><br><span class="line"></span><br><span class="line"># weinre调试</span><br><span class="line">#<span class="attr">https</span>:<span class="comment">//xxx.xxx.com/ weinre://feika</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly标签外挂</title>
      <link href="/archives/hexo/butterfly-tags.html"/>
      <url>/archives/hexo/butterfly-tags.html</url>
      
        <content type="html"><![CDATA[<div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>本文来自 <a href="https://akilar.top/posts/615e2dec"><wavy>Akilar 大佬的博客</wavy></a></p></div><h2 id="行内文本样式-text"><a href="#行内文本样式-text" class="headerlink" title="行内文本样式 text"></a>行内文本样式 text</h2><div class="tabs" id="text"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#text-1">语法</button></li><li class="tab"><button type="button" data-href="#text-2">参数</button></li><li class="tab"><button type="button" data-href="#text-3">代码示例</button></li><li class="tab active"><button type="button" data-href="#text-4">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="text-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="text-2"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="text-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="text-4"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><div class="tabs" id="note"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#note-1">语法</button></li><li class="tab"><button type="button" data-href="#note-2">参数</button></li><li class="tab"><button type="button" data-href="#note-3">代码示例</button></li><li class="tab active"><button type="button" data-href="#note-4">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="note-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-2"><table><thead><tr><th align="left">参数名称</th><th align="center">用法</th></tr></thead><tbody><tr><td align="left">class</td><td align="center">【可選】標識，不同的標識有不同的配色（ default / primary / success / info / warning / danger ）</td></tr><tr><td align="left">no-icon</td><td align="center">【可選】不顯示 icon</td></tr><tr><td align="left">style</td><td align="center">【可選】可以覆蓋配置中的 style（simple/modern/flat/disabled）</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;</span><br><span class="line">你是刷 Visa 還是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;</span><br><span class="line">小心開車 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;</span><br><span class="line">這是三片呢？還是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;</span><br><span class="line">你是刷 Visa 還是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;</span><br><span class="line">剪刀石頭布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;</span><br><span class="line">前端最討厭的瀏覽器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="note-4"><div class="note icon modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>2021 年快到了….</p></div><div class="note pink icon modern"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon modern"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Gallery-相冊圖庫"><a href="#Gallery-相冊圖庫" class="headerlink" title="Gallery 相冊圖庫"></a>Gallery 相冊圖庫</h2><div class="tabs" id="gallerygroup"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#gallerygroup-1">语法</button></li><li class="tab"><button type="button" data-href="#gallerygroup-2">参数</button></li><li class="tab"><button type="button" data-href="#gallerygroup-3">代码示例</button></li><li class="tab active"><button type="button" data-href="#gallerygroup-4">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="gallerygroup-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="gallerygroup-2"><table><thead><tr><th align="left">参数名称</th><th align="center">用法</th></tr></thead><tbody><tr><td align="left">name</td><td align="center">圖庫名字</td></tr><tr><td align="left">description</td><td align="center">圖庫描述</td></tr><tr><td align="left">link</td><td align="center">連接到對應相冊的地址</td></tr><tr><td align="left">img-url</td><td align="center">圖庫封面的地址</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="gallerygroup-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup &#x27;壁紙&#x27; &#x27;收藏的一些壁紙&#x27; &#x27;/Gallery/wallpaper&#x27; https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %&#125;</span><br><span class="line">&#123;% galleryGroup &#x27;漫威&#x27; &#x27;關於漫威的圖片&#x27; &#x27;/Gallery/marvel&#x27; https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup &#x27;OH MY GIRL&#x27; &#x27;關於OH MY GIRL的圖片&#x27; &#x27;/Gallery/ohmygirl&#x27; https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="gallerygroup-4"><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁紙</div>  <p>收藏的一些壁紙</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>關於漫威的圖片</p>  <a href='/Gallery/marvel'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>關於OH MY GIRL的圖片</p>  <a href='/Gallery/ohmygirl'></a>  </figcaption>  </figure>  </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Gallery-相冊"><a href="#Gallery-相冊" class="headerlink" title="Gallery 相冊"></a>Gallery 相冊</h2><div class="tabs" id="gallery"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#gallery-1">语法</button></li><li class="tab"><button type="button" data-href="#gallery-2">参数</button></li><li class="tab"><button type="button" data-href="#gallery-3">代码示例</button></li><li class="tab active"><button type="button" data-href="#gallery-4">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="gallery-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="gallery-2"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="gallery-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="gallery-4"><div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg"><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg"><br><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg"><br><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg"><br><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg"><br><img src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg"><br><img src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg"><br><img src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg"></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="上标标签-tip"><a href="#上标标签-tip" class="headerlink" title="上标标签 tip"></a>上标标签 tip</h2><div class="tabs" id="tip"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#tip-1">语法</button></li><li class="tab"><button type="button" data-href="#tip-2">参数</button></li><li class="tab"><button type="button" data-href="#tip-3">代码示例</button></li><li class="tab active"><button type="button" data-href="#tip-4">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="tip-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-2"><table><thead><tr><th align="left">参数名称</th><th align="center">用法</th></tr></thead><tbody><tr><td align="left">样式</td><td align="center">success,error,warning,bolt,ban,home,sync,cogs,key,bell</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;默认情况&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="tip-4"><div class="tip "><p>默认情况</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义 font awesome 图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="动态标签-anima"><a href="#动态标签-anima" class="headerlink" title="动态标签 anima"></a>动态标签 anima</h2><div class="tabs" id="anima"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#anima-1">语法</button></li><li class="tab"><button type="button" data-href="#anima-2">参数</button></li><li class="tab"><button type="button" data-href="#anima-3">代码示例</button></li><li class="tab active"><button type="button" data-href="#anima-4">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="anima-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="anima-2"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="anima-3"><ol><li>On DOM load（当页面加载时显示动画）</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>调整动画速度</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>On hover（当鼠标悬停时显示动画）</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>On parent hover（当鼠标悬停在父级元素时显示动画）</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="anima-4"><ol><li><p>On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div></li><li><p>调整动画速度</p><div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div></li><li><p>On hover（当鼠标悬停时显示动画）</p><div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div></li><li><p>On parent hover（当鼠标悬停在父级元素时显示动画）</p><div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="复选列表-checkbox"><a href="#复选列表-checkbox" class="headerlink" title="复选列表 checkbox"></a>复选列表 checkbox</h2><div class="tabs" id="checkbox"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#checkbox-1">语法</button></li><li class="tab"><button type="button" data-href="#checkbox-2">参数</button></li><li class="tab"><button type="button" data-href="#checkbox-3">代码示例</button></li><li class="tab active"><button type="button" data-href="#checkbox-4">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="checkbox-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-2"><table><thead><tr><th align="left">参数名称</th><th align="center">用法</th></tr></thead><tbody><tr><td align="left">样式</td><td align="center">plus, minus, times</td></tr><tr><td align="left">颜色</td><td align="center">red,yellow,green,cyan,blue,gray</td></tr><tr><td align="left">选中状态</td><td align="center">checked</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="checkbox-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="单选列表-radio"><a href="#单选列表-radio" class="headerlink" title="单选列表 radio"></a>单选列表 radio</h2><div class="tabs" id="radio"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#radio-1">语法</button></li><li class="tab"><button type="button" data-href="#radio-2">参数</button></li><li class="tab"><button type="button" data-href="#radio-3">代码示例</button></li><li class="tab active"><button type="button" data-href="#radio-4">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="radio-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="radio-2"><table><thead><tr><th align="left">参数名称</th><th align="center">用法</th></tr></thead><tbody><tr><td align="left">颜色</td><td align="center">red,yellow,green,cyan,blue,gray</td></tr><tr><td align="left">选中状态</td><td align="center">checked</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="radio-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="radio-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="时间轴-timeline"><a href="#时间轴-timeline" class="headerlink" title="时间轴 timeline"></a>时间轴 timeline</h2><div class="tabs" id="timeline"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#timeline-1">语法</button></li><li class="tab"><button type="button" data-href="#timeline-2">参数</button></li><li class="tab"><button type="button" data-href="#timeline-3">代码示例</button></li><li class="tab active"><button type="button" data-href="#timeline-4">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="timeline-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选） %&#125;</span><br><span class="line">正文内容</span><br><span class="line">正文内容</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="timeline-2"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="timeline-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="timeline-4"><div class="timeline"></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="链接卡片-link"><a href="#链接卡片-link" class="headerlink" title="链接卡片 link"></a>链接卡片 link</h2><div class="tabs" id="link"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#link-1">语法</button></li><li class="tab"><button type="button" data-href="#link-2">参数</button></li><li class="tab"><button type="button" data-href="#link-3">代码示例</button></li><li class="tab active"><button type="button" data-href="#link-4">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="link-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="link-2"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="link-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="link-4"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="github-卡片-ghcard"><a href="#github-卡片-ghcard" class="headerlink" title="github 卡片 ghcard"></a>github 卡片 ghcard</h2><div class="tabs" id="ghcard"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#ghcard-1">语法</button></li><li class="tab"><button type="button" data-href="#ghcard-2">参数</button></li><li class="tab"><button type="button" data-href="#ghcard-3">代码示例</button></li><li class="tab active"><button type="button" data-href="#ghcard-4">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="ghcard-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghcard-2"><table><thead><tr><th align="left">参数名称</th><th align="center">用法</th></tr></thead><tbody><tr><td align="left">hide</td><td align="center">隐藏指定统计 stars,commits,prs,issues,contribs</td></tr><tr><td align="left">count_private</td><td align="center">将私人项目贡献添加到总提交计数中 true</td></tr><tr><td align="left">show_icons</td><td align="center">显示图标 true</td></tr><tr><td align="left">theme</td><td align="center">主题 请查阅 <a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ghcard-3"><ol><li>用户信息卡片</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard xaoxuu %&#125;               | &#123;% ghcard xaoxuu, theme=vue %&#125;             |</span><br><span class="line">| ---------------------------------------------------------- | ------------------------------------------------------------------ |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=buefy %&#125;   | &#123;% ghcard xaoxuu, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=onedark %&#125; | &#123;% ghcard xaoxuu, theme=solarized-dark %&#125;  |</span><br><span class="line">| &#123;% ghcard xaoxuu, theme=algolia %&#125; | &#123;% ghcard xaoxuu, theme=calm %&#125;      |</span><br></pre></td></tr></table></figure><ol start="2"><li>仓库信息卡片</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="ghcard-4"><ol><li>用户信息卡片</li></ol><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=calm&show_owner=true"/></a></td></tr></tbody></table><ol start="2"><li>仓库信息卡片</li></ol><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Moboxterm基础使用教程</title>
      <link href="/archives/tools/moboxterm.html"/>
      <url>/archives/tools/moboxterm.html</url>
      
        <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sz  filename</span><br><span class="line">ctrl + 鼠标右键</span><br><span class="line">Receive file using Z-modem</span><br></pre></td></tr></table></figure><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rz</span><br><span class="line">ctrl + 鼠标右键</span><br><span class="line">Send file using Z-modem</span><br><span class="line">选择上传文件</span><br></pre></td></tr></table></figure><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo unzip .d /dutemode dutemode.zip</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
            <tag> Moboxterm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FinalShell基础使用教程</title>
      <link href="/archives/tools/finalShell.html"/>
      <url>/archives/tools/finalShell.html</url>
      
        <content type="html"><![CDATA[<h2 id="终端"><a href="#终端" class="headerlink" title="终端:"></a>终端:</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alt 命令历史</span><br><span class="line">双击ctrl 切换到命令输入框</span><br></pre></td></tr></table></figure><h2 id="命令输入框"><a href="#命令输入框" class="headerlink" title="命令输入框"></a>命令输入框</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alt 命令历史</span><br><span class="line">tab 补全</span><br><span class="line">双击ctrl 切换到终端</span><br></pre></td></tr></table></figure><h2 id="列表窗口"><a href="#列表窗口" class="headerlink" title="列表窗口"></a>列表窗口</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">backspace 上一级目录</span><br><span class="line">alt/tab/esc 关闭窗口</span><br><span class="line">上下箭头 选择行</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sourcetree中针对不同仓库设置不同账户</title>
      <link href="/archives/tools/sourcetree.html"/>
      <url>/archives/tools/sourcetree.html</url>
      
        <content type="html"><![CDATA[<p>介绍之前，先来说说应用场景。由于公司要求使用统一的账户邮箱提交代码，于是便将全局的用户信息设置成了公司要求的账户，但是个人代码提交的时候并不想使用这个用户信息，所以有了这篇小记~</p><h2 id="全局用户信息"><a href="#全局用户信息" class="headerlink" title="全局用户信息"></a>全局用户信息</h2><p>点击    菜单栏 =&gt; 工具 =&gt; 选项 =&gt; 一般<br>找到默认用户信息，填写全局的用户信息</p><p>对应的git命令操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;your name&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;your email-address&quot;</span></span><br></pre></td></tr></table></figure><h2 id="单独用户信息"><a href="#单独用户信息" class="headerlink" title="单独用户信息"></a>单独用户信息</h2><p>sourcetree打开代码仓库，点击右侧  设置（资源管理器旁边），然后点击高级，取消使用全局用户配置，填入自己所需的单独用户信息</p><p>对应的git命令操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="built_in">local</span> user.name <span class="string">&quot;your name&quot;</span></span><br><span class="line">git config --<span class="built_in">local</span> user.email <span class="string">&quot;your email-address&quot;</span></span><br></pre></td></tr></table></figure><p>更多git操作请看<a href="https://www.xmeta.love/archives/other/git.html">git常用命令篇</a></p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
            <tag> Sourcetree </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="/archives/other/git.html"/>
      <url>/archives/other/git.html</url>
      
        <content type="html"><![CDATA[<p>一般来说，日常使用只要记住下图 6 个命令，就可以了。但是熟练使用，恐怕要记住 60 ～ 100 个命令~。</p><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217102843197.png" alt="image-20211217102843197"></p><table><thead><tr><th align="left">名称</th><th align="center">解释</th></tr></thead><tbody><tr><td align="left">Workspace</td><td align="center">工作区</td></tr><tr><td align="left">Index / Stage</td><td align="center">暂存区</td></tr><tr><td align="left">Repository</td><td align="center">仓库区（本地仓库）</td></tr><tr><td align="left">Remote</td><td align="center">远程仓库</td></tr></tbody></table><h2 id="创建公钥"><a href="#创建公钥" class="headerlink" title="创建公钥"></a>创建公钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;your email-address&quot;</span></span><br></pre></td></tr></table></figure><h2 id="查看公钥"><a href="#查看公钥" class="headerlink" title="查看公钥"></a>查看公钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line"><span class="built_in">cat</span> id_rsa.pub</span><br></pre></td></tr></table></figure><h2 id="新建代码库"><a href="#新建代码库" class="headerlink" title="新建代码库"></a>新建代码库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在当前目录新建一个Git代码库</span></span><br><span class="line">$ git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个目录，将其初始化为Git代码库</span></span><br><span class="line">$ git init &lt;project-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载一个项目和它的整个代码历史</span></span><br><span class="line">$ git <span class="built_in">clone</span> &lt;url&gt;</span><br></pre></td></tr></table></figure><h2 id="修改仓库地址方法"><a href="#修改仓库地址方法" class="headerlink" title="修改仓库地址方法"></a>修改仓库地址方法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看远程仓库地址</span></span><br><span class="line">$ git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法1：直接修改远程仓库地址</span></span><br><span class="line">$ git remote set-url origin &lt;url&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法2：先删除再添加，即删除本地远程仓库地址，然后添加新的仓库地址</span></span><br><span class="line">$ git remote <span class="built_in">rm</span> origin</span><br><span class="line">$ git remote add origin &lt;url&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置（-git-文件夹中）"><a href="#配置（-git-文件夹中）" class="headerlink" title="配置（.git 文件夹中）"></a>配置（.git 文件夹中）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当前的Git配置</span></span><br><span class="line">$ git config --list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑Git配置文件</span></span><br><span class="line">$ git config -e &lt;--global&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置提交代码时的用户信息</span></span><br><span class="line">$ git config &lt;--global&gt; user.name <span class="string">&quot;huoyou&quot;</span></span><br><span class="line">$ git config &lt;--global&gt; user.email <span class="string">&quot;huoyou1234@gmail.com&quot;</span></span><br><span class="line"></span><br><span class="line">//查看自己的用户名和邮箱地址：</span><br><span class="line">$ git config user.name</span><br><span class="line">$ git config user.email</span><br><span class="line"></span><br><span class="line">//修改自己的用户名和邮箱地址：</span><br><span class="line">$ git config --system user.name <span class="string">&quot;huoyou&quot;</span></span><br><span class="line">$ git config --system user.email <span class="string">&quot;huoyou1234@gmail.com&quot;</span></span><br><span class="line"></span><br><span class="line">$ git config --global user.name <span class="string">&quot;huoyou&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;huoyou1234@gmail.com&quot;</span></span><br><span class="line"></span><br><span class="line">$ git config --<span class="built_in">local</span> user.name <span class="string">&quot;huoyou&quot;</span></span><br><span class="line">$ git config --<span class="built_in">local</span> user.email <span class="string">&quot;huoyou1234@gmail.com&quot;</span></span><br><span class="line"></span><br><span class="line">// 优先级  <span class="built_in">local</span> &gt; global &gt; system</span><br></pre></td></tr></table></figure><h2 id="增加、删除文件"><a href="#增加、删除文件" class="headerlink" title="增加、删除文件"></a>增加、删除文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加指定文件到暂存区</span></span><br><span class="line">$ git add &lt;file1&gt; &lt;file2&gt; ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加指定目录到暂存区，包括子目录</span></span><br><span class="line">$ git add &lt;<span class="built_in">dir</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加当前目录的所有文件到暂存区</span></span><br><span class="line">$ git add .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加每个变化前，都会要求确认</span></span><br><span class="line"><span class="comment"># 对于同一个文件的多处变化，可以实现分次提交</span></span><br><span class="line">$ git add -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class="line">$ git <span class="built_in">rm</span> &lt;file1&gt; &lt;file2&gt; ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止追踪指定文件，但该文件会保留在工作区</span></span><br><span class="line">$ git <span class="built_in">rm</span> --cached &lt;file&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改名文件，并且将这个改名放入暂存区</span></span><br><span class="line">$ git <span class="built_in">mv</span> &lt;file-original&gt; &lt;file-renamed&gt;</span><br></pre></td></tr></table></figure><h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提交暂存区到仓库区</span></span><br><span class="line">$ git commit -m &lt;message&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交暂存区的指定文件到仓库区</span></span><br><span class="line">$ git commit &lt;file1&gt; &lt;file2&gt; ... -m &lt;message&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class="line">$ git commit -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交时显示所有diff信息</span></span><br><span class="line">$ git commit -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用一次新的commit，替代上一次提交</span></span><br><span class="line"><span class="comment"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class="line">$ git commit --amend -m &lt;message&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重做上一次commit，并包括指定文件的新变化</span></span><br><span class="line">$ git commit --amend &lt;file1&gt; &lt;file2&gt; ...</span><br></pre></td></tr></table></figure><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有本地分支</span></span><br><span class="line">$ git branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有远程分支</span></span><br><span class="line">$ git branch -r</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有本地分支和远程分支</span></span><br><span class="line">$ git branch -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，但依然停留在当前分支</span></span><br><span class="line">$ git branch &lt;branch-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，并切换到该分支</span></span><br><span class="line">$ git checkout -b &lt;branch&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，指向指定commit</span></span><br><span class="line">$ git branch &lt;branch&gt; &lt;commit&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，与指定的远程分支建立追踪关系</span></span><br><span class="line">$ git branch --track &lt;branch&gt; &lt;remote-branch&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到指定分支，并更新工作区</span></span><br><span class="line">$ git checkout &lt;branch-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到上一个分支</span></span><br><span class="line">$ git checkout -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立追踪关系，在现有分支与指定的远程分支之间</span></span><br><span class="line">$ git branch --set-upstream &lt;branch&gt; &lt;remote-branch&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并指定分支到当前分支</span></span><br><span class="line">$ git merge &lt;branch&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择一个commit，合并进当前分支</span></span><br><span class="line">$ git cherry-pick &lt;commit&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line">$ git branch -d &lt;branch-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程分支</span></span><br><span class="line">$ git push origin --delete &lt;branch-name&gt;</span><br><span class="line">or</span><br><span class="line">$ git branch -dr &lt;remote/branch-name&gt;</span><br></pre></td></tr></table></figure><h2 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 情况1： 本地有分支dev，远程没有dev分支，要将本地dev分支提交到远程的dev分支</span></span><br><span class="line"></span><br><span class="line">首先切换到dev分支：</span><br><span class="line">$ git checkout dev</span><br><span class="line"></span><br><span class="line">检测是否有为提交内容：</span><br><span class="line">$ git status</span><br><span class="line"></span><br><span class="line">将未提交内容添加到暂存区：</span><br><span class="line">$ git add .（或git add 具体文件名称）</span><br><span class="line"></span><br><span class="line">将暂存区内容提交到本地版本库：</span><br><span class="line">$ git commit -m <span class="string">&quot;本次提交内容说明&quot;</span></span><br><span class="line"></span><br><span class="line">推送到远程：</span><br><span class="line">$ git push origin dev:dev (推送成功后，在远程可以看到已经新建了一个dev分支)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 情况2: 将远程dev分支上的内容，合并至远程的master分支上</span></span><br><span class="line"></span><br><span class="line">本地切换到master分支上:</span><br><span class="line">$ git checkout master</span><br><span class="line"></span><br><span class="line">合并dev分支到master上：</span><br><span class="line">$ git merge dev, （看有无冲突，有冲突要解决冲突）</span><br><span class="line"></span><br><span class="line">合并完成后，推送到远程：</span><br><span class="line">$ git  push  origin master</span><br></pre></td></tr></table></figure><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><p>标签是某个版本的别名，因为 Git 的版本号都是用一串字母数字组成，为了便于管理，Git 可以给版本取个别名（也就是打上标签，比如标签的名字叫做 v1.0.0）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">创建标签：</span><br><span class="line">$ git tag v1.0.0</span><br><span class="line"></span><br><span class="line">对过去的分支打标签：</span><br><span class="line">$ git tag v2.0.0 &lt;commitId&gt;</span><br><span class="line"></span><br><span class="line">查看所有标签:</span><br><span class="line">$ git tag</span><br><span class="line"></span><br><span class="line">展示某个标签详细信息：</span><br><span class="line">$ git show &lt;tagname&gt;</span><br><span class="line"></span><br><span class="line">删除标签：</span><br><span class="line">$ git tag -d &lt;tagname&gt;</span><br><span class="line"></span><br><span class="line">推送标签至远程:</span><br><span class="line">$ git push origin &lt;tagname&gt;</span><br><span class="line"></span><br><span class="line">删除远程标签:</span><br><span class="line">1. 先从本地删除</span><br><span class="line">$ git tag -d &lt;tagname&gt;</span><br><span class="line">2. 从远程删除</span><br><span class="line">$ git push origin :refs/tags/&lt;tagname&gt;</span><br></pre></td></tr></table></figure><h2 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示有变更的文件</span></span><br><span class="line">$ git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前分支的版本历史</span></span><br><span class="line">$ git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示commit历史，以及每次commit发生变更的文件</span></span><br><span class="line">$ git <span class="built_in">log</span> --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索提交历史，根据关键词</span></span><br><span class="line">$ git <span class="built_in">log</span> -S &lt;keyword&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个commit之后的所有变动，每个commit占据一行</span></span><br><span class="line">$ git <span class="built_in">log</span> &lt;tag&gt; HEAD --pretty=format:%s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件</span></span><br><span class="line">$ git <span class="built_in">log</span> &lt;tag&gt; HEAD --grep feature</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个文件的版本历史，包括文件改名</span></span><br><span class="line">$ git <span class="built_in">log</span> --follow &lt;file&gt;</span><br><span class="line">$ git whatchanged &lt;file&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个文件的修改记录</span></span><br><span class="line">$ git <span class="built_in">log</span>  --pretty=oneline &lt;文件路径&gt;文件名</span><br><span class="line">$ git show &lt;修改记录标识&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示指定文件相关的每一次diff</span></span><br><span class="line">$ git <span class="built_in">log</span> -p &lt;file&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示过去5次提交</span></span><br><span class="line">$ git <span class="built_in">log</span> -5 --pretty --oneline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有提交过的用户，按提交次数排序</span></span><br><span class="line">$ git shortlog -sn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示指定文件是什么人在什么时间修改过</span></span><br><span class="line">$ git blame &lt;file&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示暂存区和工作区的差异</span></span><br><span class="line">$ git diff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示暂存区和上一个commit的差异</span></span><br><span class="line">$ git diff --cached &lt;file&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示工作区与当前分支最新commit之间的差异</span></span><br><span class="line">$ git diff HEAD</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示两次提交之间的差异</span></span><br><span class="line">$ git diff &lt;first-branch&gt;...&lt;second-branch&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示今天你写了多少行代码</span></span><br><span class="line">$ git diff --shortstat <span class="string">&quot;@&#123;0 day ago&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某次提交的元数据和内容变化</span></span><br><span class="line">$ git show &lt;commit&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某次提交发生变化的文件</span></span><br><span class="line">$ git show --name-only &lt;commit&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某次提交时，某个文件的内容</span></span><br><span class="line">$ git show &lt;commit&gt;:&lt;filename&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前分支的最近几次提交</span></span><br><span class="line">$ git reflog</span><br></pre></td></tr></table></figure><h2 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载远程仓库的所有变动</span></span><br><span class="line">$ git fetch &lt;remote&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有远程仓库</span></span><br><span class="line">$ git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个远程仓库的信息</span></span><br><span class="line">$ git remote show &lt;remote&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加一个新的远程仓库，并命名</span></span><br><span class="line">$ git remote add &lt;shortname&gt; &lt;url&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取回远程仓库的变化，并与本地分支合并</span></span><br><span class="line">$ git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传本地指定分支到远程仓库</span></span><br><span class="line">$ git push &lt;remote&gt; &lt;branch&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line">$ git push &lt;remote&gt; --force</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送所有分支到远程仓库</span></span><br><span class="line">$ git push &lt;remote&gt; --all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送本地分支到远程（远程没有该分支）</span></span><br><span class="line">$ git push --set-upstream origin &lt;分支名称&gt;</span><br></pre></td></tr></table></figure><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 恢复暂存区的指定文件到工作区 舍弃当前本地修改内容</span></span><br><span class="line">$ git checkout &lt;file&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复某个commit的指定文件到暂存区和工作区</span></span><br><span class="line">$ git checkout &lt;commit&gt; &lt;file&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复暂存区的所有文件到工作区</span></span><br><span class="line">$ git checkout .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个commit，用来撤销指定commit</span></span><br><span class="line"><span class="comment"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span></span><br><span class="line">$ git revert &lt;commit&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂时将未提交的变化移除，稍后再移入</span></span><br><span class="line">$ git stash</span><br><span class="line">$ git stash pop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span></span><br><span class="line">$ git reset &lt;file&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置暂存区与工作区，与上一次commit保持一致</span></span><br><span class="line">$ git reset --hard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span></span><br><span class="line">$ git reset &lt;commit&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span></span><br><span class="line">$ git reset --hard &lt;commit&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 撤销本次commit内容，暂存区和工作区保留本次修改</span></span><br><span class="line">git reset --soft HEAD^</span><br><span class="line"></span><br><span class="line"><span class="comment"># HEAD^的意思是上一个版本，也可以写成HEAD~1，如果进行了2次commit，想都撤回，可以使用HEAD~2</span></span><br><span class="line">git reset --soft HEAD~1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span></span><br><span class="line">$ git reset --keep &lt;commit&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># =============参数说明============</span></span><br><span class="line">--mixed</span><br><span class="line">意思是：不删除工作空间改动代码，撤销commit，并且撤销git add . 操作</span><br><span class="line">这个为默认参数,git reset --mixed HEAD^ 和 git reset HEAD^ 效果是一样的。</span><br><span class="line"></span><br><span class="line">--soft</span><br><span class="line">不删除工作空间改动代码，撤销commit，不撤销git add .</span><br><span class="line"></span><br><span class="line">--hard</span><br><span class="line">删除工作空间改动代码，撤销commit，撤销git add .</span><br><span class="line">注意完成这个操作后，就恢复到了上一次的commit状态。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果commit注释写错了，只是想改一下注释，可以使用下面的命令：</span></span><br><span class="line">git commit --amend</span><br></pre></td></tr></table></figure><h2 id="变基"><a href="#变基" class="headerlink" title="变基"></a>变基</h2><p>查看当前提交记录：</p><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217104657662.png" alt="image-20211217104657662"></p><p>选择需要合并项的下一个 commitId：</p><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217104802650.png" alt="image-20211217104802650"></p><p>i 进入输入模式，将需要被合并的改为 s, 第一项不能改为 s：</p><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217104837195.png" alt="image-20211217104837195"></p><p>esc 退出编辑模式，:wq 保存退出</p><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217104903818.png" alt="image-20211217104903818"></p><p>esc 退出编辑模式，:wq 保存退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master -f</span><br></pre></td></tr></table></figure><p>git log</p><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217104948331.png" alt="image-20211217104948331"></p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开发中遇到的错误</title>
      <link href="/archives/other/error.html"/>
      <url>/archives/other/error.html</url>
      
        <content type="html"><![CDATA[<h2 id="ssh-connect-to-host-github-com-port-22-Connection-timed-out"><a href="#ssh-connect-to-host-github-com-port-22-Connection-timed-out" class="headerlink" title="ssh: connect to host github.com port 22: Connection timed out"></a>ssh: connect to host github.com port 22: Connection timed out</h2><ol><li><p>首先检查 ssh 是否连接成功，输入一下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SSH -T git@github.com</span><br></pre></td></tr></table></figure><p>如果还是报错（我的是这种情况）</p></li><li><p>找到.ssh 目录，里面有 id_rsa，id_rsa.pub，known_hosts 这三个文件（如果没有 id_rsa 和 id_rsa.pub 文件，则去创建秘钥，具体参考<a href="https://xmeta.love/archives/other/git.html">git 命令行篇</a>），创建 config 文件，输入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line"></span><br><span class="line">User xxxxxx@qq.com</span><br><span class="line"></span><br><span class="line">Hostname ssh.github.com</span><br><span class="line"></span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line"></span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure><div class="tip warning faa-horizontal animated-hover"><p>注意：User 后面修改为为自己的 github 账户</p></div></li><li><p>再次执行 ssh -T <a href="mailto:&#103;&#105;&#116;&#x40;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#x2e;&#99;&#x6f;&#109;">&#103;&#105;&#116;&#x40;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#x2e;&#99;&#x6f;&#109;</a>，然后输入 yes</p></li><li><p>再次执行 ssh -T <a href="mailto:&#103;&#105;&#x74;&#x40;&#x67;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#111;&#109;">&#103;&#105;&#x74;&#x40;&#x67;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#111;&#109;</a> 进行验证，如果出现一下提示则表示问题圆满解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi huoyou! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器缓存</title>
      <link href="/archives/interview/browser-catch.html"/>
      <url>/archives/interview/browser-catch.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.oschina.net/translate/cache_docs">参考链接</a></p><ul><li><p>表述：HTML 页面、图片和文件等的统称</p></li><li><p>Web 缓存处于服务器（也称为源服务器）和客户端之间，监视请求并保存响应的表述的副本。如果之后有对同一个 URL 的新请求，它会使用自己保存的内容来响应，而不是再次请求源服务器来获取内容</p></li><li><p>代理和浏览器缓存默认都会被使用在某个环节中。如果你没有正确的配置站点的缓存相关配置，站点数据将会按照默认的缓存管理员的配置被缓存下来</p></li><li><p>缓存是请求资源的副本，要区别于 cookie 等前端数据存储概念</p><ul><li>广义上来讲，缓存是个概念</li></ul></li><li><p>作用：</p><ul><li>缓解服务器压力</li><li>减少延迟：因为响应请求的内容来自缓存（距客户端较近）而不是源服务器，它会花较少的时间来获得表述并将他们呈现出来，这使得 Web 看起来具有良好的响应速度</li><li>减少网络传输：由于复用了表述，它可以减少客户端使用的带宽总量。缓存会降低对带宽的要求，也降低处理难度</li></ul></li></ul><h2 id="缓存种类"><a href="#缓存种类" class="headerlink" title="缓存种类"></a>缓存种类</h2><h3 id="浏览器缓存"><a href="#浏览器缓存" class="headerlink" title="浏览器缓存"></a>浏览器缓存</h3><ul><li><p>私有缓存</p></li><li><p>浏览器“缓存”设置：这个选项让你配置一部分硬盘空间来保存你看过的表述</p><ul><li>Chrome 会根据本地内存的使用率来决定缓存存放在哪，如果内存使用率很高，放在磁盘里面，内存的使用率很低会暂时放在内存里面</li><li>同一个资源有时是 from memory cache 有时是 from disk cache</li></ul></li><li><p>浏览器缓存的规则：它通常会在一次会话（即当前浏览器中第一次调用）中检查表述是否最新</p></li><li><p>缓存存在的意义就是当用户点击 back 按钮或是再次去访问某个页面的时候能够更快的响应</p><ul><li>尤其是在多页应用的网站中，如果你在多个页面使用了一张相同的图片，那么缓存这张图片就变得特别的有用</li></ul></li></ul><h3 id="代理缓存"><a href="#代理缓存" class="headerlink" title="代理缓存"></a>代理缓存</h3><ul><li>代理服务器缓存<ul><li>应用于同一种协议间的传输</li></ul></li><li>规模比浏览器缓存更大，代理以同样的方式为成千上万的用户服务</li><li>大公司和大型的 ISP 提供商通常会将它们设立在防火墙上或是作为一个独立的设备（中间设备）来运营</li><li>代理缓存既不是客户端的一部分，也不是服务器的一部分，而是在网络之外，必须以某种方式把请求路由过去<ul><li>方式一：手工修改浏览器代理设备，指定要使用的代码</li><li>方式二：拦截。拦截式代理会根据其自身的基础网络重定向 Web 请求，不需要在客户端配置，客户端甚至不知道它们的存在</li></ul></li><li>代理缓存是一种共享缓存，通常不只是一个用户，而是大量用户在使用代理缓存，众人都需要的表述会被多次重复使用<ul><li>因此在减少相应时间和带宽使用方面很有效：因为同一个缓存可能会被重用多次</li></ul></li><li>隧道：代理的一种延伸，对一种协议进行加密传输，比如 vpn。目前协议传输较少用代理进行传输，隧道安全性高，所以较多使用</li></ul><h3 id="网关缓存"><a href="#网关缓存" class="headerlink" title="网关缓存"></a>网关缓存</h3><ul><li>应用于不同协议间的转换传输</li><li>又名“反向代理缓存”</li><li>网关缓存服务器也是一种中介（即中间服务器），由网站管理员自己部署，使其站点更具伸缩性、可靠性以及拥有更好的性能</li><li>常见的方法是使用负载均衡器把请求路由到网关缓存服务器，让他们对于客户来说，看起来就跟源服务器一样</li><li>CDNS(网络内容分发商)分布网关缓存到整个（或部分）互联网上，并出售缓存服务给需要的网站</li></ul><h3 id="数据库缓存"><a href="#数据库缓存" class="headerlink" title="数据库缓存"></a>数据库缓存</h3><ul><li>当我们的应用极其复杂，表自然也很繁杂，我们必须进行频繁的进行数据库查询，这样可能导致数据库不堪重负<ul><li>一个好的办法就是将查询后的数据放到内存中，下一次查询直接从内存中取就好了</li></ul></li></ul><h2 id="缓存工作方式"><a href="#缓存工作方式" class="headerlink" title="缓存工作方式"></a>缓存工作方式</h2><ul><li>所有的缓存都有一系列用来决定什么时候从缓存中提供内容的规则</li><li>其中的一些规则被放置在了协议中（HTTP 1.0 和 1.1），而另一些则由缓存的管理员（诸如浏览器缓存的用户，或者代理管理员）来设置</li><li>规则集<ul><li>如果响应的头部通知缓存不要保存当前响应内容，那么缓存就不会缓存当前响应<ul><li>浏览器对于缓存的处理是根据第一次请求资源时返回的响应头来确定的</li></ul></li><li>如果是一个授权的或者加密的请求（例如 HTTPS），那么共享缓存将不会保存相关数据内容</li><li>在下述场景中，我们认为被缓存的内容是最新的（意味着不需要源服务端的检查就可以被发送给客户端），故而数据内容会直接从缓存中提供且不需要源服务端的校验<ul><li>缓存内容由过期时间或者其他的生存期机制控制，且缓存内容仍在生存有效期内</li><li>如果缓存服务近期对外提供了数据内容，且该内容在很久之前就被修改了</li></ul></li><li>如果内容已经过时了，源服务端会要求对其进行验证，或者通知缓存服务这份缓存的内容是否仍然有效</li><li>在类似于网络中断这样的场景中，缓存可以对外提供过时的响应数据而不必和源服务器进行校验和确认</li></ul></li><li>如果在响应中没有相应的验证器（ ETag 或者 Last-Modified 头部），且也没有明确的刷新信息，则这种数据通常被视为不可缓存的数据（但不总是）</li><li>刷新和验证是缓存可以正常有效的保存内容的最重要途径。新的数据内容可以快速的从缓存中得到，与此同时一个经过验证的表述则避免了在没有发生变更的情况下被再次完整的发送出去</li></ul><h2 id="各缓存参数的作用"><a href="#各缓存参数的作用" class="headerlink" title="各缓存参数的作用"></a>各缓存参数的作用</h2><ul><li>当某一文件在浏览器中第一次被访问的时候，这个时候浏览器是没有缓存的，直接从服务器获取文件，返回给客户端，并且存入浏览器缓存；此时，返回状态码 200，并且服务端可以设置响应头部 Expires 或者 Cache-Control，Last-Modified 或者 ETag</li><li>如果设置了 Expires 或者 Cache-Control，那么在指定时间内再次请求该文件时，只要不强制刷新缓存(F5 等)，浏览器会直接读取缓存而不再去请求服务器</li><li>如果没有设置 Expires 或者 Cache-Control 或者过期了，就需要再次请求服务器了，浏览器会发起条件验证，发起请求时在请求头加上 If-Modified-Since 或者 If-None-Match，服务器端判断最新的文件是否发生了更新，如果没有，则返回响应状态码 304，并且不带任何响应实体，浏览器接受到了 304 响应，就知道了要读取浏览器缓存了</li></ul><h2 id="浏览器各种刷新操作的区别"><a href="#浏览器各种刷新操作的区别" class="headerlink" title="浏览器各种刷新操作的区别"></a>浏览器各种刷新操作的区别</h2><ul><li>所有操作中，报文中 cache-control 设置了 no-cache，则每次都一定会访问服务器；设置了 max-age, 则在过期之前不会重复访问</li><li>按回车，浏览器会判断是否有缓存，并且根据 Expires 或者 Cache-Control 判断缓存是否过期，如果没有，就不会发起请求，直接使用缓存，否则就需要向服务器发起请求再验证</li><li>浏览器刷新按钮和 F5 效果相同，不管是否有 Expires 或者 Cache-Control，都会强制去请求服务器，进行再验证，根据 If-Modified-Since 或者 If-None-Match 判断是否要返回 304，如果是，浏览器就会继续使用缓存</li><li>按 Ctr+F5 时，不管是否有 Expires 或者 Cache-Control，都会强制去请求服务器，但是并不会进行再验证，服务器会直接把最新的内容返回给浏览器，压根就不考虑缓存的存在或者是否过期</li></ul><h2 id="缓存控制"><a href="#缓存控制" class="headerlink" title="缓存控制"></a>缓存控制</h2><h3 id="报文相关字段"><a href="#报文相关字段" class="headerlink" title="报文相关字段"></a>报文相关字段</h3><ul><li>通用首部字段<ul><li>Cache-Control<ul><li>控制缓存具体的行为</li></ul></li><li>Pragma<ul><li>当值为”no-cache”时强制验证缓存</li></ul></li><li>Date<ul><li>创建报文的日期时间(启发式缓存阶段会用到这个字段)</li></ul></li></ul></li><li>响应首部字段<ul><li>ETag<ul><li>服务器生成资源的唯一标识</li></ul></li><li>Vary<ul><li>代理服务器缓存的管理信息</li></ul></li><li>Age<ul><li>资源在缓存代理中存贮的时长(取决于 max-age 和 s-maxage 的大小)</li></ul></li></ul></li><li>请求首部字段<ul><li>If-Match<ul><li>条件请求，携带上一次请求中资源的 ETag，服务器根据这个字段判断文件是否有新的修改，ETag 比较采用的是强比较算法（每个字节必须相同）</li><li>在请求方法为 GET 和 HEAD 的情况下，服务器仅在请求的资源满足此首部列出的 ETag 值时才会返回资源</li><li>对于 PUT 或其他非安全方法来说，只有在满足条件的情况下才可以将资源上传</li></ul></li><li>If-None-Match<ul><li>和 If-Match 作用相反，服务器根据这个字段判断文件是否有新的修改，ETag 比较采用的是弱比较算法</li><li>只有当没有资源的 ETag 相匹配的情况下返回 200 或对请求进行相应的处理</li></ul></li></ul></li><li>对于 GET 和 HEAD 方法来说，当验证失败的时候，服务器端必须返回响应码 304</li><li>对于能够引发服务器状态改变的方法，当验证失败的时候则返回 412 （Precondition Failed，前置条件失败）<ul><li>优先级比 If-Modified-Since 更高</li><li>If-Modified-Since<ul><li>比较资源前后两次访问最后的修改时间是否一致</li><li>如果有修改，正常返回资源，状态码 200</li><li>如果没有修改，只返回响应头，状态码 304，告知浏览器资源的本地缓存还可用</li></ul></li><li>If-Unmodified-Since<ul><li>比较资源前后两次访问最后的修改时间是否一致</li><li>如果文件修改了则返回状态码 412(预处理错误)</li><li>如果没有被修改则返回 200 和资源</li></ul></li></ul></li><li>实体首部字段<ul><li>Expires<ul><li>告知客户端资源缓存失效的绝对时间</li></ul></li><li>Last-Modified<ul><li>资源最后一次修改的时间</li></ul></li></ul></li></ul><h3 id="HTML-Meta-标签"><a href="#HTML-Meta-标签" class="headerlink" title="HTML Meta 标签"></a>HTML Meta 标签</h3><ul><li>meta 标签常用于确保文档不被缓存，或者在一定时间后过期。但效果不怎么样</li></ul><meta http-equiv="expires" content="Thu, 30 Nov 2017 11:17:26 GMT"><meta http-equiv="Pragma" content="no-cache"><!-- 会在请求头上设置 Pragma: no-cache --><!-- 仅有IE才能识别这段meta标签含义，其它主流浏览器仅能识别Cache-Control: no-store的meta标签在IE中识别到该meta标签含义，并不一定会在请求字段加上Pragma，但的确会让当前页面每次都发新请求(仅限页面，页面上的资源则不受影响) --><ul><li>只有部分浏览器缓存会遵从约定，代理缓存却不会（代理基本上不会去分析文档中的 HTML）</li></ul><h4 id="Pragma-HTTP-头"><a href="#Pragma-HTTP-头" class="headerlink" title="Pragma HTTP 头"></a>Pragma HTTP 头</h4><ul><li>HTTP/1.0 中的定义，是通用首部字段，优先级很高<ul><li>Chrome 和 Firefox 中 Pragma 的优先级高于 Cache-Control 和 Expires</li></ul></li><li>当值为”no-cache”时强制验证缓存<ul><li>指定 Pragma: no-cache HTTP 头后，表述依旧可能被缓存</li><li>不是指的 Cache-Control HTTP 头的 no-cache</li></ul></li><li>服务端响应添加’Pragma’: ‘no-cache’，浏览器表现行为和强制刷新类似</li></ul><h4 id="Expires-HTTP-头控制新近程度"><a href="#Expires-HTTP-头控制新近程度" class="headerlink" title="Expires HTTP 头控制新近程度"></a>Expires HTTP 头控制新近程度</h4><ul><li>HTTP/1.0 中的定义缓存的字段，存在响应头中</li><li>Expires HTTP 头是控制缓存的基础方法，它告诉所有缓存与之相关的表述存在多久的保鲜期</li><li>保鲜期之后，缓存应该检查源服务器，看文档是否被改变。几乎各种缓存都支持 Expires 头</li><li>设置方法：<ul><li>设置绝对的过期时间，根据上次客户端取回表述时（最近访问时间）计算的时间</li><li>根据上次服务器文档修改时间计算的时间（最近修改时间）</li></ul></li><li>Expires 头特别适合缓存静态图像（比如导航栏和按钮），因为他们不会经常变化，你可以为他们设置一个非常长的过期时间，使你的站点具有更优势的响应性能</li><li>根据页面信息更新规律设置缓存更新时长和时间点</li><li>Expires 头只支持 HTTP 日期值，任何其它值都会被认为“过去时”，结果表述不会被缓存</li><li>HTTP 日期是格林威治（GMT）时间，而不是本地时间。如 Expires: Thu, 15 Apr 2010 20:00:00 GMT</li><li>Expires 有一个很大的弊端，就是它返回的是服务器的时间，但判断的时候用的却是客户端的时间，这就导致 Expires 很被动，因为用户有可能改变客户端的时间，导致缓存时间判断出错，这也是引入 Cache-Control:max-age 指令的原因之一</li><li>可以使用网络时间协议（NTP）</li><li>局限：<ul><li>Web 服务器和缓存上的时钟就必须同步</li><li>必须保证服务器时钟的准确性</li><li>容易忘记为某些内容设置特定的过期时间</li></ul></li></ul><h4 id="Cache-Control-HTTP-头"><a href="#Cache-Control-HTTP-头" class="headerlink" title="Cache-Control HTTP 头"></a>Cache-Control HTTP 头</h4><ul><li>当 Cache-Control 和 Expires 的优先级（Cache-Control 都是 HTTP/1.1 定义的关于缓存的字段）<ul><li>当 Expires 和 Cache-Control:max-age=xxx 同时存在的时候取决于缓存服务器应用的 HTTP 版本<ul><li>应用 HTTP/1.0 版本的缓存服务器则会优先处理 Expires 而忽略 max-age</li><li>应用 HTTP/1.1 版本的服务器会优先处理 max-age，忽略 Expires</li></ul></li></ul></li><li>Cache-Control 响应头，控制缓存具体的行为<ul><li>让 Web 可以更方便地控制内容，避免 Expires 所具有的限制</li></ul></li><li>请求指令<ul><li>no-cache<ul><li>强制源服务器再次验证（注意 no-store 才是不让缓存）</li><li>设置 max-age=0 和 no-cache 的结果是一样的，但是语义是不一样的</li></ul></li><li>no-store<ul><li>不缓存请求或是响应的任何内容</li></ul></li><li>max-age=[秒]<ul><li>缓存的时长，也是响应的最大的 Age 值</li></ul></li><li>min-fresh=[秒]<ul><li>期望在指定时间内响应仍然有效</li></ul></li><li>no-transform<ul><li>代理不可更改媒体类型</li></ul></li><li>only-if-cached<ul><li>从缓存获取</li></ul></li><li>cache-extension<ul><li>新的指令标记(token)</li></ul></li></ul></li><li>响应指令<ul><li>public<ul><li>响应可以被任何对象（包括：发送请求的客户端，代理服务器，等等）缓存，即使是通常不可缓存的内容（例如，该响应没有 max-age 指令或 Expires 消息头）</li></ul></li><li>private<ul><li>可省略</li><li>响应只能被单个用户缓存，不能作为共享缓存（即代理服务器不能缓存它）。私有缓存可以缓存响应内容</li></ul></li><li>no-cache<ul><li>可省略</li><li>缓存前必须先确认其有效性（注意 no-store 才是不让缓存）</li></ul></li><li>no-store<ul><li>不缓存请求或响应的任何内容</li></ul></li><li>no-transform<ul><li>代理不可更改媒体类型</li></ul></li><li>must-revalidate<ul><li>可缓存但必须再向源服务器进确认</li><li>HTTP 允许缓存服务在一些特殊情况下认为表述过期，你可以通过指定这个头参数告诉缓存你希望它严格遵守你的规则</li></ul></li><li>proxy-revalidate<ul><li>要求中间缓存服务器对缓存的响应有效性再进行确认</li><li>与 must-revalidate 相似，但它只对代理缓存有效</li></ul></li><li>max-age=[秒]<ul><li>缓存的时长，也是响应的最大的 Age 值</li><li>是从请求开始你期望表述过期前保持有效的总秒数</li></ul></li><li>s-maxage=[秒]<ul><li>共享缓存服务器响应的最大 Age 值</li><li>和 max-age 相似，但它只对共享（例如代理）缓存有效</li></ul></li><li>cache-extension<ul><li>新的指令标记(token)</li></ul></li></ul></li></ul><h3 id="Last-Modified"><a href="#Last-Modified" class="headerlink" title="Last-Modified"></a>Last-Modified</h3><ul><li>没法准确的判断资源是否真的修改了<ul><li>比如某个文件在 1 秒内频繁更改了多次，根据 Last-Modified 的时间(单位是秒)是判断不出来的</li><li>某个资源只是修改了，但实际内容并没有发生变化，Last-Modified 也无法判断出来</li></ul></li><li>由于其局限性，HTTP/1.1 中还推出了 ETag 这个字段</li></ul><h3 id="ETag"><a href="#ETag" class="headerlink" title="ETag"></a>ETag</h3><ul><li>服务器可以通过某种自定的算法对资源生成一个唯一的标识(比如 md5 标识)，然后在浏览器第一次请求某一个 URL 时把这个标识放到响应头传到客户端。服务器端的返回状态会是 200</li><li>ETag 的值有可能包含一个 W/ 前缀，来提示应该采用弱比较算法</li></ul><h3 id="If-Match"><a href="#If-Match" class="headerlink" title="If-Match"></a>If-Match</h3><ul><li>对于 GET 和 HEAD 方法，搭配 Range 首部使用，可以用来保证新请求的范围与之前请求的范围是对同一份资源的请求，如果 ETag 无法匹配，那么需要返回 416 (Range Not Satisfiable，范围请求无法满足) 响应</li><li>对于其他方法来说，尤其是 PUT, If-Match 首部可以用来检测用户想要上传的不会覆盖获取原始资源之后做出的更新（更新丢失问题）<ul><li>如果请求的条件不满足，那么需要返回 412 (Precondition Failed，先决条件失败) 响应</li></ul></li></ul><h3 id="If-None-Match"><a href="#If-None-Match" class="headerlink" title="If-None-Match"></a>If-None-Match</h3><ul><li>采用 GET 或 HEAD 方法，来更新拥有特定的 ETag 属性值的缓存</li><li>采用其他方法，尤其是 PUT，将 If-None-Match used 的值设置为 * ，用来生成事先并不知道是否存在的文件，可以确保先前并没有进行过类似的上传操作，防止之前操作数据的丢失（更新丢失问题）</li></ul><h3 id="If-Unmodified-Since"><a href="#If-Unmodified-Since" class="headerlink" title="If-Unmodified-Since"></a>If-Unmodified-Since</h3><ul><li>与含有 If-Range 消息头的范围请求搭配使用，实现断点续传的功能，即如果资源没修改继续下载，如果资源修改了，续传的意义就没有了</li><li>POST、PUT 请求中，优化并发控制，即当多用户编辑同一份文档的时候，如果服务器的资源已经被修改，那么在对其作出编辑会被拒绝提交</li></ul><h3 id="Range"><a href="#Range" class="headerlink" title="Range"></a>Range</h3><ul><li>Range: <unit>=<range-start>-<range-end>, <range-start>-<range-end>, <range-start>-<range-end><ul><li><unit>- 范围所采用的单位，通常是字节（bytes）</li><li><range-start>- 一个整数，表示在特定单位下，范围的起始值</li><li><range-end>- 一个整数，表示在特定单位下，范围的结束值- 可选，如果不存在，表示此范围一直延伸到文档结束</li><li>Range: bytes=200-1000, 2000-6576, 19000-</li></ul></li><li>是一个请求首部，告知服务器返回文件的哪一部分</li><li>在一个 Range 首部中，可以一次性请求多个部分，服务器会以 multipart 文件的形式将其返回</li><li>如果所请求的范围成功，服务器返回的是范围响应，需要使用 206 状态码</li><li>假如所请求的范围不合法，那么服务器会返回 416 状态码，表示客户端错误</li><li>如果所请求的范围不成功，服务器允许忽略 Range 首部，从而返回整个文件，状态码用 200</li></ul><h3 id="If-Range"><a href="#If-Range" class="headerlink" title="If-Range"></a>If-Range</h3><ul><li>HTTP 请求头字段用来使得 Range 头字段在一定条件下起作用</li><li>当字段值中的条件得到满足时，Range 头字段才会起作用，同时服务器回复 206(部分内容状态码)，以及 Range 头字段请求的相应部分</li><li>如果字段值中的条件没有得到满足，服务器将会返回 200 OK 状态码，并返回完整的请求资源</li><li>字段值中既可以用 Last-Modified 时间值用作验证，也可以用 ETag 标记作为验证，但不能将两者同时使用</li><li>If-Range 头字段通常用于断点续传的下载过程中，用来自从上次中断后，确保下载的资源没有发生改变</li><li>If-Range: Wed, 21 Oct 2015 07:28:00 GMT</li><li>If-Range: 675af34563dc-tr34</li></ul><h3 id="三种缓存阶段"><a href="#三种缓存阶段" class="headerlink" title="三种缓存阶段"></a>三种缓存阶段</h3><ul><li>强缓存阶段<ul><li>使用了 Expires 字段，当浏览器再次试图访问这个文件，发现有这个文件的缓存，那么就判断根据上一次的响应判断是否过期，如果没过期，使用缓存，加载文件</li></ul></li><li>协商（弱）缓存阶段<ul><li>当浏览器再次试图访问这个文件，发现缓存（Expires）过期，于是会在本次请求的请求头里携带 If-Modified-Since 和 If-None-Match（可能有）这两个字段，服务器通过这两个字段来判断资源是否有修改<ul><li>If-Modified-Since 的值用的是 Last-Modified 的值</li><li>If-None-Match 的值用的是 ETag</li><li>如果有修改则返回状态码 200 和新的内容</li></ul></li></ul></li><li>浏览器收到 200 状态码，按首次访问此文件的情况进行处理<ul><li>如果没有修改返回状态码 304</li></ul></li><li>浏览器收到 304，于是知道了本地缓存虽然过期但仍然可以用，于是加载本地缓存，然后根据新的返回的响应头来设置缓存</li><li>这一步有所差异，发现不同浏览器的处理是不同的，chrome 会为 304 设置缓存，firefox 则不会</li><li>启发式缓存阶段<ul><li>当响应头没有明确的缓存过期时间（Expires）字段，浏览器的下次请求不会直接进入协商缓存阶段，而是根据响应头中 2 个时间字段 Date 和 Last-Modified 之间的时间差值，取其值的 10%作为缓存时间周期</li></ul></li></ul><h3 id="校验器和校验"><a href="#校验器和校验" class="headerlink" title="校验器和校验"></a>校验器和校验</h3><ul><li>存在响应头中</li><li>在表示层发生变化时服务器和缓存使用校验进行通信</li><li>通过使用校验，缓存可以避免在本地已有副本时下载整个表示层。当他们不确定它是否仍然是最新的，所以需要校验器去校验</li><li>如果校验器不存在，并且没有任何新的信息（ Expires 或 Cache-Control ）可用，则缓存将根本不存储表示层</li><li>常用校验器<ul><li>Last-Modified：最通用的校验器是头部的 Last-Modified，用来标识文档最近一次修改的时间<ul><li>如果缓存存储了一个带有 Last-Modified 头部的表示层，缓存可以借助一个 If-Modified-Since 请求向服务端确认当前缓存的表示层在最近一次修改后是否发生了变更</li></ul></li><li>ETag：ETags 是一个由服务端生成的唯一标识符，并且每当表示层发生变更时 ETags 的值都会发生变化<ul><li>由于 ETag 是由服务端生成的，所以当缓存通过 If-None-Match 请求得知 ETag 在服务端匹配成功时，便可以确认缓存存储的表示层和服务端的内容是一致的，没有发生任何变化</li></ul></li></ul></li><li>几乎所有的缓存都使用了最近一次修改时间来作为校验器，同时 ETag 校验器的使用也在逐步增长<ul><li>大多数的现代网站服务器会自动地为静态内容（例如文件）同时生成 ETag 和 Last-Modified 这两个校验器，这个过程不需要任何人为参与。然而，服务器在为诸如 CGI、ASP 或者数据库站点这样的动态内容生成 ETag 和 Last-Modified 校验器时就显得力不从心了</li></ul></li><li>同时使用 Last-Modified 和 ETag 实体标签进行验证的原因：<ul><li>有些文档会被周期性的重写，但实际包含的数据是一样的（尽管内容没有变化，最后修改日期却会发生变化）</li><li>有些文档可能被修改了，但是修改并不重要，没必要更新缓存</li><li>有些服务器无法准确判定页面的最后修改日期</li><li>文档在毫秒级间隙发生变化（如实时监控），以秒为颗粒度的 Last-Modified 就不够用了</li></ul></li></ul><h3 id="强弱校验"><a href="#强弱校验" class="headerlink" title="强弱校验"></a>强弱校验</h3><table><thead><tr><th align="left">ETag1</th><th align="center">ETag2</th><th align="right">Strong Comparison</th><th align="center">Weak Comparison</th></tr></thead><tbody><tr><td align="left">W/“1”</td><td align="center">W/“1”</td><td align="right">no match</td><td align="center">match</td></tr><tr><td align="left">W/“1”</td><td align="center">W/“2”</td><td align="right">no match</td><td align="center">no match</td></tr><tr><td align="left">W/“1”</td><td align="center">“1”</td><td align="right">no match</td><td align="center">match</td></tr><tr><td align="left">“1”</td><td align="center">“1”</td><td align="right">match</td><td align="center">match</td></tr></tbody></table><h3 id="缓存服务器相关的两个字段"><a href="#缓存服务器相关的两个字段" class="headerlink" title="缓存服务器相关的两个字段"></a>缓存服务器相关的两个字段</h3><ul><li>Vary<ul><li>可以使用 Vary: User-Agent 来区分不同的客户端</li><li>源服务器启用了 gzip 压缩，但用户使用了比较旧的浏览器，不支持压缩，则可以设置 Vary: Accept-Encoding</li><li>也可以同时使用多个设置 Vary: User-Agent, Accept-Encoding</li></ul></li><li>Age<ul><li>指资源在缓存服务器存在的时长，用来区分请求的资源来自源服务器还是缓存服务器的缓存的<ul><li>Cache-Control: max-age=[秒] 就是 Age 的最大值</li></ul></li><li>需要结合 Date 字段进行判断</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Accept</span>-<span class="title class_">Ranges</span>: bytes</span><br><span class="line"><span class="title class_">Age</span>: <span class="number">1016859</span></span><br><span class="line"><span class="title class_">Cache</span>-<span class="title class_">Control</span>: max-age=<span class="number">2592000</span></span><br><span class="line"><span class="title class_">Content</span>-<span class="title class_">Length</span>: <span class="number">14119</span></span><br><span class="line"><span class="title class_">Content</span>-<span class="title class_">Type</span>: image/png</span><br><span class="line"><span class="title class_">Date</span>: <span class="title class_">Fri</span>, <span class="number">01</span> <span class="title class_">Dec</span> <span class="number">2017</span> <span class="number">12</span>:<span class="number">27</span>:<span class="number">25</span> <span class="variable constant_">GMT</span></span><br><span class="line"><span class="title class_">ETag</span>: <span class="string">&quot;5912bfd0-3727&quot;</span></span><br><span class="line"><span class="title class_">Expires</span>: <span class="title class_">Tue</span>, <span class="number">19</span> <span class="title class_">Dec</span> <span class="number">2017</span> <span class="number">17</span>:<span class="number">59</span>:<span class="number">46</span> <span class="variable constant_">GMT</span></span><br><span class="line"><span class="title class_">Last</span>-<span class="title class_">Modified</span>: <span class="title class_">Wed</span>, <span class="number">10</span> <span class="title class_">May</span> <span class="number">2017</span> <span class="number">07</span>:<span class="number">22</span>:<span class="number">56</span> <span class="variable constant_">GMT</span></span><br><span class="line"><span class="title class_">Ohc</span>-<span class="title class_">Response</span>-<span class="title class_">Time</span>: <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="title class_">Server</span>: bfe/<span class="number">1.0</span><span class="number">.8</span><span class="number">.13</span>-sslpool-patch</span><br><span class="line"></span><br><span class="line">例如有这样一个响应头，按 <span class="variable constant_">F5</span> 频繁刷新发现响应里的 <span class="title class_">Date</span> 没有改变，就说明命中了缓存服务器的缓存</span><br><span class="line">这个资源已经在缓存服务器存在了 <span class="number">1016859</span> 秒。如果文件被修改或替换，<span class="title class_">Age</span> 会重新由 <span class="number">0</span> 开始累计</span><br><span class="line"><span class="title class_">Age</span> 消息头的值通常接近于 <span class="number">0</span>。表示此消息对象刚刚从原始服务器获取不久；其他的值则是表示代理服务器当前的系统时间与此应答消息中的通用消息头 <span class="title class_">Date</span> 的值之差</span><br><span class="line">静态资源 <span class="title class_">Age</span> + 静态资源 <span class="title class_">Date</span> = 原服务端 <span class="title class_">Date</span></span><br></pre></td></tr></table></figure><h3 id="构建缓存感知站点的技巧"><a href="#构建缓存感知站点的技巧" class="headerlink" title="构建缓存感知站点的技巧"></a>构建缓存感知站点的技巧</h3><ul><li>除了以上使用新鲜度信息和校验，以下方法值得参考<ul><li>始终使用同一 url：如果向不同的页面、不同的用户提供同样的数据内容，或者同样的内容来自于不同的站点，这时应该使用一致的 URL<ul><li>缓存的黄金原则</li><li>最简单、最有效的让站点更利于缓存的方法</li></ul></li><li>使用一个包含图片和其他元素的公共库，并在不同的地方引用他们</li><li>使用缓存来存储图片和很少变更的页面<ul><li>这个的实现可以借助一个设置了很大的值的 Cache-Control: max-age 头部信息</li></ul></li><li>通过一个精确的最大存活时间或者过期时间让缓存识别出更新频繁的页面</li><li>如果资源（特别是可下载的文件）发生了变更，改变其名字<ul><li>通过这种方式，可以让资源在未来的某个时间过期，同时也能保证当前版本仍然是有效的。唯一需要设置一个短的过期时间的部分就是链接到这些资源的页面</li></ul></li><li>在必要的情况下再修改文件<ul><li>如果非必要的情况下也选择更新文件，那么每个文件都会有一个不真实的距离当前时间更近的 Last-Modified 值。</li><li>例如当准备更新站点时，不要复制整个站点文件进行更新，仅选择那些确实修改了的文件去执行更新操作</li></ul></li><li>只在有需要的情况下使用 cookie<ul><li>cookies 很难被缓存存储起来，并且在大多数场景都是没有必要的</li><li>如果必须用到 cookie 的话，那么也只在动态页面中使用 cookie</li></ul></li></ul></li></ul><h2 id="编写缓存可感知的脚本"><a href="#编写缓存可感知的脚本" class="headerlink" title="编写缓存可感知的脚本"></a>编写缓存可感知的脚本</h2><ul><li>如果脚本生成的输出在以后的某个时间（无论是几分钟还是几天后）都可以使用相同的请求重现，那么它应该是可缓存的</li><li>如果脚本的内容仅根据 URL 中的内容而变动，则它是可缓存的</li><li>如果其输出取决于 cookie、身份认证信息或其他外部标准，则它可能不是可缓存的</li><li>技巧：<ul><li>让脚本对缓存友好（同时有更好的表现）的最佳方式是只要脚本发生变化，就将其内容转储到一个普通文件中<ul><li>Web 服务器会把这个文件跟其它 Web 页面同等对待，为其生成验证器，让一切变得简单</li><li>只写内容变动过的文件，避免刷新新没有内容变动文件的 Last-Modified 时间</li></ul></li><li>设置一个跟寿命相关的头，可以让脚本在一定的限制条件下被缓存。<ul><li>虽然用 Expires 可以做到，但用 Cache-Control: max-age 可能更简单，它会按一定时间间隔刷新请求</li></ul></li><li>用脚本生成一个验证器，然后响应 If-Modified-Since 或 If-None-Match 请求<ul><li>这个操作可以通过解析 HTTP 头之后，适当的响应 304 Not Modified 来实现</li></ul></li><li>不使用 POST，除非确有必要<ul><li>多数缓存不会保存 POST 响应。如果你通过路径或查询（通过 GET）发送信息，缓存会保存这些信息以备将来使用</li></ul></li><li>不要在 URL 中嵌入用户特定的信息，除非生成的内容对每个用户都不同</li><li>不要以为所有用户请求都来自同一台主机，因为也有可能来自缓存</li><li>生成 Content-Length 响应头，它会允许通过长连接来响应脚本<ul><li>客户端可以在一个 TCP/IP 连接上请求多个表述，而不是为每个请求建立连接。这样网站看起来会更快</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Browser </tag>
            
            <tag> Catch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器相关面试题</title>
      <link href="/archives/interview/browser.html"/>
      <url>/archives/interview/browser.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-cookie，localStorage，sessionStorage，indexDB"><a href="#1-cookie，localStorage，sessionStorage，indexDB" class="headerlink" title="1. cookie，localStorage，sessionStorage，indexDB"></a>1. cookie，localStorage，sessionStorage，indexDB</h2><table><thead><tr><th align="center">特性</th><th align="center">cookie</th><th align="center">localStorage</th><th align="center">seeesionStorage</th><th align="center">indexDB</th></tr></thead><tbody><tr><td align="center">数据生命周期</td><td align="center">由服务器生成，需设置过期时间</td><td align="center">除非被清理，否则一直存在</td><td align="center">页面关闭就清理</td><td align="center">除非被清理，否则一直存在</td></tr><tr><td align="center">数据存储大小</td><td align="center">4K</td><td align="center">5M</td><td align="center">5M</td><td align="center">无限</td></tr><tr><td align="center">与服务端通信</td><td align="center">每次都会携带在 header 中</td><td align="center">不参与</td><td align="center">不参与</td><td align="center">不参与</td></tr></tbody></table><h2 id="2-IE-和标准下有哪些兼容性的写法"><a href="#2-IE-和标准下有哪些兼容性的写法" class="headerlink" title="2. IE 和标准下有哪些兼容性的写法"></a>2. IE 和标准下有哪些兼容性的写法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ev = ev || <span class="variable language_">window</span>.<span class="property">event</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span> || <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientWidth</span>;</span><br><span class="line"><span class="keyword">const</span> target = ev.<span class="property">srcElement</span> || ev.<span class="property">target</span>;</span><br></pre></td></tr></table></figure><h2 id="3-事件委托是什么"><a href="#3-事件委托是什么" class="headerlink" title="3. 事件委托是什么"></a>3. 事件委托是什么</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">利用事件冒泡的原理，让自己的所触发的事件，让他的父元素代替执行！</span><br></pre></td></tr></table></figure><h2 id="4-Javascript-的事件流模型都有什么"><a href="#4-Javascript-的事件流模型都有什么" class="headerlink" title="4. Javascript 的事件流模型都有什么?"></a>4. Javascript 的事件流模型都有什么?</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">“事件冒泡”：事件开始由最具体的元素接受，然后逐级向上传播</span><br><span class="line">“事件捕捉”：事件由最不具体的节点先接收，然后逐级向下，一直到最具体的</span><br><span class="line">“DOM事件流”：三个阶段：事件捕捉，目标阶段，事件冒泡</span><br></pre></td></tr></table></figure><h2 id="5-阻止默认行为"><a href="#5-阻止默认行为" class="headerlink" title="5. 阻止默认行为"></a>5. 阻止默认行为</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">stopDefault</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="comment">// 阻止默认浏览器动作(W3C)</span></span><br><span class="line">  <span class="keyword">if</span> (e &amp;&amp; e.<span class="property">preventDefault</span>) &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// IE中阻止函数器默认动作的方式</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">returnValue</span> = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-阻止冒泡"><a href="#6-阻止冒泡" class="headerlink" title="6. 阻止冒泡"></a>6. 阻止冒泡</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">stopBubble</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="comment">// 如果提供了事件对象，则这是一个非IE浏览器</span></span><br><span class="line">  <span class="keyword">if</span> (e &amp;&amp; e.<span class="property">stopPropagation</span>) &#123;</span><br><span class="line">    <span class="comment">// 因此它支持W3C的stopPropagation()方法</span></span><br><span class="line">    e.<span class="title function_">stopPropagation</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 否则，我们需要使用IE的方式来取消事件冒泡</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">cancelBubble</span> = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-一个页面从输入-URL-到页面加载显示完成，这个过程中都发生了什么？"><a href="#7-一个页面从输入-URL-到页面加载显示完成，这个过程中都发生了什么？" class="headerlink" title="7. 一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？"></a>7. 一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">（1）查找浏览器缓存</span><br><span class="line">（2）DNS解析、查找该域名对应的IP地址、重定向（301）、发出第二个GET请求</span><br><span class="line">（3）进行HTTP协议会话</span><br><span class="line">（4）客户端发送报头(请求报头)</span><br><span class="line">（5）服务器回馈报头(响应报头)</span><br><span class="line">（6）html文档开始下载</span><br><span class="line">（7）文档树建立，根据标记请求所需指定MIME类型的文件</span><br><span class="line">（8）文件显示</span><br></pre></td></tr></table></figure><h2 id="8-BFC-规范"><a href="#8-BFC-规范" class="headerlink" title="8. BFC 规范"></a>8. BFC 规范</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">块级格式化上下文，一个创建了新的BFC的盒子是独立布局的，盒子里面的子元素的样式不会影响到外面的元素。在同一个BFC中的两个毗邻的块级盒在垂直方向（和布局方向有关系）的margin会发生折叠。</span><br></pre></td></tr></table></figure><h2 id="9-documen-write-和-innerHTML-的区别"><a href="#9-documen-write-和-innerHTML-的区别" class="headerlink" title="9. documen.write 和 innerHTML 的区别"></a>9. documen.write 和 innerHTML 的区别</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* <span class="variable language_">document</span>.<span class="property">write</span>只能重绘整个页面</span><br><span class="line">* innerHTML可以重绘页面的一部分</span><br></pre></td></tr></table></figure><h2 id="10-图片懒加载与预加载"><a href="#10-图片懒加载与预加载" class="headerlink" title="10. 图片懒加载与预加载"></a>10. 图片懒加载与预加载</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.图片懒加载的原理就是暂时不设置图片的src属性，而是将图片的url隐藏起来，比如先写在data-src里面，等某些事件触发的时候(比如滚动到底部，点击加载图片)再将图片真实的url放进src属性里面，从而实现图片的延迟加载</span><br><span class="line">2.图片预加载，是指在一些需要展示大量图片的网站，实现图片的提前加载。从而提升用户体验。常用的方式有两种，一种是隐藏在css的background的url属性里面，一种是通过javascript的Image对象设置实例对象的src属性实现图片的预加载</span><br></pre></td></tr></table></figure><h2 id="11-浏览器渲染原理"><a href="#11-浏览器渲染原理" class="headerlink" title="11. 浏览器渲染原理"></a>11. 浏览器渲染原理</h2><ol><li>浏览器接收到 HTML 文件并转换为 DOM 树</li></ol><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217162704329.png" alt="image-20211217162704329"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1)浏览器接收到0,1这些字节数据以后，它会将这些字节数据转换为字符串，也就是我们写的代码;</span><br><span class="line">(2) 当数据转换为字符串以后，浏览器会先将这些字符串通过词法分析转换为标记（token），这一过程在词法分析中叫做标记化（tokenization）。</span><br><span class="line">(3) 当结束标记化后，这些标记会紧接着转换为 Node，最后这些 Node 会根据不同 Node 之前的联系构建为一颗 DOM 树。</span><br></pre></td></tr></table></figure><ol start="2"><li>将 CSS 文件转换为 CSSOM 树</li></ol><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217162743045.png" alt="image-20211217162743045"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在这一过程中，浏览器会确定下每一个节点的样式到底是什么，并且这一过程其实是很消耗资源的。因为样式你可以自行设置给某个节点，也可以通过继承获得。在这一过程中，浏览器得递归 CSSOM 树，然后确定具体的元素到底是什么样式。</span><br></pre></td></tr></table></figure><ol start="3"><li>生成渲染树</li></ol><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在这一过程中，不是简单的将两者合并就行了。渲染树只会包括需要显示的节点和这些节点的样式信息，如果某个节点是 display: none 的，那么就不会在渲染树中显示。</span><br><span class="line">当浏览器生成渲染树以后，就会根据渲染树来进行布局（也可以叫做回流），然后调用 GPU 绘制，合成图层，显示在屏幕上。</span><br></pre></td></tr></table></figure><h2 id="12-为什么操作-DOM-慢"><a href="#12-为什么操作-DOM-慢" class="headerlink" title="12. 为什么操作 DOM 慢"></a>12. 为什么操作 DOM 慢</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DOM 是属于渲染引擎中的东西，而 JS 又是 JS 引擎中的东西。当我们通过 JS 操作 DOM 的时候，其实这个操作涉及到了两个线程之间的通信，那么势必会带来一些性能上的损耗。操作 DOM 次数一多，也就等同于一直在进行线程之间的通信，并且操作 DOM 可能还会带来重绘回流的情况，所以也就导致了性能上的问题。</span><br></pre></td></tr></table></figure><h2 id="13-什么情况阻塞渲染"><a href="#13-什么情况阻塞渲染" class="headerlink" title="13. 什么情况阻塞渲染"></a>13. 什么情况阻塞渲染</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* 首先渲染的前提是生成渲染树，所以 HTML 和 CSS 肯定会阻塞渲染。如果你想渲染的越快，你越应该降低一开始需要渲染的文件大小，并且扁平层级，优化选择器。</span><br><span class="line">* 然后当浏览器在解析到 script 标签时，会暂停构建 DOM，完成后才会从暂停的地方重新开始。也就是说，如果你想首屏渲染的越快，就越不应该在首屏就加载 JS 文件，这也是都建议将 script 标签放在 body 标签底部的原因。</span><br><span class="line">* 当然在当下，并不是说 script 标签必须放在底部，因为你可以给 script 标签添加 defer 或者 async 属性。</span><br><span class="line">* 当 script 标签加上 defer 属性以后，表示该 JS 文件会并行下载，但是会放到 HTML 解析完成后顺序执行，所以对于这种情况你可以把 script 标签放在任意位置。</span><br><span class="line">* 对于没有任何依赖的 JS 文件可以加上 async 属性，表示 JS 文件下载和解析不会阻塞渲染。</span><br></pre></td></tr></table></figure><h2 id="14-重绘（Repaint）和回流（Reflow）"><a href="#14-重绘（Repaint）和回流（Reflow）" class="headerlink" title="14. 重绘（Repaint）和回流（Reflow）"></a>14. 重绘（Repaint）和回流（Reflow）</h2><ul><li><p>重绘是当节点需要更改外观而不会影响布局的，比如改变 color 就叫称为重绘</p></li><li><p>回流是布局或者几何属性需要改变就称为回流。</p></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">回流必定会发生重绘，重绘不一定会引发回流。回流所需的成本比重绘高的多，改变父节点里的子节点很可能会导致父节点的一系列回流。</span><br></pre></td></tr></table></figure><ul><li>以下几个动作可能会导致性能问题:</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">* 改变 window 大小</span><br><span class="line">* 改变字体</span><br><span class="line">* 添加或删除样式</span><br><span class="line">* 文字改变</span><br><span class="line">* 定位或者浮*</span><br><span class="line">* 盒模型</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Browser </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法函数</title>
      <link href="/archives/interview/algorithm.html"/>
      <url>/archives/interview/algorithm.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-childStr-为-abc-parentStr-为-wrlbgcab-返回-true-因为-wrlbgcab-包含了-abc-的一个排列-cab"><a href="#1-childStr-为-abc-parentStr-为-wrlbgcab-返回-true-因为-wrlbgcab-包含了-abc-的一个排列-cab" class="headerlink" title="1. childStr 为 abc,parentStr 为 wrlbgcab,返回 true,因为 wrlbgcab 包含了 abc 的一个排列 cab;"></a>1. childStr 为 abc,parentStr 为 wrlbgcab,返回 true,因为 wrlbgcab 包含了 abc 的一个排列 cab;</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isTrue</span>(<span class="params">childStr, child</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; child.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!childStr.<span class="title function_">includes</span>(child[i])) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getChild</span>(<span class="params">parentStr, childStr</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; parentStr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (childStr.<span class="title function_">includes</span>(parentStr[i])) &#123;</span><br><span class="line">      <span class="keyword">let</span> child = parentStr.<span class="title function_">slice</span>(i, i + childStr.<span class="property">length</span>);</span><br><span class="line">      <span class="keyword">if</span> (childStr.<span class="property">length</span> === child.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> res = <span class="title function_">isTrue</span>(childStr, child);</span><br><span class="line">        <span class="keyword">if</span> (res) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2222</span>, <span class="title function_">getChild</span>(<span class="string">&quot;wrlbgcab&quot;</span>, <span class="string">&quot;bcaw&quot;</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2222</span>, <span class="title function_">getChild</span>(<span class="string">&quot;wrlbgcab&quot;</span>, <span class="string">&quot;bca&quot;</span>)); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h2 id="2-斐波那契数列"><a href="#2-斐波那契数列" class="headerlink" title="2. 斐波那契数列"></a>2. 斐波那契数列</h2><p>斐波那契数列就是从 0 和 1 开始，后面的数都是前两个数之和 0，1，1，2，3，5，8，13，21，34，55，89….</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">lib</span>(<span class="params">n</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>(n + <span class="number">1</span>).<span class="title function_">fill</span>(<span class="literal">null</span>);</span><br><span class="line">  arr[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  arr[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">2</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    arr[i] = arr[i - <span class="number">2</span>] + arr[i - <span class="number">1</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">lib</span>(<span class="number">10</span>); <span class="comment">// 55</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite+vue3+ts+eslint+prettier+stylelint+husky+jest搭建项目</title>
      <link href="/archives/code/eslint.html"/>
      <url>/archives/code/eslint.html</url>
      
        <content type="html"><![CDATA[<h2 id="vite1-0"><a href="#vite1-0" class="headerlink" title="vite1.0"></a>vite1.0</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pnpm i -g create-vite-app</span><br><span class="line">create-vite-app vite-demo</span><br></pre></td></tr></table></figure><h2 id="vite2-0"><a href="#vite2-0" class="headerlink" title="vite2.0"></a>vite2.0</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm init @vitejs/app</span><br></pre></td></tr></table></figure><h2 id="引入-typescript"><a href="#引入-typescript" class="headerlink" title="引入 typescript"></a>引入 typescript</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i typescript -D</span><br></pre></td></tr></table></figure><p>在 项目根目录下创建 typescript 的配置文件 <strong>tsconfig.json</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;target&quot;</span>: <span class="string">&quot;esnext&quot;</span>,</span><br><span class="line">    <span class="string">&quot;module&quot;</span>: <span class="string">&quot;esnext&quot;</span>,</span><br><span class="line">    <span class="string">&quot;moduleResolution&quot;</span>: <span class="string">&quot;node&quot;</span>,</span><br><span class="line">    <span class="string">&quot;strict&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;forceConsistentCasingInFileNames&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;allowSyntheticDefaultImports&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;strictFunctionTypes&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;jsx&quot;</span>: <span class="string">&quot;react&quot;</span>,</span><br><span class="line">    <span class="string">&quot;baseUrl&quot;</span>: <span class="string">&quot;.&quot;</span>,</span><br><span class="line">    <span class="string">&quot;allowJs&quot;</span>: <span class="literal">true</span>, <span class="comment">// 允许编译器编译JS，JSX文件</span></span><br><span class="line">    <span class="string">&quot;checkJs&quot;</span>: <span class="literal">false</span>, <span class="comment">// 允许在JS文件中报错，通常与allowJS一起使用</span></span><br><span class="line">    <span class="string">&quot;sourceMap&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;esModuleInterop&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;noUnusedLocals&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;noUnusedParameters&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;experimentalDecorators&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;skipLibCheck&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;types&quot;</span>: [<span class="string">&quot;vite/client&quot;</span>, <span class="string">&quot;jest&quot;</span>, <span class="string">&quot;pinia-plugin-persist&quot;</span>],</span><br><span class="line">    <span class="string">&quot;paths&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;@/*&quot;</span>: [<span class="string">&quot;src/*&quot;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;lib&quot;</span>: [<span class="string">&quot;esnext&quot;</span>, <span class="string">&quot;dom&quot;</span>, <span class="string">&quot;dom.iterable&quot;</span>, <span class="string">&quot;scripthost&quot;</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;include&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;src/**/*.ts&quot;</span>,</span><br><span class="line">    <span class="string">&quot;src/**/*.d.ts&quot;</span>,</span><br><span class="line">    <span class="string">&quot;src/**/*.tsx&quot;</span>,</span><br><span class="line">    <span class="string">&quot;src/**/*.vue&quot;</span>,</span><br><span class="line">    <span class="string">&quot;tests/**/*.ts&quot;</span>,</span><br><span class="line">    <span class="string">&quot;tests/**/*.tsx&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;exclude&quot;</span>: [<span class="string">&quot;node_modules&quot;</span>, <span class="string">&quot;dist&quot;</span>, <span class="string">&quot;**/SwiperScroll.vue&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把 <strong>main.js</strong> 修改成 <strong>main.ts</strong><br>在根目录，打开<strong>Index.html</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;module&quot;</span> src=<span class="string">&quot;/src/main.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="comment">// 修改为：</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/src/main.ts&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="配置-jsx-支持"><a href="#配置-jsx-支持" class="headerlink" title="配置 jsx 支持"></a>配置 jsx 支持</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i -D @vitejs/plugin-vue-jsx</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vite.config.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> vueJsx <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue-jsx&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>(), <span class="title function_">vueJsx</span>()],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="加入-vue-router、pinia，并实现-pinia-持久化"><a href="#加入-vue-router、pinia，并实现-pinia-持久化" class="headerlink" title="加入 vue-router、pinia，并实现 pinia 持久化"></a>加入 vue-router、pinia，并实现 pinia 持久化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i vue-router pinia pinia-plugin-persist -S</span><br></pre></td></tr></table></figure><p>在根目录下创建  <strong>store/index.ts</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Description: index</span></span><br><span class="line"><span class="comment"> * @Autor: huoyou</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> type &#123; <span class="title class_">App</span> &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> piniaPersist <span class="keyword">from</span> <span class="string">&quot;pinia-plugin-persist&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">setupStore</span>(<span class="params">app: App&lt;Element&gt;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>();</span><br><span class="line">  pinia.<span class="title function_">use</span>(piniaPersist);</span><br><span class="line">  app.<span class="title function_">use</span>(pinia);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在根目录下创建  <strong>router/index.ts</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Description: router</span></span><br><span class="line"><span class="comment"> * @Autor: huoyou</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> type &#123; <span class="title class_">App</span> &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useUserStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/store/useUser&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useKeepAliveStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/store/useKeepAlive&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  createRouter,</span><br><span class="line">  createWebHashHistory,</span><br><span class="line">  <span class="title class_">RouteRecordRaw</span>,</span><br><span class="line">  <span class="title class_">RouteLocationNormalized</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line">interface <span class="title class_">IRoute</span> <span class="keyword">extends</span> <span class="title class_">RouteLocationNormalized</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: string;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 自动注入modules下的路由</span></span><br><span class="line"><span class="keyword">const</span> modulesFiles = <span class="keyword">import</span>.<span class="property">meta</span>.<span class="title function_">globEager</span>(<span class="string">&quot;./modules/**/*.(ts|js)&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="attr">routerList</span>: <span class="title class_">Array</span>&lt;<span class="title class_">RouteRecordRaw</span>&gt; = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> path <span class="keyword">in</span> modulesFiles) &#123;</span><br><span class="line">  routerList = [</span><br><span class="line">    ...routerList,</span><br><span class="line">    ...(modulesFiles[path].<span class="property">default</span> || modulesFiles[path]),</span><br><span class="line">  ];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHashHistory</span>(), <span class="comment">// hash模式: createWebHashHistory,   history模式: createWebHistory</span></span><br><span class="line">  <span class="attr">routes</span>: routerList,</span><br><span class="line">  <span class="comment">// @ts-ignore</span></span><br><span class="line">  <span class="title function_">scrollBehavior</span>(<span class="params">to, <span class="keyword">from</span>, savedPosition</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (savedPosition) &#123;</span><br><span class="line">      <span class="comment">// 后退才有savedPosition</span></span><br><span class="line">      <span class="keyword">return</span> savedPosition;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (to.<span class="property">meta</span>.<span class="property">isKeepAlive</span>) &#123;</span><br><span class="line">        to.<span class="property">meta</span>.<span class="property">scrollTop</span> = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollTop</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> &#123; <span class="attr">left</span>: <span class="number">0</span>, <span class="attr">top</span>: to.<span class="property">meta</span>.<span class="property">scrollTop</span> || <span class="number">0</span> &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// @ts-ignore</span></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to: IRoute, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>();</span><br><span class="line">  <span class="keyword">const</span> keepAliveStore = <span class="title function_">useKeepAliveStore</span>();</span><br><span class="line">  to.<span class="property">meta</span>.<span class="property">isKeepAlive</span> &amp;&amp; keepAliveStore.<span class="title function_">setKeepAlive</span>(to.<span class="property">name</span>);</span><br><span class="line">  <span class="keyword">if</span> (to.<span class="property">matched</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> res.<span class="property">meta</span>.<span class="property">requireAuth</span>)) &#123;</span><br><span class="line">    <span class="comment">// 判断是否需要登录权限</span></span><br><span class="line">    <span class="keyword">if</span> (userStore.<span class="property">token</span>) &#123;</span><br><span class="line">      <span class="title function_">next</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">next</span>(&#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">`/login`</span>, <span class="comment">// 未登录则跳转至login页面</span></span><br><span class="line">        <span class="attr">query</span>: &#123; <span class="attr">redirect</span>: to.<span class="property">fullPath</span> &#125;, <span class="comment">// 登陆成功后回到当前页面，这里传值给login页面，to.fullPath为当前点击的页面</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">afterEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 添加转场效果</span></span><br><span class="line">  <span class="keyword">const</span> toDepth = to.<span class="property">path</span>.<span class="title function_">split</span>(<span class="string">&quot;/&quot;</span>).<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">const</span> fromDepth = <span class="keyword">from</span>.<span class="property">path</span>.<span class="title function_">split</span>(<span class="string">&quot;/&quot;</span>).<span class="property">length</span>;</span><br><span class="line">  to.<span class="property">meta</span>.<span class="property">transitionName</span> = toDepth &lt; fromDepth ? <span class="string">&quot;slide-right&quot;</span> : <span class="string">&quot;slide-left&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">setupRouter</span>(<span class="params">app: App&lt;Element&gt;</span>) &#123;</span><br><span class="line">  app.<span class="title function_">use</span>(router);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><p><strong>main.ts</strong>  修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router, &#123; setupRouter &#125; <span class="keyword">from</span> <span class="string">&quot;@/router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; setupStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/store&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> requirePlugins <span class="keyword">from</span> <span class="string">&quot;./plugins&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;lib-flexible/flexible&quot;</span>; <span class="comment">// 用于设置rem基准值</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;vite-plugin-svg-icons/register&quot;</span>; <span class="comment">// 注入svg</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line"><span class="comment">// router</span></span><br><span class="line"><span class="title function_">setupRouter</span>(app);</span><br><span class="line"><span class="comment">// store</span></span><br><span class="line"><span class="title function_">setupStore</span>(app);</span><br><span class="line"><span class="comment">// ui &amp; global components &amp; directives &amp; other plugins</span></span><br><span class="line"><span class="title function_">requirePlugins</span>(app);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">isReady</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>components/HelloWord.vue</strong>  修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;inCrement&quot;</span>&gt;</span> count is: <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">import</span> &#123; defineComponent, computed &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">import</span> &#123; key &#125; <span class="keyword">from</span> <span class="string">&#x27;../store&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineComponent</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">name</span>: <span class="string">&#x27;HelloWorld&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">props</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">msg</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">type</span>: <span class="title class_">String</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">default</span>: <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> store = <span class="title function_">useStore</span>(key)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> count = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> store.<span class="property">state</span>.<span class="property">count</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        count,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">inCrement</span>: <span class="function">() =&gt;</span> store.<span class="title function_">commit</span>(<span class="string">&#x27;increment&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="按需引入-vant，移动端适配-rem"><a href="#按需引入-vant，移动端适配-rem" class="headerlink" title="按需引入 vant，移动端适配 rem"></a>按需引入 vant，移动端适配 rem</h2><ul><li>引入 vant</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pnpm i vant@next -S</span><br><span class="line">pnpm i vite-plugin-style -D</span><br></pre></td></tr></table></figure><p>vite.config.js 中加入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins</span>: [</span><br><span class="line">  ...<span class="comment">// 新增</span></span><br><span class="line">  <span class="title function_">styleImport</span>(&#123;</span><br><span class="line">    <span class="attr">libs</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">libraryName</span>: <span class="string">&quot;vant&quot;</span>,</span><br><span class="line">        <span class="attr">esModule</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">resolveStyle</span>: <span class="function">(<span class="params">name</span>) =&gt;</span> <span class="string">`vant/es/<span class="subst">$&#123;name&#125;</span>/style`</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;),</span><br><span class="line">];</span><br></pre></td></tr></table></figure><ul><li>移动端适配</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i amfe-flexible -S</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i postcss postcss-pxtorem autoprefixer@8.0.0 -D</span><br></pre></td></tr></table></figure><p>根目录下 postcss.config.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: &#123;</span><br><span class="line">    <span class="attr">autoprefixer</span>: &#123;&#125;,</span><br><span class="line">    <span class="comment">// 将单位转换为rem</span></span><br><span class="line">    <span class="string">&quot;postcss-pxtorem&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">rootValue</span>: <span class="number">37.5</span>, <span class="comment">// 值：设计图宽度/20  （目标是将屏幕转化为20rem）</span></span><br><span class="line">      <span class="attr">propList</span>: [<span class="string">&quot;*&quot;</span>],</span><br><span class="line">      <span class="comment">// 该项仅在使用 Circle 组件时需要</span></span><br><span class="line">      <span class="comment">// van-circle__layer 原因参见 https://github.com/youzan/vant/issues/1948</span></span><br><span class="line">      <span class="attr">selectorBlackList</span>: [<span class="string">&quot;van-circle__layer&quot;</span>, <span class="string">&quot;.norem&quot;</span>], <span class="comment">// 过滤掉.norem-开头的class，不进行rem转换</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>main.js 中加入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;amfe-flexible&quot;</span>; <span class="comment">// 用于设置rem基准值</span></span><br></pre></td></tr></table></figure><p>新增.browserslistrc</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># @<span class="title class_">Description</span>: 浏览器兼容</span><br><span class="line"># @<span class="title class_">Autor</span>: huoyou</span><br><span class="line"># @<span class="title class_">Date</span>: <span class="number">2021</span>-<span class="number">07</span>-<span class="number">23</span> <span class="number">11</span>:<span class="number">08</span>:<span class="number">28</span></span><br><span class="line"># @<span class="title class_">LastEditTime</span>: <span class="number">2021</span>-<span class="number">07</span>-<span class="number">23</span> <span class="number">11</span>:<span class="number">21</span>:<span class="number">49</span></span><br><span class="line"></span><br><span class="line">&gt; <span class="number">1</span>%</span><br><span class="line">last <span class="number">2</span> versions</span><br><span class="line">not dead</span><br><span class="line">iOS &gt;= <span class="number">7</span></span><br><span class="line"><span class="title class_">Android</span> &gt;= <span class="number">4.1</span></span><br><span class="line"><span class="variable constant_">IE</span> &gt;= <span class="number">10</span></span><br></pre></td></tr></table></figure><h2 id="（推荐）另一种方式按需引入-vant-自动引入-vue、vue-router、hooks"><a href="#（推荐）另一种方式按需引入-vant-自动引入-vue、vue-router、hooks" class="headerlink" title="（推荐）另一种方式按需引入 vant, 自动引入 vue、vue-router、hooks"></a>（推荐）另一种方式按需引入 vant, 自动引入 vue、vue-router、hooks</h2><h3 id="按需引入组件"><a href="#按需引入组件" class="headerlink" title="按需引入组件"></a>按需引入组件</h3><p><a href="https://juejin.cn/post/7012446423367024676#heading-11">参考链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i unplugin-vue-components -D</span><br></pre></td></tr></table></figure><p>vite.config.js 配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/vite&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  <span class="comment">// AntDesignVueResolver,</span></span><br><span class="line">  <span class="comment">// ElementPlusResolver,</span></span><br><span class="line">  <span class="title class_">VantResolver</span></span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/resolvers&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">plugins</span>: [</span><br><span class="line">      <span class="title function_">vue</span>(),</span><br><span class="line">      <span class="comment">// @ts-ignore</span></span><br><span class="line">  <span class="comment">// 新增</span></span><br><span class="line">      <span class="title class_">Components</span>(&#123;</span><br><span class="line">        <span class="attr">resolvers</span>: [<span class="title class_">VantResolver</span>()],</span><br><span class="line">        <span class="attr">extensions</span>: [<span class="string">&#x27;vue&#x27;</span>],</span><br><span class="line">        <span class="attr">dts</span>: <span class="string">&#x27;src/types/components.d.ts&#x27;</span>,</span><br><span class="line">        <span class="attr">directoryAsNamespace</span>: <span class="literal">true</span></span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="title function_">viteSvgIcons</span>(&#123;</span><br><span class="line">        <span class="comment">// Specify the icon folder to be cached</span></span><br><span class="line">        <span class="attr">iconDirs</span>: [path.<span class="title function_">resolve</span>(process.<span class="title function_">cwd</span>(), <span class="string">&#x27;./src/assets/icons&#x27;</span>)],</span><br><span class="line">        <span class="comment">// Specify symbolId format</span></span><br><span class="line">        <span class="attr">symbolId</span>: <span class="string">&#x27;icon-[dir]-[name]&#x27;</span></span><br><span class="line">      &#125;)</span><br><span class="line">    ],</span><br></pre></td></tr></table></figure><h3 id="自动引入-vue-vue-router-hooks-等"><a href="#自动引入-vue-vue-router-hooks-等" class="headerlink" title="自动引入 vue/vue-router/hooks 等"></a>自动引入 vue/vue-router/hooks 等</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i unplugin-auto-import -D</span><br></pre></td></tr></table></figure><p>vite.config.js 配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AutoImport</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-auto-import/vite&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> =</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="attr">imports</span>: [<span class="string">&#x27;vue&#x27;</span>, <span class="string">&#x27;vue-router&#x27;</span>, <span class="string">&#x27;vuex&#x27;</span>],</span><br><span class="line">      <span class="attr">dts</span>: <span class="string">&#x27;src/types/auto-imports.d.ts&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>eslint 插件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i vue-global-api -D</span><br></pre></td></tr></table></figure><p>.eslintrc.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">globals</span>: &#123;</span><br><span class="line">   <span class="title class_">Message</span>: <span class="literal">true</span>,</span><br><span class="line">   <span class="attr">env</span>: <span class="literal">true</span>,</span><br><span class="line">   <span class="comment">// 新增</span></span><br><span class="line">   <span class="attr">useRoute</span>: <span class="literal">true</span>,</span><br><span class="line">   <span class="attr">useRouter</span>: <span class="literal">true</span>,</span><br><span class="line">   <span class="attr">useStore</span>: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">extends</span>: [</span><br><span class="line">  ...</span><br><span class="line">  <span class="string">&#x27;vue-global-api&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>使用前：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  <span class="keyword">import</span> &#123;(ref, computed, watch)&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span> <span class="keyword">const</span> counter = <span class="title function_">ref</span>(<span class="number">0</span>) <span class="keyword">const</span></span><br><span class="line">  doubled = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> counter.<span class="property">value</span> * <span class="number">2</span>) <span class="title function_">watch</span>(doubled, <span class="function">(<span class="params">v</span>) =&gt;</span>&#123;<span class="string">&quot; &quot;</span>&#125;</span><br><span class="line">  &#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;New value: &quot;</span> + v)&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>使用后：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  <span class="keyword">const</span> counter = <span class="title function_">ref</span>(<span class="number">0</span>) <span class="keyword">const</span> doubled = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> counter.<span class="property">value</span> * <span class="number">2</span>)</span><br><span class="line">  <span class="title function_">watch</span>(doubled, <span class="function">(<span class="params">v</span>) =&gt;</span> &#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;New value: &quot;</span> + v)&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="配置-eslint、prettier"><a href="#配置-eslint、prettier" class="headerlink" title="配置 eslint、prettier"></a>配置 eslint、prettier</h2><ul><li>vue</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i eslint prettier eslint-config-prettier eslint-plugin-prettier eslint-plugin-vue @typescript-eslint/parser @typescript-eslint/eslint-plugin -D</span><br></pre></td></tr></table></figure><ul><li><p>eslint: ESLint 的核心代码</p></li><li><p>prettier：prettier 插件的核心代码</p></li><li><p>eslint-config-prettier：解决 ESLint 中的样式规范和 prettier 中样式规范的冲突，以 prettier 的样式规范为准，使 ESLint 中的样式规范自动失效</p></li><li><p>eslint-plugin-prettier：将 prettier 作为 ESLint 规范来使用</p></li><li><p>eslint-plugin-vue：包含常用的 vue 规范</p></li><li><p>@typescript-eslint/parser：ESLint 的解析器，用于解析 typescript，从而检查和规范 Typescript 代码</p></li><li><p>@typescript-eslint/eslint-plugin：包含了各类定义好的检测 Typescript 代码的规范</p></li><li><p>react</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i eslint prettier eslint-config-prettier eslint-plugin-prettier eslint-plugin-react @typescript-eslint/parser @typescript-eslint/eslint-plugin -D</span><br></pre></td></tr></table></figure><p><em>​</em></p><p><em>注意: 如果不生效时, 考虑是否版本问题, <a href="mailto:&#101;&#115;&#x6c;&#105;&#110;&#x74;&#x40;&#54;&#46;&#x38;&#46;&#x30;">&#101;&#115;&#x6c;&#105;&#110;&#x74;&#x40;&#54;&#46;&#x38;&#46;&#x30;</a> <a href="mailto:&#101;&#115;&#x6c;&#105;&#x6e;&#x74;&#x2d;&#x70;&#108;&#117;&#103;&#x69;&#x6e;&#x2d;&#x70;&#114;&#101;&#x74;&#x74;&#105;&#101;&#x72;&#x40;&#x33;&#46;&#x34;&#x2e;&#x30;">&#101;&#115;&#x6c;&#105;&#x6e;&#x74;&#x2d;&#x70;&#108;&#117;&#103;&#x69;&#x6e;&#x2d;&#x70;&#114;&#101;&#x74;&#x74;&#105;&#101;&#x72;&#x40;&#x33;&#46;&#x34;&#x2e;&#x30;</a></em><br>vue 中，在根目录下建立 eslint 配置文件： <strong>.eslintrc.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@module</span> .eslintrc</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: huoyou</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: eslint配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 所需插件</span></span><br><span class="line"><span class="comment"> * prettier // 规则见 https://prettier.io/docs/en/options.html</span></span><br><span class="line"><span class="comment"> * eslint // 规则见 https://cn.eslint.org/docs/rules/</span></span><br><span class="line"><span class="comment"> * eslint-plugin-vue 规则见 https://github.com/vuejs/eslint-plugin-vue</span></span><br><span class="line"><span class="comment"> * eslint-plugin-prettier // 将prettier作为ESLint规范来使用</span></span><br><span class="line"><span class="comment"> * eslint-config-prettier</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@typescript</span>-eslint/eslint-plugin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@typescript</span>-eslint/parser // ESLint的解析器，用于解析typescript，从而检查和规范Typescript代码</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &quot;off&quot; 或 0 - 关闭规则</span></span><br><span class="line"><span class="comment"> * &quot;warn&quot; 或 1 - 开启规则，使用警告级别的错误：warn (不会导致程序退出)</span></span><br><span class="line"><span class="comment"> * &quot;error&quot; 或 2 - 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">root</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">env</span>: &#123;</span><br><span class="line">    <span class="attr">browser</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">node</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">globals</span>: &#123;</span><br><span class="line">    <span class="title class_">Message</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">env</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">useRoute</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">useRouter</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">useStore</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/* 指定如何解析语法。可以为空，但若不为空，只能配该值，原因见下文。*/</span></span><br><span class="line">  <span class="attr">parser</span>: <span class="string">&quot;vue-eslint-parser&quot;</span>,</span><br><span class="line">  <span class="comment">/* 优先级低于parse的语法解析配置 */</span></span><br><span class="line">  <span class="attr">parserOptions</span>: &#123;</span><br><span class="line">    <span class="attr">parser</span>: <span class="string">&quot;@typescript-eslint/parser&quot;</span>, <span class="comment">// Specifies the ESLint parser</span></span><br><span class="line">    <span class="attr">ecmaVersion</span>: <span class="number">2020</span>, <span class="comment">// Allows for the parsing of modern ECMAScript features</span></span><br><span class="line">    <span class="attr">sourceType</span>: <span class="string">&quot;module&quot;</span>, <span class="comment">// Allows for the use of imports</span></span><br><span class="line">    <span class="attr">ecmaFeatures</span>: &#123;</span><br><span class="line">      <span class="comment">// tsx: true, // Allows for the parsing of JSX</span></span><br><span class="line">      <span class="attr">jsx</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">extends</span>: [</span><br><span class="line">    <span class="string">&quot;vue-global-api&quot;</span>,</span><br><span class="line">    <span class="string">&quot;eslint:recommended&quot;</span>,</span><br><span class="line">    <span class="string">&quot;plugin:vue/vue3-recommended&quot;</span>,</span><br><span class="line">    <span class="string">&quot;plugin:@typescript-eslint/recommended&quot;</span>,</span><br><span class="line">    <span class="string">&quot;prettier&quot;</span>,</span><br><span class="line">    <span class="string">&quot;plugin:prettier/recommended&quot;</span>,</span><br><span class="line">    <span class="string">&quot;plugin:jest/recommended&quot;</span>,</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="string">&quot;vue&quot;</span>],</span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&quot;no-console&quot;</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;production&quot;</span> ? <span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;no-debugger&quot;</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;production&quot;</span> ? <span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">eqeqeq</span>: <span class="number">2</span>, <span class="comment">// 要求使用 === 和 !==</span></span><br><span class="line">    <span class="string">&quot;vue/eqeqeq&quot;</span>: <span class="number">2</span>, <span class="comment">// 要求使用 === 和 !==</span></span><br><span class="line">    <span class="string">&quot;no-undef&quot;</span>: <span class="number">2</span>, <span class="comment">// 禁用未声明的变量</span></span><br><span class="line">    <span class="string">&quot;vue/require-v-for-key&quot;</span>: <span class="number">1</span>, <span class="comment">// 当v-for写在自定义组件上时，它需要同时使用v-bind：key。在其他元素上，v-bind：key也最好写。</span></span><br><span class="line">    <span class="string">&quot;no-unused-vars&quot;</span>: <span class="number">0</span>, <span class="comment">// 禁止出现未使用过的变量</span></span><br><span class="line">    <span class="string">&quot;vars-on-top&quot;</span>: <span class="number">0</span>, <span class="comment">// 要求所有的 var 声明出现在它们所在的作用域顶部</span></span><br><span class="line">    <span class="string">&quot;prefer-destructuring&quot;</span>: <span class="number">0</span>, <span class="comment">// 优先使用数组和对象解构</span></span><br><span class="line">    <span class="string">&quot;no-useless-concat&quot;</span>: <span class="number">1</span>, <span class="comment">// 禁止不必要的字符串字面量或模板字面量的连接</span></span><br><span class="line">    <span class="string">&quot;no-useless-escape&quot;</span>: <span class="number">0</span>, <span class="comment">// 禁止不必要的转义字符</span></span><br><span class="line">    <span class="string">&quot;consistent-return&quot;</span>: <span class="number">0</span>, <span class="comment">// 要求 return 语句要么总是指定返回的值，要么不指定</span></span><br><span class="line">    <span class="attr">camelcase</span>: <span class="number">0</span>, <span class="comment">// 强制使用骆驼拼写法命名约定</span></span><br><span class="line">    <span class="string">&quot;no-redeclare&quot;</span>: <span class="number">1</span>, <span class="comment">// 禁止多次声明同一变量</span></span><br><span class="line">    <span class="string">&quot;array-callback-return&quot;</span>: <span class="number">1</span>, <span class="comment">// 强制数组方法的回调函数中有 return 语句,Array有几种过滤，映射和折叠的方法。如果我们忘记return在这些回调中写入语句，那可能是一个错误。</span></span><br><span class="line">    <span class="string">&quot;default-case&quot;</span>: <span class="number">1</span>, <span class="comment">// 要求 switch 语句中有 default 分支</span></span><br><span class="line">    <span class="string">&quot;no-fallthrough&quot;</span>: <span class="number">1</span>, <span class="comment">// 禁止 case 语句落空</span></span><br><span class="line">    <span class="string">&quot;no-lonely-if&quot;</span>: <span class="number">1</span>, <span class="comment">// 禁止 if 作为唯一的语句出现在 else 语句中.如果一个if陈述是该else块中唯一的陈述，那么使用一个else if表格通常会更清晰。</span></span><br><span class="line">    <span class="string">&quot;no-irregular-whitespace&quot;</span>: <span class="number">1</span>, <span class="comment">// 禁止在字符串和注释之外不规则的空白</span></span><br><span class="line">    <span class="string">&quot;prefer-const&quot;</span>: <span class="number">0</span>, <span class="comment">// 要求使用 const 声明那些声明后不再被修改的变量.如果一个变量从不重新分配，使用const声明更好。const 声明告诉读者，“这个变量永远不会被重新分配，”减少认知负荷并提高可维护性。</span></span><br><span class="line">    <span class="string">&quot;no-use-before-define&quot;</span>: <span class="number">1</span>, <span class="comment">// 禁止在变量定义之前使用它们</span></span><br><span class="line">    <span class="string">&quot;vue/attributes-order&quot;</span>: <span class="number">2</span>, <span class="comment">// vue api使用顺序</span></span><br><span class="line">    <span class="string">&quot;vue/order-in-components&quot;</span>: [</span><br><span class="line">      <span class="number">2</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">order</span>: [</span><br><span class="line">          <span class="string">&quot;el&quot;</span>,</span><br><span class="line">          <span class="string">&quot;name&quot;</span>,</span><br><span class="line">          <span class="string">&quot;key&quot;</span>,</span><br><span class="line">          <span class="string">&quot;parent&quot;</span>,</span><br><span class="line">          <span class="string">&quot;functional&quot;</span>,</span><br><span class="line">          [<span class="string">&quot;delimiters&quot;</span>, <span class="string">&quot;comments&quot;</span>],</span><br><span class="line">          [<span class="string">&quot;components&quot;</span>, <span class="string">&quot;directives&quot;</span>, <span class="string">&quot;filters&quot;</span>],</span><br><span class="line">          <span class="string">&quot;extends&quot;</span>,</span><br><span class="line">          <span class="string">&quot;mixins&quot;</span>,</span><br><span class="line">          [<span class="string">&quot;provide&quot;</span>, <span class="string">&quot;inject&quot;</span>],</span><br><span class="line">          <span class="string">&quot;validate&quot;</span>,</span><br><span class="line">          <span class="string">&quot;scrollToTop&quot;</span>,</span><br><span class="line">          <span class="string">&quot;transition&quot;</span>,</span><br><span class="line">          <span class="string">&quot;loading&quot;</span>,</span><br><span class="line">          <span class="string">&quot;inheritAttrs&quot;</span>,</span><br><span class="line">          <span class="string">&quot;model&quot;</span>,</span><br><span class="line">          [<span class="string">&quot;props&quot;</span>, <span class="string">&quot;propsData&quot;</span>],</span><br><span class="line">          <span class="string">&quot;emits&quot;</span>,</span><br><span class="line">          <span class="string">&quot;setup&quot;</span>,</span><br><span class="line">          <span class="string">&quot;asyncData&quot;</span>,</span><br><span class="line">          <span class="string">&quot;data&quot;</span>,</span><br><span class="line">          <span class="string">&quot;computed&quot;</span>,</span><br><span class="line">          <span class="string">&quot;watch&quot;</span>,</span><br><span class="line">          <span class="string">&quot;created&quot;</span>,</span><br><span class="line">          <span class="string">&quot;mounted&quot;</span>,</span><br><span class="line">          <span class="string">&quot;methods&quot;</span>,</span><br><span class="line">          [<span class="string">&quot;template&quot;</span>, <span class="string">&quot;render&quot;</span>],</span><br><span class="line">          <span class="string">&quot;renderError&quot;</span>,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;vue/no-multiple-template-root&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;@typescript-eslint/explicit-module-boundary-types&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;@typescript-eslint/no-var-requires&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;@typescript-eslint/no-unused-vars&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;@typescript-eslint/ban-ts-comment&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;@typescript-eslint/no-explicit-any&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;@typescript-eslint/no-empty-function&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">overrides</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">files</span>: [<span class="string">&quot;**/__tests__/*.&#123;j,t&#125;s?(x)&quot;</span>],</span><br><span class="line">      <span class="attr">env</span>: &#123;</span><br><span class="line">        <span class="attr">mocha</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>react 中，在根目录下建立 eslint 配置文件： <strong>.eslintrc.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@module</span> .eslintrc</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: huoyou</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: eslint配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 所需插件</span></span><br><span class="line"><span class="comment"> * prettier // 规则见 https://prettier.io/docs/en/options.html</span></span><br><span class="line"><span class="comment"> * eslint // 规则见 https://cn.eslint.org/docs/rules/</span></span><br><span class="line"><span class="comment"> * eslint-plugin-react 规则见 https://github.com/yannickcr/eslint-plugin-react</span></span><br><span class="line"><span class="comment"> * eslint-plugin-prettier // 将prettier作为ESLint规范来使用</span></span><br><span class="line"><span class="comment"> * eslint-config-prettier</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@typescript</span>-eslint/eslint-plugin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@typescript</span>-eslint/parser // ESLint的解析器，用于解析typescript，从而检查和规范Typescript代码</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &quot;off&quot; 或 0 - 关闭规则</span></span><br><span class="line"><span class="comment"> * &quot;warn&quot; 或 1 - 开启规则，使用警告级别的错误：warn (不会导致程序退出)</span></span><br><span class="line"><span class="comment"> * &quot;error&quot; 或 2 - 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">root</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">env</span>: &#123;</span><br><span class="line">    <span class="attr">browser</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">node</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/* 优先级低于parse的语法解析配置 */</span></span><br><span class="line">  <span class="attr">parserOptions</span>: &#123;</span><br><span class="line">    <span class="attr">parser</span>: <span class="string">&quot;@typescript-eslint/parser&quot;</span>, <span class="comment">// Specifies the ESLint parser</span></span><br><span class="line">    <span class="attr">ecmaVersion</span>: <span class="number">2020</span>, <span class="comment">// Allows for the parsing of modern ECMAScript features</span></span><br><span class="line">    <span class="attr">sourceType</span>: <span class="string">&quot;module&quot;</span>, <span class="comment">// Allows for the use of imports</span></span><br><span class="line">    <span class="attr">ecmaFeatures</span>: &#123;</span><br><span class="line">      <span class="comment">// tsx: true, // Allows for the parsing of JSX</span></span><br><span class="line">      <span class="attr">jsx</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">extends</span>: [</span><br><span class="line">    <span class="string">&quot;eslint:recommended&quot;</span>,</span><br><span class="line">    <span class="string">&quot;plugin:react/recommended&quot;</span>,</span><br><span class="line">    <span class="string">&quot;plugin:@typescript-eslint/recommended&quot;</span>,</span><br><span class="line">    <span class="string">&quot;prettier&quot;</span>,</span><br><span class="line">    <span class="string">&quot;plugin:prettier/recommended&quot;</span>,</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="string">&quot;react&quot;</span>],</span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&quot;no-console&quot;</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;production&quot;</span> ? <span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;no-debugger&quot;</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;production&quot;</span> ? <span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">eqeqeq</span>: <span class="number">2</span>, <span class="comment">// 要求使用 === 和 !==</span></span><br><span class="line">    <span class="string">&quot;vue/eqeqeq&quot;</span>: <span class="number">2</span>, <span class="comment">// 要求使用 === 和 !==</span></span><br><span class="line">    <span class="string">&quot;no-undef&quot;</span>: <span class="number">2</span>, <span class="comment">// 禁用未声明的变量</span></span><br><span class="line">    <span class="string">&quot;vue/require-v-for-key&quot;</span>: <span class="number">1</span>, <span class="comment">// 当v-for写在自定义组件上时，它需要同时使用v-bind：key。在其他元素上，v-bind：key也最好写。</span></span><br><span class="line">    <span class="string">&quot;no-unused-vars&quot;</span>: <span class="number">1</span>, <span class="comment">// 禁止出现未使用过的变量</span></span><br><span class="line">    <span class="string">&quot;vars-on-top&quot;</span>: <span class="number">1</span>, <span class="comment">// 要求所有的 var 声明出现在它们所在的作用域顶部</span></span><br><span class="line">    <span class="string">&quot;prefer-destructuring&quot;</span>: <span class="number">0</span>, <span class="comment">// 优先使用数组和对象解构</span></span><br><span class="line">    <span class="string">&quot;no-useless-concat&quot;</span>: <span class="number">1</span>, <span class="comment">// 禁止不必要的字符串字面量或模板字面量的连接</span></span><br><span class="line">    <span class="string">&quot;no-useless-escape&quot;</span>: <span class="number">0</span>, <span class="comment">// 禁止不必要的转义字符</span></span><br><span class="line">    <span class="string">&quot;consistent-return&quot;</span>: <span class="number">1</span>, <span class="comment">// 要求 return 语句要么总是指定返回的值，要么不指定</span></span><br><span class="line">    <span class="attr">camelcase</span>: <span class="number">0</span>, <span class="comment">// 强制使用骆驼拼写法命名约定</span></span><br><span class="line">    <span class="string">&quot;no-redeclare&quot;</span>: <span class="number">1</span>, <span class="comment">// 禁止多次声明同一变量</span></span><br><span class="line">    <span class="string">&quot;array-callback-return&quot;</span>: <span class="number">1</span>, <span class="comment">// 强制数组方法的回调函数中有 return 语句,Array有几种过滤，映射和折叠的方法。如果我们忘记return在这些回调中写入语句，那可能是一个错误。</span></span><br><span class="line">    <span class="string">&quot;default-case&quot;</span>: <span class="number">1</span>, <span class="comment">// 要求 switch 语句中有 default 分支</span></span><br><span class="line">    <span class="string">&quot;no-fallthrough&quot;</span>: <span class="number">1</span>, <span class="comment">// 禁止 case 语句落空</span></span><br><span class="line">    <span class="string">&quot;no-lonely-if&quot;</span>: <span class="number">1</span>, <span class="comment">// 禁止 if 作为唯一的语句出现在 else 语句中.如果一个if陈述是该else块中唯一的陈述，那么使用一个else if表格通常会更清晰。</span></span><br><span class="line">    <span class="string">&quot;no-irregular-whitespace&quot;</span>: <span class="number">1</span>, <span class="comment">// 禁止在字符串和注释之外不规则的空白</span></span><br><span class="line">    <span class="string">&quot;prefer-const&quot;</span>: <span class="number">0</span>, <span class="comment">// 要求使用 const 声明那些声明后不再被修改的变量.如果一个变量从不重新分配，使用const声明更好。const 声明告诉读者，“这个变量永远不会被重新分配，”减少认知负荷并提高可维护性。</span></span><br><span class="line">    <span class="string">&quot;no-use-before-define&quot;</span>: <span class="number">1</span>, <span class="comment">// 禁止在变量定义之前使用它们</span></span><br><span class="line">    <span class="string">&quot;@typescript-eslint/explicit-module-boundary-types&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;react/react-in-jsx-scope&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;@typescript-eslint/no-var-requires&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">overrides</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">files</span>: [<span class="string">&quot;**/__tests__/*.&#123;j,t&#125;s?(x)&quot;</span>],</span><br><span class="line">      <span class="attr">env</span>: &#123;</span><br><span class="line">        <span class="attr">mocha</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在根目录下建立 prettier 配置文件： <strong>.prettierrc.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @module .prettierrc</span></span><br><span class="line"><span class="comment"> * @author: huoyou</span></span><br><span class="line"><span class="comment"> * @description: eslint配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">printWidth</span>: <span class="number">100</span>, <span class="comment">// 单行输出（不折行）的（最大）长度</span></span><br><span class="line">  <span class="attr">tabWidth</span>: <span class="number">2</span>, <span class="comment">// 每个缩进级别的空格数</span></span><br><span class="line">  <span class="attr">tabs</span>: <span class="literal">false</span>, <span class="comment">// 使用制表符 (tab) 缩进行而不是空格 (space)。</span></span><br><span class="line">  <span class="attr">semi</span>: <span class="literal">true</span>, <span class="comment">// 是否在语句末尾打印分号</span></span><br><span class="line">  <span class="attr">singleQuote</span>: <span class="literal">true</span>, <span class="comment">// 是否使用单引号</span></span><br><span class="line">  <span class="attr">quoteProps</span>: <span class="string">&quot;as-needed&quot;</span>, <span class="comment">// 仅在需要时在对象属性周围添加引号</span></span><br><span class="line">  <span class="attr">jsxSingleQuote</span>: <span class="literal">false</span>, <span class="comment">// jsx 不使用单引号，而使用双引号</span></span><br><span class="line">  <span class="attr">trailingComma</span>: <span class="string">&quot;none&quot;</span>, <span class="comment">// 去除对象最末尾元素跟随的逗号</span></span><br><span class="line">  <span class="attr">bracketSpacing</span>: <span class="literal">true</span>, <span class="comment">// 是否在对象属性添加空格</span></span><br><span class="line">  <span class="attr">jsxBracketSameLine</span>: <span class="literal">true</span>, <span class="comment">// 将 &gt; 多行 JSX 元素放在最后一行的末尾，而不是单独放在下一行（不适用于自闭元素）,默认false,这里选择&gt;不另起一行</span></span><br><span class="line">  <span class="attr">arrowParens</span>: <span class="string">&quot;always&quot;</span>, <span class="comment">// 箭头函数，只有一个参数的时候，也需要括号</span></span><br><span class="line">  <span class="attr">proseWrap</span>: <span class="string">&quot;always&quot;</span>, <span class="comment">// 当超出print width（上面有这个参数）时就折行</span></span><br><span class="line">  <span class="attr">htmlWhitespaceSensitivity</span>: <span class="string">&quot;ignore&quot;</span>, <span class="comment">// 指定 HTML 文件的全局空白区域敏感度, &quot;ignore&quot; - 空格被认为是不敏感的</span></span><br><span class="line">  <span class="attr">vueIndentScriptAndStyle</span>: <span class="literal">false</span>, <span class="comment">// 在VUE文件中不要缩进脚本和样式标记</span></span><br><span class="line">  <span class="attr">stylelintIntegration</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">endOfLine</span>: <span class="string">&quot;auto&quot;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="配置-stylelint"><a href="#配置-stylelint" class="headerlink" title="配置 stylelint"></a>配置 stylelint</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i stylelint stylelint-scss stylelint-config-standard-scss stylelint-config-prettier -D</span><br></pre></td></tr></table></figure><p>根目录下新增 <code>**.stylelintrc.js**</code>文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@module</span> .stylelintrc</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: huoyou</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: css校验配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">extends</span>: [<span class="string">&quot;stylelint-config-standard-scss&quot;</span>, <span class="string">&quot;stylelint-config-prettier&quot;</span>],</span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&quot;declaration-colon-space-after&quot;</span>: <span class="string">&quot;always-single-line&quot;</span>,</span><br><span class="line">    <span class="string">&quot;declaration-colon-space-before&quot;</span>: <span class="string">&quot;never&quot;</span>,</span><br><span class="line">    <span class="string">&quot;declaration-block-trailing-semicolon&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;declaration-block-semicolon-space-before&quot;</span>: <span class="string">&quot;never&quot;</span>,</span><br><span class="line">    <span class="string">&quot;media-feature-name-no-unknown&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;selector-pseudo-class-no-unknown&quot;</span>: [</span><br><span class="line">      <span class="literal">true</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">ignorePseudoClasses</span>: [<span class="string">&quot;deep&quot;</span>],</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;rule-empty-line-before&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;always&quot;</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">ignore</span>: [<span class="string">&quot;after-comment&quot;</span>, <span class="string">&quot;first-nested&quot;</span>],</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">// style calc中使用v-bind</span></span><br><span class="line">    <span class="string">&quot;function-calc-no-unspaced-operator&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="引入-jest-测试"><a href="#引入-jest-测试" class="headerlink" title="引入 jest 测试"></a>引入 jest 测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i @vue/test-utils@next jest vue-jest@next ts-jest @types/jest eslint-plugin-jest -D</span><br></pre></td></tr></table></figure><p>创建 <strong>jest.config.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">moduleFileExtensions</span>: [<span class="string">&quot;vue&quot;</span>, <span class="string">&quot;js&quot;</span>, <span class="string">&quot;ts&quot;</span>],</span><br><span class="line">  <span class="attr">preset</span>: <span class="string">&quot;ts-jest&quot;</span>,</span><br><span class="line">  <span class="attr">testEnvironment</span>: <span class="string">&quot;jsdom&quot;</span>,</span><br><span class="line">  <span class="attr">transform</span>: &#123;</span><br><span class="line">    <span class="string">&quot;^.+\\.vue$&quot;</span>: <span class="string">&quot;vue-jest&quot;</span>, <span class="comment">// vue 文件用 vue-jest 转换</span></span><br><span class="line">    <span class="string">&quot;^.+\\.ts$&quot;</span>: <span class="string">&quot;ts-jest&quot;</span>, <span class="comment">// ts 文件用 ts-jest 转换</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 匹配 __tests__ 目录下的 .js/.ts 文件 或其他目录下的 xx.test.js/ts xx.spec.js/ts</span></span><br><span class="line">  <span class="attr">testRegex</span>: <span class="string">&quot;(/__tests__/.*|(\\.|/)(test|spec))\\.(ts)$&quot;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在上面的 <code>jest.config.js</code> 文件中，我们配置只匹配 <code>__tests__</code> 目录下的任意 <code>.ts</code> 文件或其他目录下的 <code>xx.test.ts</code>/<code>xx.spec.ts</code> 文件进行单元测试。</p><p>这里，我们在项目根目录下创建 <code>tests</code> 目录来存储单元测试文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">├── src/</span><br><span class="line">└── tests/                           <span class="comment">// 单元测试目录</span></span><br><span class="line">    ├── <span class="title class_">Test</span>.<span class="property">spec</span>.<span class="property">ts</span>                 <span class="comment">// Test 组件测试</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>Test.vue</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;test-container page-container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;page-title&quot;</span>&gt;</span>Unit Test Page<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>count is: &#123;&#123; count &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;increment&quot;</span>&gt;</span>increment<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">import</span> &#123; defineComponent, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineComponent</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">name</span>: <span class="string">&#x27;Vuex&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> count = ref&lt;number&gt;(<span class="number">0</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> <span class="title function_">increment</span> = (<span class="params"></span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        count.<span class="property">value</span> += <span class="number">1</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> &#123; count, increment &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br></pre></td></tr></table></figure><ul><li>Test.spec.ts</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mount &#125; <span class="keyword">from</span> <span class="string">&quot;@vue/test-utils&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Test</span> <span class="keyword">from</span> <span class="string">&quot;../src/views/Test.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">test</span>(<span class="string">&quot;Test.vue&quot;</span>, <span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> wrapper = <span class="title function_">mount</span>(<span class="title class_">Test</span>);</span><br><span class="line">  <span class="title function_">expect</span>(wrapper.<span class="title function_">html</span>()).<span class="title function_">toContain</span>(<span class="string">&quot;Unit Test Page&quot;</span>);</span><br><span class="line">  <span class="title function_">expect</span>(wrapper.<span class="title function_">html</span>()).<span class="title function_">toContain</span>(<span class="string">&quot;count is: 0&quot;</span>);</span><br><span class="line">  <span class="keyword">await</span> wrapper.<span class="title function_">find</span>(<span class="string">&quot;button&quot;</span>).<span class="title function_">trigger</span>(<span class="string">&quot;click&quot;</span>);</span><br><span class="line">  <span class="title function_">expect</span>(wrapper.<span class="title function_">html</span>()).<span class="title function_">toContain</span>(<span class="string">&quot;count is: 1&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>TypeScript 的编译器也会提示 jest 的方法和类型找不到，我们还需把 @types/jest 添加根目录下的  <code>ts.config.json</code>（TypeScript 配置文件）中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&quot;types&quot;</span>: [<span class="string">&quot;vite/client&quot;</span>, <span class="string">&quot;jest&quot;</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加 eslint-plugin-jest 到 ESLint 配置文件  <code>.eslintrc.js</code>  中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">extends</span>: [</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&#x27;plugin:jest/recommended&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在  <strong>package.json</strong>  命令（_scripts_）中加入 “test”: “jest” 。 如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;dev&quot;</span>: <span class="string">&quot;vite&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build&quot;</span>: <span class="string">&quot;vite build&quot;</span>,</span><br><span class="line">    <span class="string">&quot;test&quot;</span>: <span class="string">&quot;jest&quot;</span></span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><p>运行  <strong>yarn test</strong>  查看测试结果</p><p>使用 husky 命令在  <code>.husky</code>  目录下自动创建  <code>pre-push</code> hook 文件，并在此执行单元测试命令  <code>npm run test</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx husky add .husky/pre-push <span class="string">&quot;npm run test <span class="variable">$1</span>&quot;</span></span><br></pre></td></tr></table></figure><p>{</p><h2 id="husky-和-lint-staged-构建代码工作流"><a href="#husky-和-lint-staged-构建代码工作流" class="headerlink" title="husky 和 lint-staged 构建代码工作流"></a>husky 和 lint-staged 构建代码工作流</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i husky lint-staged @commitlint/cli @commitlint/config-conventional -D</span><br></pre></td></tr></table></figure><ul><li><code>@commitlint/cli</code>: commitlint 的命令行工具</li><li><code>@commitlint/config-conventional</code>: commitlint 的规则集</li><li><code>husky</code>: 阻止不符合提交规则的 git 记录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx husky-init</span><br></pre></td></tr></table></figure><p>修改 ./husky/pre-commit 钩子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!<span class="regexp">/bin/</span>sh</span><br><span class="line">. <span class="string">&quot;$(dirname &quot;</span>$0<span class="string">&quot;)/_/husky.sh&quot;</span></span><br><span class="line"></span><br><span class="line">npx lint-staged</span><br></pre></td></tr></table></figure><p>修改 ./husky/commit-msg</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!<span class="regexp">/bin/</span>sh</span><br><span class="line">. <span class="string">&quot;$(dirname &quot;</span>$0<span class="string">&quot;)/_/husky.sh&quot;</span></span><br><span class="line"></span><br><span class="line">npx --no-install commitlint --config .<span class="property">commitlintrc</span>.<span class="property">js</span> --edit $1</span><br></pre></td></tr></table></figure><p>package.json 配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">   <span class="string">&quot;fix&quot;</span>: <span class="string">&quot;eslint --fix --ext .js,.jsx,.ts,.tsx,.vue,.html src&quot;</span>,</span><br><span class="line">   <span class="string">&quot;lint&quot;</span>: <span class="string">&quot;eslint --ext .js,.jsx,.ts,.tsx,.vue,.html src&quot;</span>,</span><br><span class="line">   <span class="string">&quot;stylelint&quot;</span>: <span class="string">&quot;stylelint --fix .css,.less,.scss src&quot;</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;lint-staged&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;src/**/*.&#123;js,jsx,ts,.tsx,vue,html,md&#125;&quot;</span>: <span class="string">&quot;eslint --config .eslintrc.js&quot;</span>,</span><br><span class="line">  <span class="string">&quot;src/**/*.&#123;css,less,scss&#125;&quot;</span>: <span class="string">&quot;stylelint --config .stylelintrc.js&quot;</span>,</span><br><span class="line">  <span class="string">&quot;*.&#123;ts,tsx,js,json,html,yml,css,less,md&#125;&quot;</span>: <span class="string">&quot;prettier --write&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根目录创建** .commitlintrc.js**</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">extends</span>: [<span class="string">&quot;@commitlint/config-conventional&quot;</span>],</span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type-enum&quot;</span>: [</span><br><span class="line">      <span class="number">2</span>,</span><br><span class="line">      <span class="string">&quot;always&quot;</span>,</span><br><span class="line">      [</span><br><span class="line">        <span class="string">&quot;feat&quot;</span>, <span class="comment">// 新功能（feature）</span></span><br><span class="line">        <span class="string">&quot;fix&quot;</span>, <span class="comment">// 修补bug</span></span><br><span class="line">        <span class="string">&quot;docs&quot;</span>, <span class="comment">// 文档（documentation）</span></span><br><span class="line">        <span class="string">&quot;style&quot;</span>, <span class="comment">// 格式（不影响代码运行的变动）</span></span><br><span class="line">        <span class="string">&quot;refactor&quot;</span>, <span class="comment">// 重构（即不是新增功能，也不是修改bug的代码变动）</span></span><br><span class="line">        <span class="string">&quot;test&quot;</span>, <span class="comment">// 增加测试</span></span><br><span class="line">        <span class="string">&quot;revert&quot;</span>, <span class="comment">// 回滚</span></span><br><span class="line">        <span class="string">&quot;config&quot;</span>, <span class="comment">// 构建过程或辅助工具的变动</span></span><br><span class="line">        <span class="string">&quot;chore&quot;</span>, <span class="comment">// 其他改动</span></span><br><span class="line">      ],</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;type-empty&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;never&quot;</span>], <span class="comment">// 提交不符合规范时,也可以提交,但是会有警告</span></span><br><span class="line">    <span class="string">&quot;subject-empty&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;never&quot;</span>], <span class="comment">// 提交不符合规范时,也可以提交,但是会有警告</span></span><br><span class="line">    <span class="string">&quot;subject-full-stop&quot;</span>: [<span class="number">0</span>, <span class="string">&quot;never&quot;</span>],</span><br><span class="line">    <span class="string">&quot;subject-case&quot;</span>: [<span class="number">0</span>, <span class="string">&quot;never&quot;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="vscode-保存自动格式化"><a href="#vscode-保存自动格式化" class="headerlink" title="vscode 保存自动格式化"></a>vscode 保存自动格式化</h2><p>安装插件 ESlint Prettier-Code formatter Stylelint Vetur Vue VSCode Snippets<br>注意: vue3 安装 volar、Vue 3 Snippets 插件, 同时 disabled Vetur Vue VSCode Snippets 这两个插件<br><strong>settings.json</strong>配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// 基础设置</span></span><br><span class="line">  <span class="string">&quot;editor.detectIndentation&quot;</span>: <span class="literal">false</span>, <span class="comment">// 重置 editor.tabSize属性</span></span><br><span class="line">  <span class="string">&quot;editor.tabSize&quot;</span>: <span class="number">2</span>, <span class="comment">// 缩进2单元格</span></span><br><span class="line">  <span class="string">&quot;files.autoSave&quot;</span>: <span class="string">&quot;afterDelay&quot;</span>, <span class="comment">// 打开自动保存</span></span><br><span class="line">  <span class="string">&quot;editor.fontSize&quot;</span>: <span class="number">14</span>, <span class="comment">// 默认字体大小</span></span><br><span class="line">  <span class="string">&quot;editor.lineHeight&quot;</span>: <span class="number">20</span>, <span class="comment">// 行高</span></span><br><span class="line">  <span class="string">&quot;editor.mouseWheelZoom&quot;</span>: <span class="literal">false</span>, <span class="comment">// 通过使用鼠标滚轮同时按住 Ctrl 可缩放编辑器的字体</span></span><br><span class="line">  <span class="string">&quot;editor.wordWrap&quot;</span>: <span class="string">&quot;on&quot;</span>, <span class="comment">// 行太长自动换行</span></span><br><span class="line">  <span class="string">&quot;editor.formatOnPaste&quot;</span>: <span class="literal">false</span>, <span class="comment">// 编辑粘贴自动格式化</span></span><br><span class="line">  <span class="string">&quot;html.format.wrapAttributes&quot;</span>: <span class="string">&quot;auto&quot;</span>, <span class="comment">// 格式化html的标签属性</span></span><br><span class="line">  <span class="string">&quot;terminal.integrated.rendererType&quot;</span>: <span class="string">&quot;dom&quot;</span>,</span><br><span class="line">  <span class="string">&quot;search.followSymlinks&quot;</span>: <span class="literal">false</span>, <span class="comment">// 关闭rg.exe进程</span></span><br><span class="line">  <span class="string">&quot;workbench.startupEditor&quot;</span>: <span class="string">&quot;welcomePage&quot;</span>, <span class="comment">// 图标</span></span><br><span class="line">  <span class="string">&quot;workbench.iconTheme&quot;</span>: <span class="string">&quot;vscode-icons&quot;</span>,</span><br><span class="line">  <span class="string">&quot;workbench.colorTheme&quot;</span>: <span class="string">&quot;escook dark soft&quot;</span>,</span><br><span class="line">  <span class="string">&quot;files.saveConflictResolution&quot;</span>: <span class="string">&quot;overwriteFileOnDisk&quot;</span>,</span><br><span class="line">  <span class="string">&quot;explorer.confirmDelete&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 格式化校验</span></span><br><span class="line">  <span class="string">&quot;javascript.validate.enable&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;esbenp.prettier-vscode&quot;</span>, <span class="comment">// 设置默认格式化工具为prettier</span></span><br><span class="line">  <span class="string">&quot;editor.formatOnSave&quot;</span>: <span class="literal">false</span>, <span class="comment">// 保存自动格式化</span></span><br><span class="line">  <span class="string">&quot;editor.codeActionsOnSave&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;source.fixAll.eslint&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;source.fixAll.stylelint&quot;</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;vetur.format.enable&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;vetur.validation.template&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;vetur.validation.interpolation&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;vetur.validation.style&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;vetur.languageFeatures.codeActions&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;vetur.validation.script&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// &quot;vetur.format.defaultFormatter.html&quot;: &quot;js-beautify-html&quot;,</span></span><br><span class="line">  <span class="comment">// &quot;vetur.format.defaultFormatterOptions&quot;: &#123;</span></span><br><span class="line">  <span class="comment">//   &quot;js-beautify-html&quot;: &#123;</span></span><br><span class="line">  <span class="comment">//     &quot;wrap_attributes&quot;: &quot;force-aligned&quot; //属性强制折行对齐</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// &#125;,</span></span><br><span class="line">  <span class="string">&quot;eslint.format.enable&quot;</span>: <span class="literal">true</span>, <span class="comment">//是否开启vscode的eslint</span></span><br><span class="line">  <span class="string">&quot;eslint.options&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">//指定vscode的eslint所处理的文件的后缀</span></span><br><span class="line">    <span class="string">&quot;extensions&quot;</span>: [<span class="string">&quot;.js&quot;</span>, <span class="string">&quot;.jsx&quot;</span>, <span class="string">&quot;.vue&quot;</span>, <span class="string">&quot;.react&quot;</span>, <span class="string">&quot;.ts&quot;</span>, <span class="string">&quot;.tsx&quot;</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// eslint 校验准则</span></span><br><span class="line">  <span class="string">&quot;eslint.validate&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;vue&quot;</span>,</span><br><span class="line">    <span class="string">&quot;html&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jsx&quot;</span>,</span><br><span class="line">    <span class="string">&quot;tsx&quot;</span>,</span><br><span class="line">    <span class="string">&quot;javascript&quot;</span>,</span><br><span class="line">    <span class="string">&quot;typescript&quot;</span>,</span><br><span class="line">    <span class="string">&quot;javascriptreact&quot;</span>,</span><br><span class="line">    <span class="string">&quot;typescriptreact&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;stylelint.autoFix&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;stylelint.enable&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;css.validate&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;less.validate&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;scss.validate&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;css.lint.unknownAtRules&quot;</span>: <span class="string">&quot;ignore&quot;</span>,</span><br><span class="line">  <span class="string">&quot;scss.lint.unknownAtRules&quot;</span>: <span class="string">&quot;ignore&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="生成自定义-changelog"><a href="#生成自定义-changelog" class="headerlink" title="生成自定义 changelog"></a>生成自定义 changelog</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm i conventional-changelog-cli conventional-changelog-custom-config -D</span><br></pre></td></tr></table></figure><p>package.json 下加入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;log&quot;</span>: <span class="string">&quot;conventional-changelog -p custom-config -i CHANGELOG.md -s -r 0  -n ./changelog-option.js&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;changelog&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;bugsUrl&quot;</span>: <span class="string">&quot;https://github.com/huoyou/vue_cli3/issues/&quot;</span>,</span><br><span class="line">  <span class="string">&quot;emojis&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;authorName&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;authorEmail&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根目录下添加 changelog-option.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> compareFunc = <span class="built_in">require</span>(<span class="string">&quot;compare-func&quot;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">writerOpts</span>: &#123;</span><br><span class="line">    <span class="attr">transform</span>: <span class="function">(<span class="params">commit, context</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> discard = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">const</span> issues = [];</span><br><span class="line"></span><br><span class="line">      commit.<span class="property">notes</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">note</span>) =&gt;</span> &#123;</span><br><span class="line">        note.<span class="property">title</span> = <span class="string">&quot;BREAKING CHANGES&quot;</span>;</span><br><span class="line">        discard = <span class="literal">false</span>;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">if</span> (commit.<span class="property">type</span> === <span class="string">&quot;feat&quot;</span>) &#123;</span><br><span class="line">        commit.<span class="property">type</span> = <span class="string">&quot;✨ Features | 新功能&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (commit.<span class="property">type</span> === <span class="string">&quot;fix&quot;</span>) &#123;</span><br><span class="line">        commit.<span class="property">type</span> = <span class="string">&quot;🐛 Bug Fixes | Bug 修复&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (commit.<span class="property">type</span> === <span class="string">&quot;perf&quot;</span>) &#123;</span><br><span class="line">        commit.<span class="property">type</span> = <span class="string">&quot;⚡ Performance Improvements | 性能优化&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (commit.<span class="property">type</span> === <span class="string">&quot;revert&quot;</span> || commit.<span class="property">revert</span>) &#123;</span><br><span class="line">        commit.<span class="property">type</span> = <span class="string">&quot;⏪ Reverts | 回退&quot;</span>;</span><br><span class="line">        <span class="comment">// &#125; else if (discard) &#123;</span></span><br><span class="line">        <span class="comment">//   return;</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (commit.<span class="property">type</span> === <span class="string">&quot;docs&quot;</span>) &#123;</span><br><span class="line">        commit.<span class="property">type</span> = <span class="string">&quot;📝 Documentation | 文档&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (commit.<span class="property">type</span> === <span class="string">&quot;style&quot;</span>) &#123;</span><br><span class="line">        commit.<span class="property">type</span> = <span class="string">&quot;💄 Styles | 风格&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (commit.<span class="property">type</span> === <span class="string">&quot;refactor&quot;</span>) &#123;</span><br><span class="line">        commit.<span class="property">type</span> = <span class="string">&quot;♻ Code Refactoring | 代码重构&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (commit.<span class="property">type</span> === <span class="string">&quot;test&quot;</span>) &#123;</span><br><span class="line">        commit.<span class="property">type</span> = <span class="string">&quot;✅ Tests | 测试&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (commit.<span class="property">type</span> === <span class="string">&quot;build&quot;</span>) &#123;</span><br><span class="line">        commit.<span class="property">type</span> = <span class="string">&quot;👷‍ Build System | 构建&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (commit.<span class="property">type</span> === <span class="string">&quot;ci&quot;</span>) &#123;</span><br><span class="line">        commit.<span class="property">type</span> = <span class="string">&quot;🔧 Continuous Integration | CI 配置&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (commit.<span class="property">type</span> === <span class="string">&quot;chore&quot;</span>) &#123;</span><br><span class="line">        commit.<span class="property">type</span> = <span class="string">&quot;🎫 Chores | 其他更新&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        commit.<span class="property">type</span> = <span class="string">&quot;💩 others | 未命名&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (commit.<span class="property">scope</span> === <span class="string">&quot;*&quot;</span>) &#123;</span><br><span class="line">        commit.<span class="property">scope</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">typeof</span> commit.<span class="property">hash</span> === <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        commit.<span class="property">hash</span> = commit.<span class="property">hash</span>.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">typeof</span> commit.<span class="property">subject</span> === <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> url = context.<span class="property">repository</span></span><br><span class="line">          ? <span class="string">`<span class="subst">$&#123;context.host&#125;</span>/<span class="subst">$&#123;context.owner&#125;</span>/<span class="subst">$&#123;context.repository&#125;</span>`</span></span><br><span class="line">          : context.<span class="property">repoUrl</span>;</span><br><span class="line">        <span class="keyword">if</span> (url) &#123;</span><br><span class="line">          url = <span class="string">`<span class="subst">$&#123;url&#125;</span>/issues/`</span>;</span><br><span class="line">          <span class="comment">// Issue URLs.</span></span><br><span class="line">          commit.<span class="property">subject</span> = commit.<span class="property">subject</span>.<span class="title function_">replace</span>(<span class="regexp">/#([0-9]+)/g</span>, <span class="function">(<span class="params">_, issue</span>) =&gt;</span> &#123;</span><br><span class="line">            issues.<span class="title function_">push</span>(issue);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">`[#<span class="subst">$&#123;issue&#125;</span>](<span class="subst">$&#123;url&#125;</span><span class="subst">$&#123;issue&#125;</span>)`</span>;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (context.<span class="property">host</span>) &#123;</span><br><span class="line">          <span class="comment">// User URLs.</span></span><br><span class="line">          commit.<span class="property">subject</span> = commit.<span class="property">subject</span>.<span class="title function_">replace</span>(</span><br><span class="line">            <span class="regexp">/\B@([a-z0-9](?:-?[a-z0-9/])&#123;0,38&#125;)/g</span>,</span><br><span class="line">            <span class="function">(<span class="params">_, username</span>) =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">if</span> (username.<span class="title function_">includes</span>(<span class="string">&quot;/&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">`@<span class="subst">$&#123;username&#125;</span>`</span>;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">return</span> <span class="string">`[@<span class="subst">$&#123;username&#125;</span>](<span class="subst">$&#123;context.host&#125;</span>/<span class="subst">$&#123;username&#125;</span>)`</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          );</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// remove references that already appear in the subject</span></span><br><span class="line">      commit.<span class="property">references</span> = commit.<span class="property">references</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">reference</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (issues.<span class="title function_">indexOf</span>(reference.<span class="property">issue</span>) === -<span class="number">1</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span> commit;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">groupBy</span>: <span class="string">&quot;type&quot;</span>,</span><br><span class="line">    <span class="attr">commitGroupsSort</span>: <span class="string">&quot;title&quot;</span>,</span><br><span class="line">    <span class="attr">commitsSort</span>: [<span class="string">&quot;scope&quot;</span>, <span class="string">&quot;subject&quot;</span>],</span><br><span class="line">    <span class="attr">noteGroupsSort</span>: <span class="string">&quot;title&quot;</span>,</span><br><span class="line">    <span class="attr">notesSort</span>: compareFunc,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prettier </tag>
            
            <tag> Stylelint </tag>
            
            <tag> Eslin </tag>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EventLoop</title>
      <link href="/archives/code/event-loop.html"/>
      <url>/archives/code/event-loop.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217112631141.png" alt="image-20211217112631141"></p><ul><li>因为我们仅仅需要记住几个 MicroTask 即可，排除法！别的都是 MacroTask。MicroTask 包括：Process.nextTick、Promise.then catch finally(注意我不是说 Promise)、MutationObserver。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br><span class="line">  process.<span class="title function_">nextTick</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>);</span><br><span class="line">    <span class="title function_">resolve</span>();</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">5</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">process.<span class="title function_">nextTick</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">6</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">7</span>);</span><br><span class="line">  <span class="title function_">resolve</span>();</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">8</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">9</span>);</span><br><span class="line">  process.<span class="title function_">nextTick</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">10</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">11</span>);</span><br><span class="line">    <span class="title function_">resolve</span>();</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">12</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 1,7,6,8,2,4,3,5,9,11,10,12</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">setImmediate</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>);</span><br><span class="line">  <span class="title function_">resolve</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>);</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">5</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">6</span>);</span><br><span class="line">process.<span class="title function_">nextTick</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">7</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">8</span>);</span><br><span class="line"><span class="comment">// 3 4 6 8 7 5 1 2</span></span><br><span class="line"><span class="comment">// micro-task   优先级 process.nextTick 高于 Promise.then</span></span><br><span class="line"><span class="comment">// macro-task   浏览器内核下，优先级 setImmediate 高于 setTimeout</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/archives/other/markdown.html"/>
      <url>/archives/other/markdown.html</url>
      
        <content type="html"><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><div class="tabs" id="title"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#title-1">代码示例</button></li><li class="tab active"><button type="button" data-href="#title-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="title-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 三级标题</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="title-2"><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><div class="tabs" id="title"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#title-1">代码示例</button></li><li class="tab active"><button type="button" data-href="#title-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="title-1"><p>在符号<code>-</code>后加空格使用。如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 无序列表 1</span><br><span class="line"><span class="bullet">-</span> 无序列表 2</span><br><span class="line"><span class="bullet">-</span> 无序列表 3</span><br></pre></td></tr></table></figure><p>如果要控制列表的层级，则需要在符号<code>-</code>前使用空格。如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 无序列表 1</span><br><span class="line"><span class="bullet">-</span> 无序列表 2</span><br><span class="line"><span class="bullet">  -</span> 无序列表 2.1</span><br><span class="line"><span class="bullet">  -</span> 无序列表 2.2</span><br></pre></td></tr></table></figure><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>由于微信原因，最多支持到二级列表</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="title-2"><ul><li>无序列表 1</li><li>无序列表 2</li><li>无序列表 3<ul><li>无序列表 3.1</li><li>无序列表 3.2</li></ul></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><div class="tabs" id="title"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#title-1">代码示例</button></li><li class="tab active"><button type="button" data-href="#title-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="title-1"><p>数字及符号<code>.</code>后加空格后输入内容，如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 有序列表 1</span><br><span class="line"><span class="bullet">2.</span> 有序列表 2</span><br><span class="line"><span class="bullet">3.</span> 有序列表 3</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="title-2"><ol><li>有序列表 1</li><li>有序列表 2</li><li>有序列表 3</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="粗体和斜体"><a href="#粗体和斜体" class="headerlink" title="粗体和斜体"></a>粗体和斜体</h2><div class="tabs" id="title"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#title-1">代码示例</button></li><li class="tab active"><button type="button" data-href="#title-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="title-1"><p>粗体，前后各加两个<code>*</code>。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**这个是粗体**</span></span><br></pre></td></tr></table></figure><p>斜体，前后各加一个<code>*</code>。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*_这个是斜体_*</span></span><br></pre></td></tr></table></figure><p>粗体+斜体，前后加三个<code>*</code>。如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*这个是粗体加斜体*</span>**</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="title-2"><p><strong>这个是粗体</strong><br><em>这个是斜体</em><br><strong><em>这个是粗体加斜体</em></strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><div class="tabs" id="title"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#title-1">代码示例</button></li><li class="tab active"><button type="button" data-href="#title-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="title-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">huoyou博客</span>](<span class="link">https://xmeta.love</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="title-2"><p><a href="https://xmeta.love/">huoyou 博客</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><div class="tabs" id="title"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#title-1">代码示例</button></li><li class="tab active"><button type="button" data-href="#title-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="title-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片描述</span>](<span class="link">https://cdn.jsdelivr.net/gh/huoyou/cdn/hexo/imgs/random.png</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="title-2"><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn/hexo/imgs/random.png" alt="图片描述"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><div class="tabs" id="title"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#title-1">代码示例</button></li><li class="tab active"><button type="button" data-href="#title-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="title-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">---</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="title-2"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><div class="tabs" id="title"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#title-1">代码示例</button></li><li class="tab active"><button type="button" data-href="#title-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="title-1"><p>删除线，前后各使用两个<code>~</code>，如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~这是要被删除的内容。~~</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="title-2"><p><del>这是要被删除的内容。</del></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><div class="tabs" id="title"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#title-1">代码示例</button></li><li class="tab active"><button type="button" data-href="#title-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="title-1"><p>可以使用冒号来定义表格的对齐方式，如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 姓名       | 年龄 |         工作 |      邮箱       |    手机     |</span><br><span class="line">| :--------- | :--: | -----------: | :-------------: | :---------: |</span><br><span class="line">| 小可爱     |  18  |     吃可爱多 | lovely@test.com | 18812345678 |</span><br><span class="line">| 小小勇敢   |  20  |   爬棵勇敢树 | brave@test.com  | 17712345678 |</span><br><span class="line">| 小小小机智 |  22  | 看一本机智书 | smart@test.com  | 16612345678 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="title-2"><table><thead><tr><th align="left">姓名</th><th align="center">年龄</th><th align="right">工作</th><th align="center">邮箱</th><th align="center">手机</th></tr></thead><tbody><tr><td align="left">小可爱</td><td align="center">18</td><td align="right">吃可爱多</td><td align="center"><a href="mailto:&#x6c;&#x6f;&#118;&#x65;&#x6c;&#121;&#x40;&#116;&#x65;&#115;&#x74;&#46;&#x63;&#111;&#109;">&#x6c;&#x6f;&#118;&#x65;&#x6c;&#121;&#x40;&#116;&#x65;&#115;&#x74;&#46;&#x63;&#111;&#109;</a></td><td align="center">18812345678</td></tr><tr><td align="left">小小勇敢</td><td align="center">20</td><td align="right">爬棵勇敢树</td><td align="center"><a href="mailto:&#x62;&#114;&#97;&#118;&#101;&#x40;&#x74;&#x65;&#x73;&#x74;&#x2e;&#x63;&#x6f;&#109;">&#x62;&#114;&#97;&#118;&#101;&#x40;&#x74;&#x65;&#x73;&#x74;&#x2e;&#x63;&#x6f;&#109;</a></td><td align="center">17712345678</td></tr><tr><td align="left">小小小机智</td><td align="center">22</td><td align="right">看一本机智书</td><td align="center"><a href="mailto:&#x73;&#109;&#97;&#114;&#116;&#64;&#x74;&#x65;&#115;&#116;&#46;&#99;&#111;&#x6d;">&#x73;&#109;&#97;&#114;&#116;&#64;&#x74;&#x65;&#115;&#116;&#46;&#99;&#111;&#x6d;</a></td><td align="center">16612345678</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><div class="tabs" id="title"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#title-1">代码示例</button></li><li class="tab active"><button type="button" data-href="#title-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="title-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```javascript</span></span><br><span class="line"><span class="code">var name = &#x27;li&#x27;;</span></span><br><span class="line"><span class="code">````</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="title-2"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;li&quot;</span>;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="内联-HTML"><a href="#内联-HTML" class="headerlink" title="内联 HTML"></a>内联 HTML</h2><div class="tabs" id="title"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#title-1">代码示例</button></li><li class="tab active"><button type="button" data-href="#title-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="title-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;display:block;text-align:right;color:orangered;&quot;</span>&gt;</span></span>橙色居右<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;display:block;text-align:center;color:orangered;&quot;</span>&gt;</span></span>橙色居中<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="title-2"><p><span style="display:block;text-align:right;color:orangered;">橙色居右</span><br><span style="display:block;text-align:center;color:orangered;">橙色居中</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Webstorm配置</title>
      <link href="/archives/settings/webstorm.html"/>
      <url>/archives/settings/webstorm.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-激活码"><a href="#1-激活码" class="headerlink" title="1. 激活码"></a>1. 激活码</h3><p>新授权获取网址:<br><code>V.LSUU.CN</code><br>授权提取码:<br><code>YZVR7WDLV8HHERJK（电脑浏览器打开）</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D6KY031L1G-eyJsaWNlbnNlSWQiOiJENktZMDMxTDFHIiwibGljZW5zZWVOYW1lIjoi5o6I5p2D5Luj55CG5ZWGOiB3d3cuaTkub3JnIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IiIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA3LTIyIiwicGFpZFVwVG8iOiIyMDIwLTA3LTIxIn0seyJjb2RlIjoiQUMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA3LTIyIiwicGFpZFVwVG8iOiIyMDIwLTA3LTIxIn0seyJjb2RlIjoiRFBOIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yMiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yMSJ9LHsiY29kZSI6IlBTIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yMiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yMSJ9LHsiY29kZSI6IkdPIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yMiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yMSJ9LHsiY29kZSI6IkRNIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yMiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yMSJ9LHsiY29kZSI6IkNMIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNy0yMiIsInBhaWRVcFRvIjoiMjAyMC0wNy0yMSJ9LHsiY29kZSI6IlJTMCIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDctMjIiLCJwYWlkVXBUbyI6IjIwMjAtMDctMjEifSx7ImNvZGUiOiJSQyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDctMjIiLCJwYWlkVXBUbyI6IjIwMjAtMDctMjEifSx7ImNvZGUiOiJSRCIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDctMjIiLCJwYWlkVXBUbyI6IjIwMjAtMDctMjEifSx7ImNvZGUiOiJQQyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDctMjIiLCJwYWlkVXBUbyI6IjIwMjAtMDctMjEifSx7ImNvZGUiOiJSTSIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDctMjIiLCJwYWlkVXBUbyI6IjIwMjAtMDctMjEifSx7ImNvZGUiOiJXUyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDctMjIiLCJwYWlkVXBUbyI6IjIwMjAtMDctMjEifSx7ImNvZGUiOiJEQiIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDctMjIiLCJwYWlkVXBUbyI6IjIwMjAtMDctMjEifSx7ImNvZGUiOiJEQyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDctMjIiLCJwYWlkVXBUbyI6IjIwMjAtMDctMjEifSx7ImNvZGUiOiJSU1UiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA3LTIyIiwicGFpZFVwVG8iOiIyMDIwLTA3LTIxIn1dLCJoYXNoIjoiMTM3ODQzMjAvMCIsImdyYWNlUGVyaW9kRGF5cyI6NywiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-hBov92HEvNGvBzS2z190KAPxc9F6XY6jT1daMLlPrpCSEAdQX/955WkyGz+hCa3w/aeNExMEZIv2tALkFDOt857w4PZM8oYZ07s7My1NL7DxX9coFswbC6IIBijkAne9cPV9fSnGt5XcfsAkrF8KW1gj21H4EZGR6Jm4Cn7/j37rG1ASu2uvdoJ4dgCicfi78fvIw+zVvGm7L4cMjsmsilNNrUFPpDuVCp2kfU2ncDWm/M0lu+Dfeo3UO61/ICs9FvYAw0V4d8Q6pExzoqbAGH0IgkrHKJ2YQpKKOz3/+w4SGKhAX+85XYmfmLcUoqAZWaI95yhXN/czf/eeAf3ZEg==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</span><br></pre></td></tr></table></figure><h3 id="2-webstorm-识别-别名"><a href="#2-webstorm-识别-别名" class="headerlink" title="2. webstorm 识别@别名"></a>2. webstorm 识别@别名</h3><p>在 webstorm -&gt; preference -&gt; language &amp; frameworks -&gt; javascript -&gt; webpack 中设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">项目目录/node_modules/@vue/cli-service/webpack.config.js</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Setting </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Webstorm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github加速</title>
      <link href="/archives/tools/switchHosts.html"/>
      <url>/archives/tools/switchHosts.html</url>
      
        <content type="html"><![CDATA[<h2 id="本地修改-host-文件时-激活生效"><a href="#本地修改-host-文件时-激活生效" class="headerlink" title="本地修改 host 文件时, 激活生效"></a>本地修改 host 文件时, 激活生效</h2><ol><li>Windows：在 CMD 窗口输入：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /flushdns</span><br></pre></td></tr></table></figure><ol start="2"><li>Linux 命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nscd restart</span><br><span class="line"><span class="comment"># 如报错则须安装：</span></span><br><span class="line"><span class="built_in">sudo</span> apt install nscd</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"><span class="built_in">sudo</span> /etc/init.d/nscd restart</span><br></pre></td></tr></table></figure><ol start="3"><li>Mac 命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> killall -HUP mDNSResponder</span><br></pre></td></tr></table></figure><h2 id="利用-SwitchHosts-动态修改本地-host-文件-实现快速访问-github"><a href="#利用-SwitchHosts-动态修改本地-host-文件-实现快速访问-github" class="headerlink" title="利用 SwitchHosts 动态修改本地 host 文件, 实现快速访问 github"></a>利用 SwitchHosts 动态修改本地 host 文件, 实现快速访问 github</h2><p>配置参考下面：</p><ul><li>Title: 随意</li><li>Type: Remote</li><li>URL: <a href="https://raw.githubusercontent.com/521xueweihan/GitHub520/master/hosts">https://raw.githubusercontent.com/521xueweihan/GitHub520/master/hosts</a></li><li>Auto Refresh: 最好选 1 hour</li></ul><p><img src="https://cdn.jsdelivr.net/gh/huoyou/cdn//hexo/imgs/image-20211217163657893.png" alt="image-20211217163657893"></p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
